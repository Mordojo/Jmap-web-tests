<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200707 20:26:43.215" rpa="false">
<suite id="s1" name="JMapJenkinsTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-974:Modify the text color of the text annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200707 20:26:44.007" level="INFO">${tc_start} = 1594168004.006798</msg>
<status status="PASS" starttime="20200707 20:26:44.007" endtime="20200707 20:26:44.008"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200707 20:26:44.008" level="INFO">${tc_start} = 1594168004.006798</msg>
<status status="PASS" starttime="20200707 20:26:44.008" endtime="20200707 20:26:44.008"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:44.007" endtime="20200707 20:26:44.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Browser}'=='Chrome'</arg>
<arg>Open Chrome</arg>
<arg>ELSE IF</arg>
<arg>'${Browser}'=='Firefox'</arg>
<arg>Open Firefox</arg>
<arg>ELSE</arg>
<arg>Open Edge</arg>
</arguments>
<kw name="Open Chrome" library="CommonLogin">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
</arguments>
<assign>
<var>${chrome_options}</var>
</assign>
<msg timestamp="20200707 20:26:44.010" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002038D260D30&gt;</msg>
<status status="PASS" starttime="20200707 20:26:44.009" endtime="20200707 20:26:44.010"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:44.010" endtime="20200707 20:26:44.010"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
<arg>chrome_options=${chrome_options}</arg>
</arguments>
<msg timestamp="20200707 20:26:44.011" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20200707 20:26:44.011" endtime="20200707 20:26:47.207"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:44.009" endtime="20200707 20:26:47.207"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:44.009" endtime="20200707 20:26:47.208"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
</arguments>
<msg timestamp="20200707 20:26:47.209" level="INFO">Opening url 'http://localhost:8081/JMap_Web_WorldTest_HTTP'</msg>
<status status="PASS" starttime="20200707 20:26:47.208" endtime="20200707 20:26:47.632"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:47.632" endtime="20200707 20:26:49.776"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200707 20:26:49.777" endtime="20200707 20:26:49.889"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:44.006" endtime="20200707 20:26:49.889"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:49.890" endtime="20200707 20:26:49.918"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:49.918" endtime="20200707 20:26:49.954"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:49.955" endtime="20200707 20:26:50.000"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:50.001" endtime="20200707 20:26:50.002"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:50.003" endtime="20200707 20:26:50.024"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:50.003" endtime="20200707 20:26:50.024"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:50.024" endtime="20200707 20:26:50.046"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200707 20:26:50.047" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200707 20:26:50.047" endtime="20200707 20:26:50.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:51.119" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:50.119" endtime="20200707 20:26:51.120"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:50.000" endtime="20200707 20:26:51.121"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:51.123" endtime="20200707 20:26:51.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:51.131" endtime="20200707 20:26:51.184"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:51.129" endtime="20200707 20:26:51.184"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:51.185" endtime="20200707 20:26:51.213"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200707 20:26:51.214" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200707 20:26:51.213" endtime="20200707 20:26:51.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:52.347" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:51.346" endtime="20200707 20:26:52.347"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:51.121" endtime="20200707 20:26:52.348"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200707 20:26:52.349" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200707 20:26:52.348" endtime="20200707 20:26:52.968"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:53.970" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:52.968" endtime="20200707 20:26:53.970"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:49.890" endtime="20200707 20:26:53.970"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:44.006" endtime="20200707 20:26:53.970"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:53.972" endtime="20200707 20:26:53.973"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200707 20:26:53.982" level="INFO">Page title is 'JMap_Web_WorldTest_HTTP'.</msg>
<status status="PASS" starttime="20200707 20:26:53.973" endtime="20200707 20:26:53.982"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.973" endtime="20200707 20:26:53.982"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.971" endtime="20200707 20:26:53.983"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.971" endtime="20200707 20:26:53.983"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:53.984" endtime="20200707 20:26:54.009"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.983" endtime="20200707 20:26:54.009"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200707 20:26:54.009" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200707 20:26:54.009" endtime="20200707 20:26:54.051"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.983" endtime="20200707 20:26:54.052"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:54.053" endtime="20200707 20:26:54.076"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.052" endtime="20200707 20:26:54.076"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200707 20:26:54.078" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200707 20:26:54.076" endtime="20200707 20:26:54.131"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.052" endtime="20200707 20:26:54.131"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:54.132" endtime="20200707 20:26:54.168"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.132" endtime="20200707 20:26:54.168"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200707 20:26:54.184" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200707 20:26:54.169" endtime="20200707 20:26:54.184"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.168" endtime="20200707 20:26:54.184"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.132" endtime="20200707 20:26:54.184"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:54.186" endtime="20200707 20:26:54.212"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.186" endtime="20200707 20:26:54.212"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200707 20:26:54.213" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200707 20:26:54.212" endtime="20200707 20:26:54.789"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.185" endtime="20200707 20:26:54.789"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.185" endtime="20200707 20:26:54.790"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:54.792" endtime="20200707 20:26:54.814"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.791" endtime="20200707 20:26:54.814"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200707 20:26:54.815" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200707 20:26:54.815" endtime="20200707 20:26:55.361"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.790" endtime="20200707 20:26:55.362"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.790" endtime="20200707 20:26:55.362"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.185" endtime="20200707 20:26:55.363"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:56.365" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:55.363" endtime="20200707 20:26:56.365"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:54.185" endtime="20200707 20:26:56.365"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:56.366" endtime="20200707 20:26:56.390"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.366" endtime="20200707 20:26:56.390"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200707 20:26:56.406" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200707 20:26:56.391" endtime="20200707 20:26:56.406"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.390" endtime="20200707 20:26:56.406"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.365" endtime="20200707 20:26:56.406"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:56.408" endtime="20200707 20:26:56.409"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:56.410" endtime="20200707 20:26:56.430"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.409" endtime="20200707 20:26:56.430"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:56.431" endtime="20200707 20:26:56.492"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200707 20:26:56.493" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200707 20:26:56.493" endtime="20200707 20:26:56.672"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:57.674" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:56.672" endtime="20200707 20:26:57.675"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.407" endtime="20200707 20:26:57.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200707 20:26:58.679" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:57.677" endtime="20200707 20:26:58.680"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.407" endtime="20200707 20:26:58.681"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:26:58.685" endtime="20200707 20:26:58.720"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:58.684" endtime="20200707 20:26:58.720"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200707 20:26:58.756" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200707 20:26:58.722" endtime="20200707 20:26:58.757"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:58.721" endtime="20200707 20:26:58.758"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:58.683" endtime="20200707 20:26:58.758"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:58.682" endtime="20200707 20:26:58.759"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200707 20:26:58.762" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200707 20:26:58.762" endtime="20200707 20:26:58.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:26:59.889" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:58.887" endtime="20200707 20:26:59.890"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:58.760" endtime="20200707 20:26:59.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200707 20:27:00.895" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:26:59.892" endtime="20200707 20:27:00.896"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:56.407" endtime="20200707 20:27:00.897"></status>
</kw>
<status status="PASS" starttime="20200707 20:26:53.971" endtime="20200707 20:27:00.898"></status>
</kw>
<kw name="Verify The Background Color Of The Text Field" library="CommonAnnotationWeb">
<doc>Check annotation text background color by the given text background color value</doc>
<arguments>
<arg>${blackColorField}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:00.901" endtime="20200707 20:27:00.973"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:00.900" endtime="20200707 20:27:00.974"></status>
</kw>
<kw name="Verify Background Color" library="CommonWeb">
<doc>Check for the css backgroud color of the web element located in locator</doc>
<arguments>
<arg>//div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>${color}</arg>
</arguments>
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>${Locator}</arg>
</arguments>
<assign>
<var>${elem}</var>
</assign>
<msg timestamp="20200707 20:27:00.992" level="INFO">${elem} = &lt;selenium.webdriver.remote.webelement.WebElement (session="ba74d7e4b0fa8d105cc0017a329c2ce5", element="b78f2c30-5139-4c57-896c-671b84f2e995")&gt;</msg>
<status status="PASS" starttime="20200707 20:27:00.976" endtime="20200707 20:27:00.993"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${elem}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
</arguments>
<assign>
<var>${getBgColor}</var>
</assign>
<msg timestamp="20200707 20:27:01.016" level="INFO">${getBgColor} = rgba(0, 0, 0, 1)</msg>
<status status="PASS" starttime="20200707 20:27:00.993" endtime="20200707 20:27:01.016"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:01.018" endtime="20200707 20:27:01.019"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.017" endtime="20200707 20:27:01.019"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:00.974" endtime="20200707 20:27:01.019"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:00.898" endtime="20200707 20:27:01.020"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:01.022" endtime="20200707 20:27:01.069"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.021" endtime="20200707 20:27:01.070"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200707 20:27:01.071" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200707 20:27:01.070" endtime="20200707 20:27:01.164"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.021" endtime="20200707 20:27:01.164"></status>
</kw>
<kw name="Select The Drawing Tool Text Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Text Annotation clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:01.168" endtime="20200707 20:27:01.213"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.167" endtime="20200707 20:27:01.213"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200707 20:27:01.215" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200707 20:27:01.214" endtime="20200707 20:27:01.881"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.166" endtime="20200707 20:27:01.882"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.165" endtime="20200707 20:27:01.883"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:01.887" endtime="20200707 20:27:01.952"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.885" endtime="20200707 20:27:01.953"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200707 20:27:01.955" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200707 20:27:01.954" endtime="20200707 20:27:02.091"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:01.884" endtime="20200707 20:27:02.092"></status>
</kw>
<kw name="Choose The Color Via The Text Field" library="CommonAnnotationWeb">
<doc>Choose text color for annotations</doc>
<arguments>
<arg>${greenColorElement}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20200707 20:27:02.278" endtime="20200707 20:27:02.279"></status>
</kw>
<msg timestamp="20200707 20:27:02.283" level="FAIL">TimeoutException: Message: script timeout
  (Session info: chrome=83.0.4103.116)
</msg>
<status status="FAIL" starttime="20200707 20:27:02.094" endtime="20200707 20:27:02.283"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:03.283" endtime="20200707 20:27:03.337"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:02.094" endtime="20200707 20:27:03.337"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
</arguments>
<msg timestamp="20200707 20:27:03.340" level="INFO">Clicking element 'xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]'.</msg>
<status status="PASS" starttime="20200707 20:27:03.339" endtime="20200707 20:27:03.526"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:03.528" endtime="20200707 20:27:03.551"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:03.526" endtime="20200707 20:27:03.551"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
</arguments>
<msg timestamp="20200707 20:27:03.551" level="INFO">Clicking element 'xpath://div[@class='sp-container sp-light sp-alpha-enabled sp-buttons-disabled sp-palette-buttons-disabled sp-initial-disabled']//div[@class='sp-cf sp-palette-row sp-palette-row-1']//span[4]'.</msg>
<status status="PASS" starttime="20200707 20:27:03.551" endtime="20200707 20:27:03.634"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:02.092" endtime="20200707 20:27:03.635"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:03.637" endtime="20200707 20:27:03.667"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:03.636" endtime="20200707 20:27:03.668"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200707 20:27:03.669" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200707 20:27:03.668" endtime="20200707 20:27:03.744"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:03.635" endtime="20200707 20:27:03.745"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:03.748" endtime="20200707 20:27:03.792"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:03.746" endtime="20200707 20:27:03.792"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200707 20:27:03.794" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=30.</msg>
<status status="PASS" starttime="20200707 20:27:03.793" endtime="20200707 20:27:04.368"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:03.746" endtime="20200707 20:27:04.369"></status>
</kw>
<kw name="Verify That The Annotation Type Is" library="CommonAnnotationWeb">
<doc>Check annotation type by the given type value</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>annotationType</arg>
</arguments>
<assign>
<var>${getAnnotationType}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:04.374" endtime="20200707 20:27:04.375"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200707 20:27:04.378" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].annotationType
Without any arguments.</msg>
<msg timestamp="20200707 20:27:04.495" level="INFO">${getAttribute} = Text</msg>
<status status="PASS" starttime="20200707 20:27:04.376" endtime="20200707 20:27:04.495"></status>
</kw>
<msg timestamp="20200707 20:27:04.496" level="INFO">${getAnnotationType} = Text</msg>
<status status="PASS" starttime="20200707 20:27:04.372" endtime="20200707 20:27:04.497"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:04.499" endtime="20200707 20:27:04.500"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:04.498" endtime="20200707 20:27:04.501"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:04.370" endtime="20200707 20:27:04.502"></status>
</kw>
<kw name="Verify That The Annotation Text Color Is" library="CommonAnnotationWeb">
<doc>Check annotation text color by the given text color value</doc>
<arguments>
<arg>${greenColorDrawing}</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>textColor</arg>
</arguments>
<assign>
<var>${getAnnotation}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:04.505" endtime="20200707 20:27:04.506"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200707 20:27:04.508" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].textColor
Without any arguments.</msg>
<msg timestamp="20200707 20:27:04.623" level="INFO">${getAttribute} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200707 20:27:04.507" endtime="20200707 20:27:04.624"></status>
</kw>
<msg timestamp="20200707 20:27:04.625" level="INFO">${getAnnotation} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200707 20:27:04.504" endtime="20200707 20:27:04.625"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${getAnnotation}</arg>
</arguments>
<assign>
<var>${getTextColor}</var>
</assign>
<msg timestamp="20200707 20:27:04.627" level="INFO">${getTextColor} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200707 20:27:04.626" endtime="20200707 20:27:04.628"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:04.630" endtime="20200707 20:27:04.631"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:04.628" endtime="20200707 20:27:04.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200707 20:27:05.634" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:27:04.633" endtime="20200707 20:27:05.634"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:04.502" endtime="20200707 20:27:05.635"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:05.637" endtime="20200707 20:27:05.886"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:05.636" endtime="20200707 20:27:05.886"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200707 20:27:05.888" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200707 20:27:05.887" endtime="20200707 20:27:06.172"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:05.635" endtime="20200707 20:27:06.173"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:06.174" endtime="20200707 20:27:06.485"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:06.173" endtime="20200707 20:27:06.485"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:06.490" endtime="20200707 20:27:06.838"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200707 20:27:06.839" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200707 20:27:06.838" endtime="20200707 20:27:07.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200707 20:27:08.178" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200707 20:27:07.177" endtime="20200707 20:27:08.179"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:06.489" endtime="20200707 20:27:08.180"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:08.181" endtime="20200707 20:27:08.547"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200707 20:27:08.550" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200707 20:27:08.548" endtime="20200707 20:27:09.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200707 20:27:11.068" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200707 20:27:09.067" endtime="20200707 20:27:11.068"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:06.487" endtime="20200707 20:27:11.069"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200707 20:27:11.072" endtime="20200707 20:27:13.263"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200707 20:27:13.269" level="INFO">${tc_end} = 1594168033.268739</msg>
<status status="PASS" starttime="20200707 20:27:13.268" endtime="20200707 20:27:13.270"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200707 20:27:13.272" level="INFO">${tc_duration} = 29.261940956115723</msg>
<status status="PASS" starttime="20200707 20:27:13.270" endtime="20200707 20:27:13.272"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200707 20:27:13.275" level="INFO">${tc_duration} = 0.48769901593526205</msg>
<status status="PASS" starttime="20200707 20:27:13.273" endtime="20200707 20:27:13.275"></status>
</kw>
<msg timestamp="20200707 20:27:13.276" level="INFO">${duration} = 0.48769901593526205</msg>
<status status="PASS" starttime="20200707 20:27:13.266" endtime="20200707 20:27:13.277"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200707 20:27:13.279" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200707 20:27:13.277" endtime="20200707 20:27:13.279"></status>
</kw>
<msg timestamp="20200707 20:27:13.280" level="INFO">${ElapsedTime} = 0.48769901593526205</msg>
<status status="PASS" starttime="20200707 20:27:13.264" endtime="20200707 20:27:13.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:13.282" level="INFO">================================================</msg>
<status status="PASS" starttime="20200707 20:27:13.281" endtime="20200707 20:27:13.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200707 20:27:13.285" level="INFO">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200707 20:27:13.284" endtime="20200707 20:27:13.285"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200707 20:27:13.288" level="INFO">@{listeSuiteName} = [ JMapJenkinsTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditStyleOfAnnotationTests ]</msg>
<status status="PASS" starttime="20200707 20:27:13.286" endtime="20200707 20:27:13.288"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200707 20:27:13.290" level="INFO">Length is 7</msg>
<msg timestamp="20200707 20:27:13.290" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200707 20:27:13.289" endtime="20200707 20:27:13.291"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200707 20:27:13.292" level="INFO">${suiteName} = EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200707 20:27:13.291" endtime="20200707 20:27:13.293"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200707 20:27:13.294" level="INFO">@{suiteName} = [ EditStyleOfAnnotation |  ]</msg>
<status status="PASS" starttime="20200707 20:27:13.293" endtime="20200707 20:27:13.294"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200707 20:27:13.296" level="INFO">${suiteName} = EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200707 20:27:13.295" endtime="20200707 20:27:13.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200707 20:27:13.297" level="INFO">EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200707 20:27:13.296" endtime="20200707 20:27:13.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:13.298" level="INFO">================================================</msg>
<status status="PASS" starttime="20200707 20:27:13.298" endtime="20200707 20:27:13.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200707 20:27:13.299" level="INFO">JM70-974:Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200707 20:27:13.299" endtime="20200707 20:27:13.300"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200707 20:27:13.301" level="INFO">@{listeTestName} = [ JM70-974 | Modify the text color of the text annotation ]</msg>
<status status="PASS" starttime="20200707 20:27:13.300" endtime="20200707 20:27:13.301"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200707 20:27:13.301" level="INFO">Length is 2</msg>
<msg timestamp="20200707 20:27:13.302" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200707 20:27:13.301" endtime="20200707 20:27:13.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200707 20:27:13.303" level="INFO">${tesCaseName} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200707 20:27:13.302" endtime="20200707 20:27:13.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200707 20:27:13.304" level="INFO">Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200707 20:27:13.303" endtime="20200707 20:27:13.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:13.305" level="INFO">================================================</msg>
<status status="PASS" starttime="20200707 20:27:13.305" endtime="20200707 20:27:13.305"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:13.308" endtime="20200707 20:27:15.442"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:15.443" endtime="20200707 20:27:15.444"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:15.444" endtime="20200707 20:27:15.492"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200707 20:27:15.515" level="INFO">${RESULT} = [{'sessionId': 2014219990, 'serverVersion': '7.0 Istanbul build 163', 'userEmailAddress': '', 'sessionExceed': False, 'userFullName': 'userTest1'}]</msg>
<status status="PASS" starttime="20200707 20:27:15.492" endtime="20200707 20:27:15.515"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200707 20:27:15.516" level="INFO">${RESULT} = {'sessionId': 2014219990, 'serverVersion': '7.0 Istanbul build 163', 'userEmailAddress': '', 'sessionExceed': False, 'userFullName': 'userTest1'}</msg>
<status status="PASS" starttime="20200707 20:27:15.516" endtime="20200707 20:27:15.516"></status>
</kw>
<msg timestamp="20200707 20:27:15.516" level="INFO">${BODY} = {'sessionId': 2014219990, 'serverVersion': '7.0 Istanbul build 163', 'userEmailAddress': '', 'sessionExceed': False, 'userFullName': 'userTest1'}</msg>
<status status="PASS" starttime="20200707 20:27:13.307" endtime="20200707 20:27:15.516"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200707 20:27:15.517" level="INFO">${getSessionID} = 2014219990</msg>
<status status="PASS" starttime="20200707 20:27:15.517" endtime="20200707 20:27:15.517"></status>
</kw>
<msg timestamp="20200707 20:27:15.518" level="INFO">${SESSIONID} = 2014219990</msg>
<status status="PASS" starttime="20200707 20:27:15.517" endtime="20200707 20:27:15.518"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200707 20:27:15.519" level="INFO">${getBuild} = 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:15.518" endtime="20200707 20:27:15.519"></status>
</kw>
<msg timestamp="20200707 20:27:15.519" level="INFO">${buildName} = 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:15.518" endtime="20200707 20:27:15.519"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200707 20:27:15.519" level="INFO">${buildName} = JMap 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:15.519" endtime="20200707 20:27:15.520"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:15.520" endtime="20200707 20:27:17.541"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:17.542" endtime="20200707 20:27:17.590"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:17.591" endtime="20200707 20:27:17.612"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:15.520" endtime="20200707 20:27:17.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:17.612" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:17.612" endtime="20200707 20:27:17.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200707 20:27:17.614" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200707 20:27:17.614" endtime="20200707 20:27:17.614"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200707 20:27:18.193" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200707 20:27:17.615" endtime="20200707 20:27:18.194"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:18.196" endtime="20200707 20:27:18.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200707 20:27:18.938" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200707 20:27:18.937" endtime="20200707 20:27:18.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:18.940" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:18.940" endtime="20200707 20:27:18.940"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:17.614" endtime="20200707 20:27:18.941"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200707 20:27:19.565" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200707 20:27:18.941" endtime="20200707 20:27:19.565"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200707 20:27:19.567" level="INFO">Length is 13</msg>
<msg timestamp="20200707 20:27:19.568" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200707 20:27:19.566" endtime="20200707 20:27:19.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200707 20:27:19.569" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200707 20:27:19.568" endtime="20200707 20:27:19.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200707 20:27:19.571" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200707 20:27:19.570" endtime="20200707 20:27:19.571"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200707 20:27:19.572" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200707 20:27:19.572" endtime="20200707 20:27:19.572"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200707 20:27:19.574" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200707 20:27:19.573" endtime="20200707 20:27:19.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:19.575" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:19.574" endtime="20200707 20:27:19.575"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200707 20:27:19.946" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200707 20:27:19.576" endtime="20200707 20:27:19.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200707 20:27:19.949" level="INFO">Length is 1</msg>
<msg timestamp="20200707 20:27:19.949" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200707 20:27:19.947" endtime="20200707 20:27:19.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200707 20:27:19.951" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200707 20:27:19.950" endtime="20200707 20:27:19.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200707 20:27:19.953" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200707 20:27:19.953" endtime="20200707 20:27:19.954"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200707 20:27:19.956" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200707 20:27:19.955" endtime="20200707 20:27:19.957"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200707 20:27:19.958" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200707 20:27:19.958" endtime="20200707 20:27:19.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:19.961" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:19.960" endtime="20200707 20:27:19.962"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200707 20:27:20.400" level="INFO">${latestBuild} = {'id': '894', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 163', 'notes': 'TFIFT-9827 JMap Server : An error occurred while adding a new element having an external form&lt;/br&gt;', 'active': '1'...</msg>
<status status="PASS" starttime="20200707 20:27:19.962" endtime="20200707 20:27:20.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200707 20:27:20.403" level="INFO">{'id': '894', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 163', 'notes': 'TFIFT-9827 JMap Server : An error occurred while adding a new element having an external form&lt;/br&gt;', 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-07-07 19:43:13'}</msg>
<status status="PASS" starttime="20200707 20:27:20.402" endtime="20200707 20:27:20.404"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200707 20:27:20.405" level="INFO">Length is 9</msg>
<msg timestamp="20200707 20:27:20.406" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200707 20:27:20.404" endtime="20200707 20:27:20.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200707 20:27:20.408" level="INFO">${latestBuildID} = 894</msg>
<status status="PASS" starttime="20200707 20:27:20.407" endtime="20200707 20:27:20.408"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200707 20:27:20.410" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:20.409" endtime="20200707 20:27:20.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:20.413" endtime="20200707 20:27:20.415"></status>
</kw>
<msg timestamp="20200707 20:27:20.416" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:20.412" endtime="20200707 20:27:20.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200707 20:27:20.417" level="INFO">JMap 7.0 Istanbul build 163</msg>
<status status="PASS" starttime="20200707 20:27:20.417" endtime="20200707 20:27:20.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:20.419" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:20.418" endtime="20200707 20:27:20.420"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200707 20:27:20.882" level="INFO">@{testCases} = [ {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'} ]</msg>
<status status="PASS" starttime="20200707 20:27:20.420" endtime="20200707 20:27:20.882"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200707 20:27:20.884" level="INFO">Length is 1</msg>
<msg timestamp="20200707 20:27:20.885" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200707 20:27:20.883" endtime="20200707 20:27:20.885"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200707 20:27:20.888" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200707 20:27:20.887" endtime="20200707 20:27:20.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:20.891" endtime="20200707 20:27:20.893"></status>
</kw>
<msg timestamp="20200707 20:27:20.893" level="INFO">${testCase} = {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200707 20:27:20.890" endtime="20200707 20:27:20.894"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200707 20:27:20.896" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200707 20:27:20.894" endtime="20200707 20:27:20.897"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:20.886" endtime="20200707 20:27:20.897"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:20.886" endtime="20200707 20:27:20.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200707 20:27:20.899" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200707 20:27:20.898" endtime="20200707 20:27:20.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200707 20:27:20.902" level="INFO">${testCaseNAME} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200707 20:27:20.901" endtime="20200707 20:27:20.902"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200707 20:27:20.904" level="INFO">${testCaseID} = 8694</msg>
<status status="PASS" starttime="20200707 20:27:20.903" endtime="20200707 20:27:20.905"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200707 20:27:20.907" level="INFO">${testCaseExternalID} = 974</msg>
<status status="PASS" starttime="20200707 20:27:20.906" endtime="20200707 20:27:20.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200707 20:27:20.909" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200707 20:27:20.908" endtime="20200707 20:27:20.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200707 20:27:20.911" level="INFO">${numVersion} = 163</msg>
<status status="PASS" starttime="20200707 20:27:20.910" endtime="20200707 20:27:20.911"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200707 20:27:20.913" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200707 20:27:20.912" endtime="20200707 20:27:20.913"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:20.915" endtime="20200707 20:27:21.201"></status>
</kw>
<msg timestamp="20200707 20:27:21.202" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200707 20:27:20.914" endtime="20200707 20:27:21.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.204" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200707 20:27:21.203" endtime="20200707 20:27:21.205"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200707 20:27:21.207" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200707 20:27:21.205" endtime="20200707 20:27:21.207"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200707 20:27:21.209" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200707 20:27:21.208" endtime="20200707 20:27:21.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.212" endtime="20200707 20:27:21.213"></status>
</kw>
<msg timestamp="20200707 20:27:21.214" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200707 20:27:21.211" endtime="20200707 20:27:21.214"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200707 20:27:21.216" level="INFO">Length is 2</msg>
<msg timestamp="20200707 20:27:21.217" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200707 20:27:21.215" endtime="20200707 20:27:21.217"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200707 20:27:21.219" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200707 20:27:21.218" endtime="20200707 20:27:21.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.222" endtime="20200707 20:27:21.223"></status>
</kw>
<msg timestamp="20200707 20:27:21.224" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200707 20:27:21.220" endtime="20200707 20:27:21.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.228" level="INFO">----- &gt; ID of Build(163) : -1</msg>
<status status="PASS" starttime="20200707 20:27:21.227" endtime="20200707 20:27:21.228"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.225" endtime="20200707 20:27:21.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200707 20:27:21.230" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200707 20:27:21.229" endtime="20200707 20:27:21.230"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200707 20:27:21.232" level="INFO">${numVersion} = 163</msg>
<status status="PASS" starttime="20200707 20:27:21.231" endtime="20200707 20:27:21.232"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200707 20:27:21.233" level="INFO">${numVersion} = 162</msg>
<status status="PASS" starttime="20200707 20:27:21.233" endtime="20200707 20:27:21.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.237" endtime="20200707 20:27:21.237"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.236" endtime="20200707 20:27:21.238"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.235" endtime="20200707 20:27:21.238"></status>
</kw>
<msg timestamp="20200707 20:27:21.238" level="INFO">${numVersion} = 162</msg>
<status status="PASS" starttime="20200707 20:27:21.235" endtime="20200707 20:27:21.238"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.239" endtime="20200707 20:27:21.239"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:20.914" endtime="20200707 20:27:21.240"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.241" endtime="20200707 20:27:21.578"></status>
</kw>
<msg timestamp="20200707 20:27:21.579" level="INFO">@{getExecution} = [ PASS | [{'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200707 20:27:21.241" endtime="20200707 20:27:21.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.581" level="INFO">---- &gt; ['PASS', [{'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200707 20:27:21.581" endtime="20200707 20:27:21.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200707 20:27:21.584" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200707 20:27:21.583" endtime="20200707 20:27:21.585"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200707 20:27:21.587" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200707 20:27:21.586" endtime="20200707 20:27:21.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.590" endtime="20200707 20:27:21.591"></status>
</kw>
<msg timestamp="20200707 20:27:21.592" level="INFO">@{getExecution} = [ PASS | [{'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200707 20:27:21.588" endtime="20200707 20:27:21.592"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200707 20:27:21.593" level="INFO">Length is 2</msg>
<msg timestamp="20200707 20:27:21.595" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200707 20:27:21.593" endtime="20200707 20:27:21.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200707 20:27:21.597" level="INFO">${lastExecution} = [{'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200707 20:27:21.595" endtime="20200707 20:27:21.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.599" endtime="20200707 20:27:21.601"></status>
</kw>
<msg timestamp="20200707 20:27:21.601" level="INFO">${idBuild} = 349180</msg>
<status status="PASS" starttime="20200707 20:27:21.598" endtime="20200707 20:27:21.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.605" level="INFO">----- &gt; ID of Build(162) : 349180</msg>
<status status="PASS" starttime="20200707 20:27:21.604" endtime="20200707 20:27:21.606"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.602" endtime="20200707 20:27:21.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200707 20:27:21.608" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200707 20:27:21.607" endtime="20200707 20:27:21.608"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200707 20:27:21.610" level="INFO">${numVersion} = 162</msg>
<status status="PASS" starttime="20200707 20:27:21.609" endtime="20200707 20:27:21.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200707 20:27:21.612" level="INFO">${numVersion} = 161</msg>
<status status="PASS" starttime="20200707 20:27:21.611" endtime="20200707 20:27:21.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.615" endtime="20200707 20:27:21.616"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.615" endtime="20200707 20:27:21.616"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.613" endtime="20200707 20:27:21.617"></status>
</kw>
<msg timestamp="20200707 20:27:21.618" level="INFO">${numVersion} = 161</msg>
<status status="PASS" starttime="20200707 20:27:21.612" endtime="20200707 20:27:21.618"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200707 20:27:21.618" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200707 20:27:21.618" endtime="20200707 20:27:21.619"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.241" endtime="20200707 20:27:21.619"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:20.913" endtime="20200707 20:27:21.619"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200707 20:27:21.620" level="INFO">Length is 1</msg>
<msg timestamp="20200707 20:27:21.621" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200707 20:27:21.620" endtime="20200707 20:27:21.621"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200707 20:27:21.621" level="INFO">${lastExecution} = {'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200707 20:27:21.621" endtime="20200707 20:27:21.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200707 20:27:21.623" level="INFO">-----&gt; Last execution : {'id': '349180', 'build_id': '890', 'tester_id': '9', 'execution_ts': '2020-07-06 20:56:31', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200707 20:27:21.622" endtime="20200707 20:27:21.623"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200707 20:27:21.623" level="INFO">${lastExecutionID} = 349180</msg>
<status status="PASS" starttime="20200707 20:27:21.623" endtime="20200707 20:27:21.624"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.625" endtime="20200707 20:27:21.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200707 20:27:21.628" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200707 20:27:21.627" endtime="20200707 20:27:21.628"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200707 20:27:21.629" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200707 20:27:21.628" endtime="20200707 20:27:21.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200707 20:27:21.630" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200707 20:27:21.630" endtime="20200707 20:27:21.630"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200707 20:27:21.631" level="INFO">Length is 2</msg>
<msg timestamp="20200707 20:27:21.631" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200707 20:27:21.630" endtime="20200707 20:27:21.631"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200707 20:27:21.631" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200707 20:27:21.631" endtime="20200707 20:27:21.631"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.632" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200707 20:27:21.632" endtime="20200707 20:27:21.633"></status>
</kw>
<msg timestamp="20200707 20:27:21.633" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200707 20:27:21.632" endtime="20200707 20:27:21.633"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200707 20:27:21.633" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200707 20:27:21.633" endtime="20200707 20:27:21.634"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.634" endtime="20200707 20:27:21.634"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.632" endtime="20200707 20:27:21.634"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.635" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200707 20:27:21.635" endtime="20200707 20:27:21.635"></status>
</kw>
<msg timestamp="20200707 20:27:21.636" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200707 20:27:21.635" endtime="20200707 20:27:21.636"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200707 20:27:21.636" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200707 20:27:21.636" endtime="20200707 20:27:21.636"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.637" endtime="20200707 20:27:21.637"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.634" endtime="20200707 20:27:21.637"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.631" endtime="20200707 20:27:21.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200707 20:27:21.638" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200707 20:27:21.637" endtime="20200707 20:27:21.638"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200707 20:27:21.639" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200707 20:27:21.638" endtime="20200707 20:27:21.639"></status>
</kw>
<msg timestamp="20200707 20:27:21.639" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200707 20:27:21.638" endtime="20200707 20:27:21.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.640" endtime="20200707 20:27:21.640"></status>
</kw>
<msg timestamp="20200707 20:27:21.640" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200707 20:27:21.640" endtime="20200707 20:27:21.640"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.641" endtime="20200707 20:27:21.641"></status>
</kw>
<msg timestamp="20200707 20:27:21.641" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200707 20:27:21.641" endtime="20200707 20:27:21.641"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200707 20:27:21.642" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200707 20:27:21.642" endtime="20200707 20:27:21.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.643" endtime="20200707 20:27:21.643"></status>
</kw>
<msg timestamp="20200707 20:27:21.643" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200707 20:27:21.642" endtime="20200707 20:27:21.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200707 20:27:21.644" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200707 20:27:21.644" endtime="20200707 20:27:21.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.645" endtime="20200707 20:27:21.957"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.644" endtime="20200707 20:27:21.958"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.626" endtime="20200707 20:27:21.958"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.626" endtime="20200707 20:27:21.959"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.625" endtime="20200707 20:27:21.960"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:21.624" endtime="20200707 20:27:21.960"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200707 20:27:21.961" endtime="20200707 20:27:21.962"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:17.614" endtime="20200707 20:27:21.963"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:17.613" endtime="20200707 20:27:21.964"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:11.070" endtime="20200707 20:27:21.965"></status>
</kw>
<status status="PASS" starttime="20200707 20:27:06.486" endtime="20200707 20:27:21.965"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200707 20:26:44.005" endtime="20200707 20:27:21.966" critical="yes"></status>
</test>
<doc>Edit Style Annotation Test cases</doc>
<metadata>
<item name="author">Mordjane Boussad</item>
</metadata>
<status status="PASS" starttime="20200707 20:26:43.273" endtime="20200707 20:27:21.968"></status>
</suite>
<status status="PASS" starttime="20200707 20:26:43.271" endtime="20200707 20:27:21.975"></status>
</suite>
<status status="PASS" starttime="20200707 20:26:43.269" endtime="20200707 20:27:21.980"></status>
</suite>
<status status="PASS" starttime="20200707 20:26:43.267" endtime="20200707 20:27:21.985"></status>
</suite>
<status status="PASS" starttime="20200707 20:26:43.265" endtime="20200707 20:27:21.988"></status>
</suite>
<status status="PASS" starttime="20200707 20:26:43.245" endtime="20200707 20:27:21.991"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Time Out</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="JMapJenkinsTests">JMapJenkinsTests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">JMapJenkinsTests.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Jmap 7.0">JMapJenkinsTests.Tests.Jmap 7.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="jmapWeb">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="Manage Annotations">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200707 20:26:43.191" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-974:Modify the text color of the text annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 120.</msg>
<msg timestamp="20200707 20:26:43.191" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-975:Modify the font size of the text annotation with valid data' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 136.</msg>
<msg timestamp="20200707 20:26:43.194" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-979:Modify the line color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 215.</msg>
<msg timestamp="20200707 20:26:43.194" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-980:Modify the fill color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 231.</msg>
<msg timestamp="20200707 20:26:43.483" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200707 20:26:43.483" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200707 20:26:43.484" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200707 20:26:58.762" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
</errors>
</robot>
