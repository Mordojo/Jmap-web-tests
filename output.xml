<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200701 19:11:30.609" rpa="false">
<suite id="s1" name="JMapJenkinsTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-974:Modify the text color of the text annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200701 19:11:32.086" level="INFO">${tc_start} = 1593645092.085549</msg>
<status status="PASS" starttime="20200701 19:11:32.086" endtime="20200701 19:11:32.086"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200701 19:11:32.087" level="INFO">${tc_start} = 1593645092.085549</msg>
<status status="PASS" starttime="20200701 19:11:32.086" endtime="20200701 19:11:32.087"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:32.085" endtime="20200701 19:11:32.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Browser}'=='Chrome'</arg>
<arg>Open Chrome</arg>
<arg>ELSE IF</arg>
<arg>'${Browser}'=='Firefox'</arg>
<arg>Open Firefox</arg>
<arg>ELSE</arg>
<arg>Open Edge</arg>
</arguments>
<kw name="Open Chrome" library="CommonLogin">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
</arguments>
<assign>
<var>${chrome_options}</var>
</assign>
<msg timestamp="20200701 19:11:32.089" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001701393A2B0&gt;</msg>
<status status="PASS" starttime="20200701 19:11:32.088" endtime="20200701 19:11:32.089"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:32.089" endtime="20200701 19:11:32.089"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
<arg>chrome_options=${chrome_options}</arg>
</arguments>
<msg timestamp="20200701 19:11:32.090" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20200701 19:11:32.089" endtime="20200701 19:11:35.908"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:32.088" endtime="20200701 19:11:35.908"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:32.087" endtime="20200701 19:11:35.909"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
</arguments>
<msg timestamp="20200701 19:11:35.916" level="INFO">Opening url 'http://localhost:8081/JMap_Web_WorldTest_HTTP'</msg>
<status status="PASS" starttime="20200701 19:11:35.909" endtime="20200701 19:11:36.359"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:36.359" endtime="20200701 19:11:38.526"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200701 19:11:38.526" endtime="20200701 19:11:38.655"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:32.085" endtime="20200701 19:11:38.655"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.658" endtime="20200701 19:11:38.688"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.689" endtime="20200701 19:11:38.733"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.734" endtime="20200701 19:11:38.788"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.789" endtime="20200701 19:11:38.790"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.791" endtime="20200701 19:11:38.811"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:38.791" endtime="20200701 19:11:38.811"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:38.812" endtime="20200701 19:11:38.834"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200701 19:11:38.835" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200701 19:11:38.834" endtime="20200701 19:11:38.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:39.919" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:38.918" endtime="20200701 19:11:39.920"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:38.788" endtime="20200701 19:11:39.921"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:39.925" endtime="20200701 19:11:39.929"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:39.932" endtime="20200701 19:11:40.001"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:39.930" endtime="20200701 19:11:40.002"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:40.003" endtime="20200701 19:11:40.076"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200701 19:11:40.078" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200701 19:11:40.077" endtime="20200701 19:11:40.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:41.246" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:40.244" endtime="20200701 19:11:41.246"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:39.923" endtime="20200701 19:11:41.247"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200701 19:11:41.250" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200701 19:11:41.248" endtime="20200701 19:11:41.953"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:42.956" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:41.954" endtime="20200701 19:11:42.956"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:38.656" endtime="20200701 19:11:42.956"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:32.084" endtime="20200701 19:11:42.957"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:42.960" endtime="20200701 19:11:42.961"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200701 19:11:42.976" level="INFO">Page title is 'JMap_Web_WorldTest_HTTP'.</msg>
<status status="PASS" starttime="20200701 19:11:42.962" endtime="20200701 19:11:42.976"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.962" endtime="20200701 19:11:42.976"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.959" endtime="20200701 19:11:42.976"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.958" endtime="20200701 19:11:42.976"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:42.978" endtime="20200701 19:11:43.012"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.977" endtime="20200701 19:11:43.013"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200701 19:11:43.014" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200701 19:11:43.013" endtime="20200701 19:11:43.096"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.977" endtime="20200701 19:11:43.096"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:43.097" endtime="20200701 19:11:43.125"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.097" endtime="20200701 19:11:43.125"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200701 19:11:43.126" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200701 19:11:43.125" endtime="20200701 19:11:43.178"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.096" endtime="20200701 19:11:43.178"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:43.180" endtime="20200701 19:11:43.216"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.179" endtime="20200701 19:11:43.216"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200701 19:11:43.230" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200701 19:11:43.217" endtime="20200701 19:11:43.230"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.217" endtime="20200701 19:11:43.231"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.179" endtime="20200701 19:11:43.231"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:43.233" endtime="20200701 19:11:43.259"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.232" endtime="20200701 19:11:43.259"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200701 19:11:43.260" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200701 19:11:43.259" endtime="20200701 19:11:43.832"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.232" endtime="20200701 19:11:43.833"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.232" endtime="20200701 19:11:43.833"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:43.835" endtime="20200701 19:11:43.859"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.834" endtime="20200701 19:11:43.860"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200701 19:11:43.860" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200701 19:11:43.860" endtime="20200701 19:11:44.447"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.834" endtime="20200701 19:11:44.448"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.833" endtime="20200701 19:11:44.448"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.231" endtime="20200701 19:11:44.448"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:45.451" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:44.448" endtime="20200701 19:11:45.451"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:43.231" endtime="20200701 19:11:45.451"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:45.452" endtime="20200701 19:11:45.477"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.452" endtime="20200701 19:11:45.477"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200701 19:11:45.492" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200701 19:11:45.477" endtime="20200701 19:11:45.492"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.477" endtime="20200701 19:11:45.493"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.451" endtime="20200701 19:11:45.494"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:45.494" endtime="20200701 19:11:45.496"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:45.496" endtime="20200701 19:11:45.520"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.496" endtime="20200701 19:11:45.520"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:45.520" endtime="20200701 19:11:45.554"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200701 19:11:45.555" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200701 19:11:45.555" endtime="20200701 19:11:45.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:46.683" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:45.682" endtime="20200701 19:11:46.683"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.494" endtime="20200701 19:11:46.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200701 19:11:47.687" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:46.685" endtime="20200701 19:11:47.687"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.494" endtime="20200701 19:11:47.688"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:47.692" endtime="20200701 19:11:47.729"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:47.691" endtime="20200701 19:11:47.730"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200701 19:11:47.755" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200701 19:11:47.731" endtime="20200701 19:11:47.755"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:47.730" endtime="20200701 19:11:47.756"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:47.690" endtime="20200701 19:11:47.756"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:47.688" endtime="20200701 19:11:47.756"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200701 19:11:47.758" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200701 19:11:47.757" endtime="20200701 19:11:47.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:48.844" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:47.842" endtime="20200701 19:11:48.844"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:47.757" endtime="20200701 19:11:48.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200701 19:11:49.847" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:48.845" endtime="20200701 19:11:49.848"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:45.494" endtime="20200701 19:11:49.849"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:42.957" endtime="20200701 19:11:49.849"></status>
</kw>
<kw name="Verify The Background Color Of The Text Field" library="CommonAnnotationWeb">
<doc>Check annotation text background color by the given text background color value</doc>
<arguments>
<arg>${blackColorField}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:49.854" endtime="20200701 19:11:49.917"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.853" endtime="20200701 19:11:49.918"></status>
</kw>
<kw name="Verify Background Color" library="CommonWeb">
<doc>Check for the css backgroud color of the web element located in locator</doc>
<arguments>
<arg>//div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>${color}</arg>
</arguments>
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>${Locator}</arg>
</arguments>
<assign>
<var>${elem}</var>
</assign>
<msg timestamp="20200701 19:11:49.934" level="INFO">${elem} = &lt;selenium.webdriver.remote.webelement.WebElement (session="178e9930f34e70048fa5884c5cbddd3a", element="93080964-a3ce-4b9e-b25d-63e018976781")&gt;</msg>
<status status="PASS" starttime="20200701 19:11:49.920" endtime="20200701 19:11:49.935"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${elem}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
</arguments>
<assign>
<var>${getBgColor}</var>
</assign>
<msg timestamp="20200701 19:11:49.956" level="INFO">${getBgColor} = rgba(0, 0, 0, 1)</msg>
<status status="PASS" starttime="20200701 19:11:49.935" endtime="20200701 19:11:49.956"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:49.956" endtime="20200701 19:11:49.957"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.956" endtime="20200701 19:11:49.957"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.918" endtime="20200701 19:11:49.957"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.850" endtime="20200701 19:11:49.958"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:49.959" endtime="20200701 19:11:49.988"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.958" endtime="20200701 19:11:49.989"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200701 19:11:49.990" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200701 19:11:49.989" endtime="20200701 19:11:50.073"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:49.958" endtime="20200701 19:11:50.074"></status>
</kw>
<kw name="Select The Drawing Tool Text Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Text Annotation clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:50.077" endtime="20200701 19:11:50.114"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.076" endtime="20200701 19:11:50.114"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200701 19:11:50.116" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200701 19:11:50.115" endtime="20200701 19:11:50.732"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.075" endtime="20200701 19:11:50.732"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.075" endtime="20200701 19:11:50.733"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:50.735" endtime="20200701 19:11:50.776"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.734" endtime="20200701 19:11:50.777"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200701 19:11:50.778" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200701 19:11:50.777" endtime="20200701 19:11:50.866"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.733" endtime="20200701 19:11:50.867"></status>
</kw>
<kw name="Choose The Color Via The Text Field" library="CommonAnnotationWeb">
<doc>Choose text color for annotations</doc>
<arguments>
<arg>${greenColorElement}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:50.869" endtime="20200701 19:11:50.903"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.868" endtime="20200701 19:11:50.903"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
</arguments>
<msg timestamp="20200701 19:11:50.903" level="INFO">Clicking element 'xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]'.</msg>
<status status="PASS" starttime="20200701 19:11:50.903" endtime="20200701 19:11:51.192"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:51.195" endtime="20200701 19:11:51.235"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:51.193" endtime="20200701 19:11:51.236"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
</arguments>
<msg timestamp="20200701 19:11:51.236" level="INFO">Clicking element 'xpath://div[@class='sp-container sp-light sp-alpha-enabled sp-buttons-disabled sp-palette-buttons-disabled sp-initial-disabled']//div[@class='sp-cf sp-palette-row sp-palette-row-1']//span[4]'.</msg>
<status status="PASS" starttime="20200701 19:11:51.236" endtime="20200701 19:11:51.348"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:50.867" endtime="20200701 19:11:51.349"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:51.351" endtime="20200701 19:11:51.383"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:51.350" endtime="20200701 19:11:51.385"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200701 19:11:51.386" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200701 19:11:51.385" endtime="20200701 19:11:51.451"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:51.349" endtime="20200701 19:11:51.452"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:51.454" endtime="20200701 19:11:51.490"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:51.453" endtime="20200701 19:11:51.490"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200701 19:11:51.491" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=30.</msg>
<status status="PASS" starttime="20200701 19:11:51.491" endtime="20200701 19:11:52.067"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:51.452" endtime="20200701 19:11:52.068"></status>
</kw>
<kw name="Verify That The Annotation Type Is" library="CommonAnnotationWeb">
<doc>Check annotation type by the given type value</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>annotationType</arg>
</arguments>
<assign>
<var>${getAnnotationType}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:52.073" endtime="20200701 19:11:52.074"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200701 19:11:52.076" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].annotationType
Without any arguments.</msg>
<msg timestamp="20200701 19:11:52.189" level="INFO">${getAttribute} = Text</msg>
<status status="PASS" starttime="20200701 19:11:52.075" endtime="20200701 19:11:52.190"></status>
</kw>
<msg timestamp="20200701 19:11:52.191" level="INFO">${getAnnotationType} = Text</msg>
<status status="PASS" starttime="20200701 19:11:52.072" endtime="20200701 19:11:52.191"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:52.193" endtime="20200701 19:11:52.195"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:52.192" endtime="20200701 19:11:52.196"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:52.069" endtime="20200701 19:11:52.196"></status>
</kw>
<kw name="Verify That The Annotation Text Color Is" library="CommonAnnotationWeb">
<doc>Check annotation text color by the given text color value</doc>
<arguments>
<arg>${greenColorDrawing}</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>textColor</arg>
</arguments>
<assign>
<var>${getAnnotation}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:52.200" endtime="20200701 19:11:52.201"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200701 19:11:52.204" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].textColor
Without any arguments.</msg>
<msg timestamp="20200701 19:11:52.320" level="INFO">${getAttribute} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200701 19:11:52.202" endtime="20200701 19:11:52.320"></status>
</kw>
<msg timestamp="20200701 19:11:52.321" level="INFO">${getAnnotation} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200701 19:11:52.199" endtime="20200701 19:11:52.321"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${getAnnotation}</arg>
</arguments>
<assign>
<var>${getTextColor}</var>
</assign>
<msg timestamp="20200701 19:11:52.324" level="INFO">${getTextColor} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200701 19:11:52.322" endtime="20200701 19:11:52.324"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:52.326" endtime="20200701 19:11:52.328"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:52.325" endtime="20200701 19:11:52.329"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200701 19:11:53.331" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:52.329" endtime="20200701 19:11:53.331"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:52.197" endtime="20200701 19:11:53.332"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:53.334" endtime="20200701 19:11:53.589"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:53.334" endtime="20200701 19:11:53.590"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200701 19:11:53.592" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200701 19:11:53.591" endtime="20200701 19:11:53.897"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:53.333" endtime="20200701 19:11:53.898"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:53.900" endtime="20200701 19:11:54.215"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:53.899" endtime="20200701 19:11:54.216"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:54.223" endtime="20200701 19:11:54.605"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200701 19:11:54.607" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200701 19:11:54.606" endtime="20200701 19:11:54.916"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200701 19:11:55.919" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200701 19:11:54.917" endtime="20200701 19:11:55.919"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:54.222" endtime="20200701 19:11:55.920"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200701 19:11:55.920" endtime="20200701 19:11:56.278"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200701 19:11:56.281" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200701 19:11:56.279" endtime="20200701 19:11:56.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200701 19:11:58.746" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200701 19:11:56.744" endtime="20200701 19:11:58.746"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:54.220" endtime="20200701 19:11:58.746"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200701 19:11:58.748" endtime="20200701 19:12:00.892"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200701 19:12:00.898" level="INFO">${tc_end} = 1593645120.897873</msg>
<status status="PASS" starttime="20200701 19:12:00.897" endtime="20200701 19:12:00.898"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200701 19:12:00.901" level="INFO">${tc_duration} = 28.812323808670044</msg>
<status status="PASS" starttime="20200701 19:12:00.899" endtime="20200701 19:12:00.901"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200701 19:12:00.903" level="INFO">${tc_duration} = 0.4802053968111674</msg>
<status status="PASS" starttime="20200701 19:12:00.902" endtime="20200701 19:12:00.904"></status>
</kw>
<msg timestamp="20200701 19:12:00.905" level="INFO">${duration} = 0.4802053968111674</msg>
<status status="PASS" starttime="20200701 19:12:00.895" endtime="20200701 19:12:00.905"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200701 19:12:00.907" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200701 19:12:00.906" endtime="20200701 19:12:00.907"></status>
</kw>
<msg timestamp="20200701 19:12:00.909" level="INFO">${ElapsedTime} = 0.4802053968111674</msg>
<status status="PASS" starttime="20200701 19:12:00.893" endtime="20200701 19:12:00.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:00.911" level="INFO">================================================</msg>
<status status="PASS" starttime="20200701 19:12:00.910" endtime="20200701 19:12:00.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200701 19:12:00.913" level="INFO">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200701 19:12:00.912" endtime="20200701 19:12:00.913"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200701 19:12:00.915" level="INFO">@{listeSuiteName} = [ JMapJenkinsTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditStyleOfAnnotationTests ]</msg>
<status status="PASS" starttime="20200701 19:12:00.914" endtime="20200701 19:12:00.916"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200701 19:12:00.917" level="INFO">Length is 7</msg>
<msg timestamp="20200701 19:12:00.918" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200701 19:12:00.916" endtime="20200701 19:12:00.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200701 19:12:00.920" level="INFO">${suiteName} = EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200701 19:12:00.919" endtime="20200701 19:12:00.921"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200701 19:12:00.922" level="INFO">@{suiteName} = [ EditStyleOfAnnotation |  ]</msg>
<status status="PASS" starttime="20200701 19:12:00.921" endtime="20200701 19:12:00.922"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200701 19:12:00.924" level="INFO">${suiteName} = EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200701 19:12:00.923" endtime="20200701 19:12:00.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200701 19:12:00.925" level="INFO">EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200701 19:12:00.925" endtime="20200701 19:12:00.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:00.927" level="INFO">================================================</msg>
<status status="PASS" starttime="20200701 19:12:00.926" endtime="20200701 19:12:00.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200701 19:12:00.928" level="INFO">JM70-974:Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200701 19:12:00.927" endtime="20200701 19:12:00.928"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200701 19:12:00.930" level="INFO">@{listeTestName} = [ JM70-974 | Modify the text color of the text annotation ]</msg>
<status status="PASS" starttime="20200701 19:12:00.929" endtime="20200701 19:12:00.930"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200701 19:12:00.931" level="INFO">Length is 2</msg>
<msg timestamp="20200701 19:12:00.931" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200701 19:12:00.930" endtime="20200701 19:12:00.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200701 19:12:00.933" level="INFO">${tesCaseName} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200701 19:12:00.932" endtime="20200701 19:12:00.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200701 19:12:00.934" level="INFO">Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200701 19:12:00.933" endtime="20200701 19:12:00.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:00.935" level="INFO">================================================</msg>
<status status="PASS" starttime="20200701 19:12:00.935" endtime="20200701 19:12:00.935"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:00.939" endtime="20200701 19:12:03.266"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:03.266" endtime="20200701 19:12:03.268"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:03.269" endtime="20200701 19:12:03.361"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200701 19:12:03.412" level="INFO">${RESULT} = [{'serverVersion': '7.0 Istanbul build 161', 'sessionId': 165769530, 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200701 19:12:03.362" endtime="20200701 19:12:03.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200701 19:12:03.414" level="INFO">${RESULT} = {'serverVersion': '7.0 Istanbul build 161', 'sessionId': 165769530, 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200701 19:12:03.413" endtime="20200701 19:12:03.414"></status>
</kw>
<msg timestamp="20200701 19:12:03.415" level="INFO">${BODY} = {'serverVersion': '7.0 Istanbul build 161', 'sessionId': 165769530, 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200701 19:12:00.938" endtime="20200701 19:12:03.415"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200701 19:12:03.417" level="INFO">${getSessionID} = 165769530</msg>
<status status="PASS" starttime="20200701 19:12:03.416" endtime="20200701 19:12:03.417"></status>
</kw>
<msg timestamp="20200701 19:12:03.418" level="INFO">${SESSIONID} = 165769530</msg>
<status status="PASS" starttime="20200701 19:12:03.415" endtime="20200701 19:12:03.418"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200701 19:12:03.420" level="INFO">${getBuild} = 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:03.419" endtime="20200701 19:12:03.420"></status>
</kw>
<msg timestamp="20200701 19:12:03.421" level="INFO">${buildName} = 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:03.418" endtime="20200701 19:12:03.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200701 19:12:03.422" level="INFO">${buildName} = JMap 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:03.422" endtime="20200701 19:12:03.422"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:03.424" endtime="20200701 19:12:05.443"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:05.443" endtime="20200701 19:12:05.496"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:05.497" endtime="20200701 19:12:05.547"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:03.423" endtime="20200701 19:12:05.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:05.549" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:05.548" endtime="20200701 19:12:05.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200701 19:12:05.553" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200701 19:12:05.553" endtime="20200701 19:12:05.554"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200701 19:12:06.248" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200701 19:12:05.554" endtime="20200701 19:12:06.249"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:06.250" endtime="20200701 19:12:06.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200701 19:12:06.890" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200701 19:12:06.889" endtime="20200701 19:12:06.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:06.892" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:06.891" endtime="20200701 19:12:06.893"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:05.552" endtime="20200701 19:12:06.893"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200701 19:12:07.391" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200701 19:12:06.894" endtime="20200701 19:12:07.391"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200701 19:12:07.393" level="INFO">Length is 13</msg>
<msg timestamp="20200701 19:12:07.394" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200701 19:12:07.392" endtime="20200701 19:12:07.395"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200701 19:12:07.397" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200701 19:12:07.395" endtime="20200701 19:12:07.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200701 19:12:07.399" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200701 19:12:07.398" endtime="20200701 19:12:07.400"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200701 19:12:07.402" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200701 19:12:07.401" endtime="20200701 19:12:07.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200701 19:12:07.406" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200701 19:12:07.404" endtime="20200701 19:12:07.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:07.407" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:07.406" endtime="20200701 19:12:07.408"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200701 19:12:07.776" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200701 19:12:07.409" endtime="20200701 19:12:07.776"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200701 19:12:07.779" level="INFO">Length is 1</msg>
<msg timestamp="20200701 19:12:07.780" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200701 19:12:07.777" endtime="20200701 19:12:07.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200701 19:12:07.782" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200701 19:12:07.781" endtime="20200701 19:12:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200701 19:12:07.784" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200701 19:12:07.783" endtime="20200701 19:12:07.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200701 19:12:07.786" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200701 19:12:07.785" endtime="20200701 19:12:07.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200701 19:12:07.788" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200701 19:12:07.787" endtime="20200701 19:12:07.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:07.789" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:07.789" endtime="20200701 19:12:07.789"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200701 19:12:08.117" level="INFO">${latestBuild} = {'id': '889', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 161', 'notes': 'TFIFT-8753 JMap Server : Texts in AutoCAD blocks do not display&lt;/br&gt;TFIFT-9823 JMap Server : Mapbox URLs are trunc...</msg>
<status status="PASS" starttime="20200701 19:12:07.790" endtime="20200701 19:12:08.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.118" level="INFO">{'id': '889', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 161', 'notes': 'TFIFT-8753 JMap Server : Texts in AutoCAD blocks do not display&lt;/br&gt;TFIFT-9823 JMap Server : Mapbox URLs are truncated when using a reverse proxy&lt;/br&gt;TFIFT-9824 JMap Server : ID generator service&lt;/br&gt;', 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-07-01 21:49:43'}</msg>
<status status="PASS" starttime="20200701 19:12:08.118" endtime="20200701 19:12:08.119"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200701 19:12:08.120" level="INFO">Length is 9</msg>
<msg timestamp="20200701 19:12:08.120" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200701 19:12:08.119" endtime="20200701 19:12:08.120"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200701 19:12:08.121" level="INFO">${latestBuildID} = 889</msg>
<status status="PASS" starttime="20200701 19:12:08.120" endtime="20200701 19:12:08.121"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200701 19:12:08.123" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:08.122" endtime="20200701 19:12:08.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.124" endtime="20200701 19:12:08.125"></status>
</kw>
<msg timestamp="20200701 19:12:08.125" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:08.123" endtime="20200701 19:12:08.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.127" level="INFO">JMap 7.0 Istanbul build 161</msg>
<status status="PASS" starttime="20200701 19:12:08.126" endtime="20200701 19:12:08.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:08.128" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:08.127" endtime="20200701 19:12:08.128"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200701 19:12:08.593" level="INFO">@{testCases} = [ {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'} ]</msg>
<status status="PASS" starttime="20200701 19:12:08.129" endtime="20200701 19:12:08.593"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200701 19:12:08.596" level="INFO">Length is 1</msg>
<msg timestamp="20200701 19:12:08.596" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200701 19:12:08.595" endtime="20200701 19:12:08.597"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.600" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200701 19:12:08.599" endtime="20200701 19:12:08.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.604" endtime="20200701 19:12:08.605"></status>
</kw>
<msg timestamp="20200701 19:12:08.606" level="INFO">${testCase} = {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200701 19:12:08.602" endtime="20200701 19:12:08.606"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200701 19:12:08.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200701 19:12:08.607" endtime="20200701 19:12:08.609"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.598" endtime="20200701 19:12:08.610"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.597" endtime="20200701 19:12:08.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.613" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200701 19:12:08.611" endtime="20200701 19:12:08.613"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200701 19:12:08.615" level="INFO">${testCaseNAME} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200701 19:12:08.613" endtime="20200701 19:12:08.615"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200701 19:12:08.617" level="INFO">${testCaseID} = 8694</msg>
<status status="PASS" starttime="20200701 19:12:08.616" endtime="20200701 19:12:08.618"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200701 19:12:08.620" level="INFO">${testCaseExternalID} = 974</msg>
<status status="PASS" starttime="20200701 19:12:08.619" endtime="20200701 19:12:08.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200701 19:12:08.622" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200701 19:12:08.621" endtime="20200701 19:12:08.622"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:08.624" level="INFO">${numVersion} = 161</msg>
<status status="PASS" starttime="20200701 19:12:08.623" endtime="20200701 19:12:08.624"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200701 19:12:08.626" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200701 19:12:08.625" endtime="20200701 19:12:08.626"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.628" endtime="20200701 19:12:08.929"></status>
</kw>
<msg timestamp="20200701 19:12:08.929" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200701 19:12:08.627" endtime="20200701 19:12:08.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.930" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200701 19:12:08.930" endtime="20200701 19:12:08.930"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:08.932" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200701 19:12:08.931" endtime="20200701 19:12:08.932"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:08.932" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200701 19:12:08.932" endtime="20200701 19:12:08.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.933" endtime="20200701 19:12:08.933"></status>
</kw>
<msg timestamp="20200701 19:12:08.934" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200701 19:12:08.932" endtime="20200701 19:12:08.934"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200701 19:12:08.934" level="INFO">Length is 2</msg>
<msg timestamp="20200701 19:12:08.934" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200701 19:12:08.934" endtime="20200701 19:12:08.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200701 19:12:08.935" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200701 19:12:08.935" endtime="20200701 19:12:08.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.936" endtime="20200701 19:12:08.937"></status>
</kw>
<msg timestamp="20200701 19:12:08.937" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200701 19:12:08.935" endtime="20200701 19:12:08.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200701 19:12:08.940" level="INFO">----- &gt; ID of Build(161) : -1</msg>
<status status="PASS" starttime="20200701 19:12:08.939" endtime="20200701 19:12:08.940"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.938" endtime="20200701 19:12:08.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200701 19:12:08.941" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200701 19:12:08.941" endtime="20200701 19:12:08.942"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:08.943" level="INFO">${numVersion} = 161</msg>
<status status="PASS" starttime="20200701 19:12:08.942" endtime="20200701 19:12:08.943"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:08.944" level="INFO">${numVersion} = 160</msg>
<status status="PASS" starttime="20200701 19:12:08.944" endtime="20200701 19:12:08.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.948" endtime="20200701 19:12:08.949"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.947" endtime="20200701 19:12:08.949"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.946" endtime="20200701 19:12:08.949"></status>
</kw>
<msg timestamp="20200701 19:12:08.950" level="INFO">${numVersion} = 160</msg>
<status status="PASS" starttime="20200701 19:12:08.945" endtime="20200701 19:12:08.950"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:08.950" endtime="20200701 19:12:08.951"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.627" endtime="20200701 19:12:08.952"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.266" level="FAIL">TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 160) provided does not exist!
getLastExecutionResult({'testplanid': '6381', 'testcaseid': '8694', 'testCaseexternaid': '974', 'buildname': 'JMap 7.0 Istanbul build 160', 'devKey': '1d540de5247e1354aceccb25b4eac749'})</msg>
<status status="FAIL" starttime="20200701 19:12:08.953" endtime="20200701 19:12:09.267"></status>
</kw>
<msg timestamp="20200701 19:12:09.268" level="INFO">@{getExecution} = [ FAIL | TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 160) provided does not exist!
getLastExecutionResult({'testplanid': '6381', 'testcaseid': '869...</msg>
<status status="PASS" starttime="20200701 19:12:08.953" endtime="20200701 19:12:09.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.271" level="INFO">---- &gt; ['FAIL', "TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 160) provided does not exist!\ngetLastExecutionResult({'testplanid': '6381', 'testcaseid': '8694', 'testCaseexternaid': '974', 'buildname': 'JMap 7.0 Istanbul build 160', 'devKey': '1d540de5247e1354aceccb25b4eac749'})"]</msg>
<status status="PASS" starttime="20200701 19:12:09.269" endtime="20200701 19:12:09.271"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:09.273" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200701 19:12:09.272" endtime="20200701 19:12:09.274"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:09.276" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200701 19:12:09.275" endtime="20200701 19:12:09.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.279" endtime="20200701 19:12:09.280"></status>
</kw>
<msg timestamp="20200701 19:12:09.281" level="INFO">@{getExecution} = [ PASS | [{'id': '-1'}] ]</msg>
<status status="PASS" starttime="20200701 19:12:09.277" endtime="20200701 19:12:09.281"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200701 19:12:09.283" level="INFO">Length is 2</msg>
<msg timestamp="20200701 19:12:09.284" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200701 19:12:09.282" endtime="20200701 19:12:09.284"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200701 19:12:09.286" level="INFO">${lastExecution} = [{'id': '-1'}]</msg>
<status status="PASS" starttime="20200701 19:12:09.285" endtime="20200701 19:12:09.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.289" endtime="20200701 19:12:09.290"></status>
</kw>
<msg timestamp="20200701 19:12:09.291" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200701 19:12:09.287" endtime="20200701 19:12:09.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.293" level="INFO">----- &gt; ID of Build(160) : -1</msg>
<status status="PASS" starttime="20200701 19:12:09.292" endtime="20200701 19:12:09.294"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.292" endtime="20200701 19:12:09.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200701 19:12:09.295" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200701 19:12:09.294" endtime="20200701 19:12:09.295"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:09.297" level="INFO">${numVersion} = 160</msg>
<status status="PASS" starttime="20200701 19:12:09.296" endtime="20200701 19:12:09.297"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:09.298" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200701 19:12:09.297" endtime="20200701 19:12:09.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.301" endtime="20200701 19:12:09.302"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.301" endtime="20200701 19:12:09.303"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.300" endtime="20200701 19:12:09.303"></status>
</kw>
<msg timestamp="20200701 19:12:09.303" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200701 19:12:09.299" endtime="20200701 19:12:09.304"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.304" endtime="20200701 19:12:09.305"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.952" endtime="20200701 19:12:09.305"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.307" endtime="20200701 19:12:09.629"></status>
</kw>
<msg timestamp="20200701 19:12:09.630" level="INFO">@{getExecution} = [ PASS | [{'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200701 19:12:09.306" endtime="20200701 19:12:09.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.632" level="INFO">---- &gt; ['PASS', [{'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.51', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200701 19:12:09.631" endtime="20200701 19:12:09.633"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:09.636" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200701 19:12:09.634" endtime="20200701 19:12:09.636"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200701 19:12:09.639" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200701 19:12:09.637" endtime="20200701 19:12:09.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.642" endtime="20200701 19:12:09.643"></status>
</kw>
<msg timestamp="20200701 19:12:09.644" level="INFO">@{getExecution} = [ PASS | [{'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200701 19:12:09.640" endtime="20200701 19:12:09.644"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200701 19:12:09.647" level="INFO">Length is 2</msg>
<msg timestamp="20200701 19:12:09.647" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200701 19:12:09.645" endtime="20200701 19:12:09.647"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200701 19:12:09.649" level="INFO">${lastExecution} = [{'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200701 19:12:09.648" endtime="20200701 19:12:09.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.652" endtime="20200701 19:12:09.654"></status>
</kw>
<msg timestamp="20200701 19:12:09.655" level="INFO">${idBuild} = 348586</msg>
<status status="PASS" starttime="20200701 19:12:09.650" endtime="20200701 19:12:09.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.658" level="INFO">----- &gt; ID of Build(159) : 348586</msg>
<status status="PASS" starttime="20200701 19:12:09.657" endtime="20200701 19:12:09.659"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.656" endtime="20200701 19:12:09.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200701 19:12:09.660" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200701 19:12:09.660" endtime="20200701 19:12:09.661"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:09.662" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200701 19:12:09.661" endtime="20200701 19:12:09.662"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200701 19:12:09.664" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200701 19:12:09.663" endtime="20200701 19:12:09.664"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.667" endtime="20200701 19:12:09.668"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.666" endtime="20200701 19:12:09.668"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.665" endtime="20200701 19:12:09.669"></status>
</kw>
<msg timestamp="20200701 19:12:09.669" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200701 19:12:09.665" endtime="20200701 19:12:09.669"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200701 19:12:09.671" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200701 19:12:09.670" endtime="20200701 19:12:09.671"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.306" endtime="20200701 19:12:09.672"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:08.626" endtime="20200701 19:12:09.672"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200701 19:12:09.673" level="INFO">Length is 1</msg>
<msg timestamp="20200701 19:12:09.673" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200701 19:12:09.672" endtime="20200701 19:12:09.674"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200701 19:12:09.675" level="INFO">${lastExecution} = {'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200701 19:12:09.674" endtime="20200701 19:12:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200701 19:12:09.676" level="INFO">-----&gt; Last execution : {'id': '348586', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-30 03:10:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.51', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200701 19:12:09.676" endtime="20200701 19:12:09.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200701 19:12:09.678" level="INFO">${lastExecutionID} = 348586</msg>
<status status="PASS" starttime="20200701 19:12:09.677" endtime="20200701 19:12:09.678"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.681" endtime="20200701 19:12:09.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200701 19:12:09.685" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200701 19:12:09.684" endtime="20200701 19:12:09.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200701 19:12:09.686" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200701 19:12:09.685" endtime="20200701 19:12:09.686"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200701 19:12:09.688" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200701 19:12:09.687" endtime="20200701 19:12:09.688"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200701 19:12:09.689" level="INFO">Length is 2</msg>
<msg timestamp="20200701 19:12:09.689" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200701 19:12:09.688" endtime="20200701 19:12:09.689"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200701 19:12:09.690" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200701 19:12:09.690" endtime="20200701 19:12:09.691"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.694" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200701 19:12:09.693" endtime="20200701 19:12:09.694"></status>
</kw>
<msg timestamp="20200701 19:12:09.694" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200701 19:12:09.692" endtime="20200701 19:12:09.695"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200701 19:12:09.696" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200701 19:12:09.695" endtime="20200701 19:12:09.696"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.697" endtime="20200701 19:12:09.697"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.691" endtime="20200701 19:12:09.698"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.700" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200701 19:12:09.699" endtime="20200701 19:12:09.700"></status>
</kw>
<msg timestamp="20200701 19:12:09.701" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200701 19:12:09.698" endtime="20200701 19:12:09.701"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200701 19:12:09.702" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200701 19:12:09.701" endtime="20200701 19:12:09.702"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.703" endtime="20200701 19:12:09.704"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.698" endtime="20200701 19:12:09.704"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.691" endtime="20200701 19:12:09.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200701 19:12:09.705" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200701 19:12:09.705" endtime="20200701 19:12:09.705"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200701 19:12:09.707" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200701 19:12:09.707" endtime="20200701 19:12:09.708"></status>
</kw>
<msg timestamp="20200701 19:12:09.708" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200701 19:12:09.706" endtime="20200701 19:12:09.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.710" endtime="20200701 19:12:09.711"></status>
</kw>
<msg timestamp="20200701 19:12:09.711" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200701 19:12:09.709" endtime="20200701 19:12:09.711"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.712" endtime="20200701 19:12:09.713"></status>
</kw>
<msg timestamp="20200701 19:12:09.714" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200701 19:12:09.712" endtime="20200701 19:12:09.714"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200701 19:12:09.715" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200701 19:12:09.714" endtime="20200701 19:12:09.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.716" endtime="20200701 19:12:09.717"></status>
</kw>
<msg timestamp="20200701 19:12:09.717" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200701 19:12:09.715" endtime="20200701 19:12:09.718"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200701 19:12:09.719" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200701 19:12:09.718" endtime="20200701 19:12:09.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:09.721" endtime="20200701 19:12:10.074"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.720" endtime="20200701 19:12:10.075"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.683" endtime="20200701 19:12:10.076"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.682" endtime="20200701 19:12:10.077"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.679" endtime="20200701 19:12:10.078"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:09.679" endtime="20200701 19:12:10.078"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200701 19:12:10.079" endtime="20200701 19:12:10.081"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:05.551" endtime="20200701 19:12:10.082"></status>
</kw>
<status status="PASS" starttime="20200701 19:12:05.550" endtime="20200701 19:12:10.083"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:58.747" endtime="20200701 19:12:10.083"></status>
</kw>
<status status="PASS" starttime="20200701 19:11:54.218" endtime="20200701 19:12:10.084"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200701 19:11:32.084" endtime="20200701 19:12:10.085" critical="yes"></status>
</test>
<doc>Edit Style Annotation Test cases</doc>
<metadata>
<item name="author">Mordjane Boussad</item>
</metadata>
<status status="PASS" starttime="20200701 19:11:30.755" endtime="20200701 19:12:10.088"></status>
</suite>
<status status="PASS" starttime="20200701 19:11:30.752" endtime="20200701 19:12:10.096"></status>
</suite>
<status status="PASS" starttime="20200701 19:11:30.750" endtime="20200701 19:12:10.101"></status>
</suite>
<status status="PASS" starttime="20200701 19:11:30.748" endtime="20200701 19:12:10.106"></status>
</suite>
<status status="PASS" starttime="20200701 19:11:30.746" endtime="20200701 19:12:10.110"></status>
</suite>
<status status="PASS" starttime="20200701 19:11:30.722" endtime="20200701 19:12:10.113"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Time Out</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="JMapJenkinsTests">JMapJenkinsTests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">JMapJenkinsTests.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Jmap 7.0">JMapJenkinsTests.Tests.Jmap 7.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="jmapWeb">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="Manage Annotations">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200701 19:11:30.580" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-974:Modify the text color of the text annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 120.</msg>
<msg timestamp="20200701 19:11:30.580" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-975:Modify the font size of the text annotation with valid data' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 136.</msg>
<msg timestamp="20200701 19:11:30.582" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-979:Modify the line color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 215.</msg>
<msg timestamp="20200701 19:11:30.583" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-980:Modify the fill color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 231.</msg>
<msg timestamp="20200701 19:11:31.212" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200701 19:11:31.212" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200701 19:11:31.212" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200701 19:11:47.758" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
</errors>
</robot>
