<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200407 17:42:46.195" rpa="false">
<suite id="s1" name="JMapRobotTests" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="EditAnAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapRobotTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditAnAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-892:Modify the form of a freehand annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:42:46.779" level="INFO">${tc_start} = 1586295766.778666</msg>
<status status="PASS" starttime="20200407 17:42:46.779" endtime="20200407 17:42:46.779"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:42:46.779" level="INFO">${tc_start} = 1586295766.778666</msg>
<status status="PASS" starttime="20200407 17:42:46.779" endtime="20200407 17:42:46.779"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:46.778" endtime="20200407 17:42:46.780"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:42:46.780" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:42:46.780" endtime="20200407 17:42:52.638"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:52.638" endtime="20200407 17:42:56.761"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:42:56.762" endtime="20200407 17:42:56.888"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:46.777" endtime="20200407 17:42:56.888"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:56.889" endtime="20200407 17:42:56.928"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:56.928" endtime="20200407 17:42:56.960"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:56.960" endtime="20200407 17:42:57.000"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:57.001" endtime="20200407 17:42:57.003"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:57.004" endtime="20200407 17:42:57.048"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:57.003" endtime="20200407 17:42:57.048"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:57.049" endtime="20200407 17:42:57.089"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:42:57.090" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:42:57.090" endtime="20200407 17:42:57.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:42:58.201" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:42:57.199" endtime="20200407 17:42:58.201"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:57.000" endtime="20200407 17:42:58.202"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:58.204" endtime="20200407 17:42:58.206"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:58.208" endtime="20200407 17:42:58.244"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:58.207" endtime="20200407 17:42:58.244"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:42:58.244" endtime="20200407 17:42:58.267"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:42:58.267" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:42:58.267" endtime="20200407 17:42:58.381"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:42:59.383" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:42:58.381" endtime="20200407 17:42:59.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:58.202" endtime="20200407 17:42:59.384"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:42:59.387" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:42:59.385" endtime="20200407 17:43:00.005"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:01.007" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:00.006" endtime="20200407 17:43:01.007"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:56.889" endtime="20200407 17:43:01.007"></status>
</kw>
<status status="PASS" starttime="20200407 17:42:46.777" endtime="20200407 17:43:01.007"></status>
</kw>
<kw name="Draw a Freehand Annotation With Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a freehand annotation</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.009" endtime="20200407 17:43:01.010"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:43:01.019" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:43:01.010" endtime="20200407 17:43:01.019"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.010" endtime="20200407 17:43:01.019"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.008" endtime="20200407 17:43:01.020"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.008" endtime="20200407 17:43:01.020"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.021" endtime="20200407 17:43:01.043"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.020" endtime="20200407 17:43:01.043"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:43:01.043" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:43:01.043" endtime="20200407 17:43:01.082"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.020" endtime="20200407 17:43:01.082"></status>
</kw>
<kw name="Click On Freehand Annotation" library="CommonAnnotationWeb">
<doc>Click on freehand annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.083" endtime="20200407 17:43:01.107"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.083" endtime="20200407 17:43:01.107"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:01.107" level="INFO">Clicking element 'xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:01.107" endtime="20200407 17:43:01.152"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.083" endtime="20200407 17:43:01.152"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Freehand</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.154" endtime="20200407 17:43:01.181"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.153" endtime="20200407 17:43:01.181"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:43:01.197" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Freehand'.</msg>
<status status="PASS" starttime="20200407 17:43:01.182" endtime="20200407 17:43:01.197"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.182" endtime="20200407 17:43:01.197"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.153" endtime="20200407 17:43:01.197"></status>
</kw>
<kw name="Draw With Freehand Annotation" library="CommonAnnotationWeb">
<doc>Draw a Freehand Annotation</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.198" endtime="20200407 17:43:01.222"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.198" endtime="20200407 17:43:01.222"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:01.223" endtime="20200407 17:43:01.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:02.776" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:01.775" endtime="20200407 17:43:02.777"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.198" endtime="20200407 17:43:02.778"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:01.008" endtime="20200407 17:43:02.779"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:02.782" endtime="20200407 17:43:02.836"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:02.781" endtime="20200407 17:43:02.836"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:02.838" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:02.837" endtime="20200407 17:43:02.947"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:02.779" endtime="20200407 17:43:02.947"></status>
</kw>
<kw name="Edit The Form Of The Drawing Of The Freehand Annotation">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-125</arg>
<arg>93</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:02.951" endtime="20200407 17:43:02.992"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:02.950" endtime="20200407 17:43:02.993"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:02.994" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-125, y=93.</msg>
<status status="PASS" starttime="20200407 17:43:02.993" endtime="20200407 17:43:03.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:02.949" endtime="20200407 17:43:03.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:04.553" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:03.551" endtime="20200407 17:43:04.553"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>125</arg>
<arg>80</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:04.554" endtime="20200407 17:43:05.117"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:02.948" endtime="20200407 17:43:05.118"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:05.122" endtime="20200407 17:43:05.169"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.121" endtime="20200407 17:43:05.169"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:05.170" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:05.170" endtime="20200407 17:43:05.248"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.119" endtime="20200407 17:43:05.249"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:05.251" endtime="20200407 17:43:05.283"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.250" endtime="20200407 17:43:05.285"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:05.286" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:05.285" endtime="20200407 17:43:05.350"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.249" endtime="20200407 17:43:05.351"></status>
</kw>
<kw name="Select The Drawing Tool Freehand Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Freehand Annotation clicking over</doc>
<arguments>
<arg>125</arg>
<arg>80</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:05.356" endtime="20200407 17:43:05.409"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.354" endtime="20200407 17:43:05.410"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:05.412" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=125, y=80.</msg>
<status status="PASS" starttime="20200407 17:43:05.411" endtime="20200407 17:43:05.983"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.353" endtime="20200407 17:43:05.985"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.351" endtime="20200407 17:43:05.986"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:05.989" endtime="20200407 17:43:06.296"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.988" endtime="20200407 17:43:06.297"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:43:06.345" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:43:06.299" endtime="20200407 17:43:06.346"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.298" endtime="20200407 17:43:06.346"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:05.986" endtime="20200407 17:43:06.347"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:06.351" endtime="20200407 17:43:06.411"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.349" endtime="20200407 17:43:06.412"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:43:06.459" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:43:06.414" endtime="20200407 17:43:06.460"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.413" endtime="20200407 17:43:06.460"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.348" endtime="20200407 17:43:06.461"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:06.465" endtime="20200407 17:43:06.513"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.463" endtime="20200407 17:43:06.513"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:43:06.514" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:43:06.514" endtime="20200407 17:43:06.599"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.462" endtime="20200407 17:43:06.600"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:06.602" endtime="20200407 17:43:06.610"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.600" endtime="20200407 17:43:06.610"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:06.614" endtime="20200407 17:43:06.667"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:43:06.668" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:43:06.668" endtime="20200407 17:43:06.752"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:07.753" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:06.752" endtime="20200407 17:43:07.753"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.613" endtime="20200407 17:43:07.754"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:07.754" endtime="20200407 17:43:07.795"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:43:07.795" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:43:07.795" endtime="20200407 17:43:08.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:43:10.037" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:43:08.037" endtime="20200407 17:43:10.038"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.612" endtime="20200407 17:43:10.039"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:43:10.041" endtime="20200407 17:43:12.206"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:43:12.212" level="INFO">${tc_end} = 1586295792.211338</msg>
<status status="PASS" starttime="20200407 17:43:12.210" endtime="20200407 17:43:12.212"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:43:12.214" level="INFO">${tc_duration} = 25.432672023773193</msg>
<status status="PASS" starttime="20200407 17:43:12.213" endtime="20200407 17:43:12.215"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:43:12.217" level="INFO">${tc_duration} = 0.42387786706288655</msg>
<status status="PASS" starttime="20200407 17:43:12.216" endtime="20200407 17:43:12.217"></status>
</kw>
<msg timestamp="20200407 17:43:12.218" level="INFO">${duration} = 0.42387786706288655</msg>
<status status="PASS" starttime="20200407 17:43:12.209" endtime="20200407 17:43:12.219"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:43:12.221" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:43:12.219" endtime="20200407 17:43:12.221"></status>
</kw>
<msg timestamp="20200407 17:43:12.222" level="INFO">${ElapsedTime} = 0.42387786706288655</msg>
<status status="PASS" starttime="20200407 17:43:12.207" endtime="20200407 17:43:12.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:12.224" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:12.223" endtime="20200407 17:43:12.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:12.226" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:43:12.225" endtime="20200407 17:43:12.227"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:43:12.229" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:43:12.228" endtime="20200407 17:43:12.229"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:43:12.231" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:43:12.231" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:43:12.230" endtime="20200407 17:43:12.232"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:12.234" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:43:12.233" endtime="20200407 17:43:12.234"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:12.236" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:43:12.235" endtime="20200407 17:43:12.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:12.238" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:43:12.237" endtime="20200407 17:43:12.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:43:12.239" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:43:12.239" endtime="20200407 17:43:12.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:12.241" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:12.240" endtime="20200407 17:43:12.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:12.242" level="INFO">JM70-892:Modify the form of a freehand annotation</msg>
<status status="PASS" starttime="20200407 17:43:12.241" endtime="20200407 17:43:12.242"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:43:12.243" level="INFO">@{listeTestName} = [ JM70-892 | Modify the form of a freehand annotation ]</msg>
<status status="PASS" starttime="20200407 17:43:12.243" endtime="20200407 17:43:12.244"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:43:12.245" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:12.245" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:43:12.244" endtime="20200407 17:43:12.245"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:43:12.247" level="INFO">${tesCaseName} = Modify the form of a freehand annotation</msg>
<status status="PASS" starttime="20200407 17:43:12.245" endtime="20200407 17:43:12.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:43:12.248" level="INFO">Modify the form of a freehand annotation</msg>
<status status="PASS" starttime="20200407 17:43:12.247" endtime="20200407 17:43:12.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:12.249" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:12.249" endtime="20200407 17:43:12.249"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:12.252" endtime="20200407 17:43:14.459"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:14.460" endtime="20200407 17:43:14.462"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:14.462" endtime="20200407 17:43:14.518"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:43:14.567" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 853500657, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:43:14.519" endtime="20200407 17:43:14.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:43:14.569" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 853500657, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:43:14.568" endtime="20200407 17:43:14.569"></status>
</kw>
<msg timestamp="20200407 17:43:14.570" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 853500657, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:43:12.251" endtime="20200407 17:43:14.570"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:43:14.572" level="INFO">${getSessionID} = 853500657</msg>
<status status="PASS" starttime="20200407 17:43:14.571" endtime="20200407 17:43:14.572"></status>
</kw>
<msg timestamp="20200407 17:43:14.573" level="INFO">${SESSIONID} = 853500657</msg>
<status status="PASS" starttime="20200407 17:43:14.570" endtime="20200407 17:43:14.573"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:43:14.575" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:14.574" endtime="20200407 17:43:14.575"></status>
</kw>
<msg timestamp="20200407 17:43:14.576" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:14.573" endtime="20200407 17:43:14.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:43:14.577" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:14.576" endtime="20200407 17:43:14.578"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:14.579" endtime="20200407 17:43:16.601"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:16.603" endtime="20200407 17:43:16.718"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:16.718" endtime="20200407 17:43:16.796"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:14.578" endtime="20200407 17:43:16.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:16.797" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:16.797" endtime="20200407 17:43:16.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:16.802" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:43:16.802" endtime="20200407 17:43:16.803"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:43:17.383" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:43:16.803" endtime="20200407 17:43:17.384"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:17.385" endtime="20200407 17:43:17.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:17.986" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:43:17.984" endtime="20200407 17:43:17.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:17.988" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:17.987" endtime="20200407 17:43:17.988"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:16.801" endtime="20200407 17:43:17.988"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:43:18.481" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:43:17.989" endtime="20200407 17:43:18.481"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:18.482" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:43:18.483" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:43:18.482" endtime="20200407 17:43:18.483"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:43:18.484" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:43:18.483" endtime="20200407 17:43:18.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:43:18.485" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:43:18.485" endtime="20200407 17:43:18.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:43:18.487" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:43:18.486" endtime="20200407 17:43:18.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:43:18.489" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:43:18.488" endtime="20200407 17:43:18.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:18.490" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:18.489" endtime="20200407 17:43:18.490"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:43:18.776" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:43:18.491" endtime="20200407 17:43:18.776"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:18.779" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:18.779" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:43:18.777" endtime="20200407 17:43:18.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:43:18.782" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:43:18.781" endtime="20200407 17:43:18.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:43:18.785" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:43:18.784" endtime="20200407 17:43:18.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:43:18.788" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:43:18.786" endtime="20200407 17:43:18.788"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:43:18.790" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:43:18.789" endtime="20200407 17:43:18.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:18.792" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:18.791" endtime="20200407 17:43:18.793"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:43:19.107" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:43:18.793" endtime="20200407 17:43:19.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:19.110" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:43:19.108" endtime="20200407 17:43:19.110"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:19.112" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:43:19.113" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:43:19.111" endtime="20200407 17:43:19.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:43:19.115" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:43:19.114" endtime="20200407 17:43:19.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:43:19.118" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:19.116" endtime="20200407 17:43:19.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:19.121" endtime="20200407 17:43:19.122"></status>
</kw>
<msg timestamp="20200407 17:43:19.122" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:19.119" endtime="20200407 17:43:19.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:19.125" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:19.124" endtime="20200407 17:43:19.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:19.127" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:19.126" endtime="20200407 17:43:19.128"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:43:19.647" level="INFO">@{testCases} = [ {'id': '8525', 'name': 'Modify the form of a freehand annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '892'} ]</msg>
<status status="PASS" starttime="20200407 17:43:19.128" endtime="20200407 17:43:19.647"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:19.649" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:19.650" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:43:19.648" endtime="20200407 17:43:19.650"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:43:19.654" level="INFO">{'id': '8525', 'name': 'Modify the form of a freehand annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '892'}</msg>
<status status="PASS" starttime="20200407 17:43:19.653" endtime="20200407 17:43:19.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:19.658" endtime="20200407 17:43:19.659"></status>
</kw>
<msg timestamp="20200407 17:43:19.659" level="INFO">${testCase} = {'id': '8525', 'name': 'Modify the form of a freehand annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '892'}</msg>
<status status="PASS" starttime="20200407 17:43:19.655" endtime="20200407 17:43:19.660"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:43:19.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:43:19.661" endtime="20200407 17:43:19.663"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:19.652" endtime="20200407 17:43:19.664"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:19.651" endtime="20200407 17:43:19.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:43:19.666" level="INFO">{'id': '8525', 'name': 'Modify the form of a freehand annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '892'}</msg>
<status status="PASS" starttime="20200407 17:43:19.665" endtime="20200407 17:43:19.667"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:43:19.669" level="INFO">${testCaseNAME} = Modify the form of a freehand annotation</msg>
<status status="PASS" starttime="20200407 17:43:19.667" endtime="20200407 17:43:19.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:43:19.671" level="INFO">${testCaseID} = 8525</msg>
<status status="PASS" starttime="20200407 17:43:19.670" endtime="20200407 17:43:19.671"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:43:19.673" level="INFO">${testCaseExternalID} = 892</msg>
<status status="PASS" starttime="20200407 17:43:19.672" endtime="20200407 17:43:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:19.675" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:19.674" endtime="20200407 17:43:19.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:19.677" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:43:19.676" endtime="20200407 17:43:19.677"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:43:19.679" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:43:19.678" endtime="20200407 17:43:19.679"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:19.681" endtime="20200407 17:43:20.156"></status>
</kw>
<msg timestamp="20200407 17:43:20.158" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:43:19.680" endtime="20200407 17:43:20.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.160" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:43:20.159" endtime="20200407 17:43:20.161"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:20.163" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:43:20.162" endtime="20200407 17:43:20.164"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:20.166" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:43:20.164" endtime="20200407 17:43:20.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.169" endtime="20200407 17:43:20.170"></status>
</kw>
<msg timestamp="20200407 17:43:20.171" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:43:20.167" endtime="20200407 17:43:20.172"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:20.173" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:20.174" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:43:20.172" endtime="20200407 17:43:20.174"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:20.174" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:43:20.174" endtime="20200407 17:43:20.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.175" endtime="20200407 17:43:20.176"></status>
</kw>
<msg timestamp="20200407 17:43:20.176" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:43:20.175" endtime="20200407 17:43:20.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.177" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:43:20.177" endtime="20200407 17:43:20.177"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.176" endtime="20200407 17:43:20.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:43:20.178" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:43:20.177" endtime="20200407 17:43:20.178"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:20.178" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:43:20.178" endtime="20200407 17:43:20.178"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:20.179" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:20.179" endtime="20200407 17:43:20.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.182" endtime="20200407 17:43:20.183"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.181" endtime="20200407 17:43:20.183"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.180" endtime="20200407 17:43:20.184"></status>
</kw>
<msg timestamp="20200407 17:43:20.184" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:20.179" endtime="20200407 17:43:20.184"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.185" endtime="20200407 17:43:20.186"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:19.680" endtime="20200407 17:43:20.186"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.188" endtime="20200407 17:43:20.516"></status>
</kw>
<msg timestamp="20200407 17:43:20.517" level="INFO">@{getExecution} = [ PASS | [{'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:43:20.187" endtime="20200407 17:43:20.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.520" level="INFO">---- &gt; ['PASS', [{'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.32', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:43:20.519" endtime="20200407 17:43:20.520"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:20.523" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:43:20.521" endtime="20200407 17:43:20.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:20.525" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:43:20.524" endtime="20200407 17:43:20.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.529" endtime="20200407 17:43:20.530"></status>
</kw>
<msg timestamp="20200407 17:43:20.531" level="INFO">@{getExecution} = [ PASS | [{'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:43:20.527" endtime="20200407 17:43:20.531"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:20.533" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:20.534" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:43:20.532" endtime="20200407 17:43:20.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:20.537" level="INFO">${lastExecution} = [{'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:43:20.535" endtime="20200407 17:43:20.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.540" endtime="20200407 17:43:20.541"></status>
</kw>
<msg timestamp="20200407 17:43:20.542" level="INFO">${idBuild} = 332601</msg>
<status status="PASS" starttime="20200407 17:43:20.538" endtime="20200407 17:43:20.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.545" level="INFO">----- &gt; ID of Build(137) : 332601</msg>
<status status="PASS" starttime="20200407 17:43:20.545" endtime="20200407 17:43:20.546"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.543" endtime="20200407 17:43:20.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:43:20.547" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:43:20.547" endtime="20200407 17:43:20.548"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:20.549" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:20.548" endtime="20200407 17:43:20.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:20.551" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:43:20.550" endtime="20200407 17:43:20.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.554" endtime="20200407 17:43:20.555"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.553" endtime="20200407 17:43:20.555"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.552" endtime="20200407 17:43:20.556"></status>
</kw>
<msg timestamp="20200407 17:43:20.556" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:43:20.551" endtime="20200407 17:43:20.556"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:43:20.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:43:20.557" endtime="20200407 17:43:20.558"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.186" endtime="20200407 17:43:20.559"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:19.679" endtime="20200407 17:43:20.559"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:20.560" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:20.560" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:43:20.559" endtime="20200407 17:43:20.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:20.562" level="INFO">${lastExecution} = {'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:43:20.561" endtime="20200407 17:43:20.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:20.563" level="INFO">-----&gt; Last execution : {'id': '332601', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:47:45', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8526', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.32', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:43:20.563" endtime="20200407 17:43:20.564"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:43:20.565" level="INFO">${lastExecutionID} = 332601</msg>
<status status="PASS" starttime="20200407 17:43:20.564" endtime="20200407 17:43:20.565"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.568" endtime="20200407 17:43:20.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:43:20.573" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:20.571" endtime="20200407 17:43:20.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:43:20.574" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:43:20.573" endtime="20200407 17:43:20.574"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:43:20.576" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:43:20.575" endtime="20200407 17:43:20.576"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:43:20.577" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:20.577" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:43:20.576" endtime="20200407 17:43:20.577"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:43:20.578" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:43:20.578" endtime="20200407 17:43:20.579"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.582" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:43:20.581" endtime="20200407 17:43:20.582"></status>
</kw>
<msg timestamp="20200407 17:43:20.582" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:20.580" endtime="20200407 17:43:20.582"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:43:20.584" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:20.583" endtime="20200407 17:43:20.584"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.584" endtime="20200407 17:43:20.585"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.579" endtime="20200407 17:43:20.585"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.588" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:43:20.587" endtime="20200407 17:43:20.588"></status>
</kw>
<msg timestamp="20200407 17:43:20.588" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:20.586" endtime="20200407 17:43:20.589"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:43:20.590" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:20.589" endtime="20200407 17:43:20.590"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.591" endtime="20200407 17:43:20.591"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.586" endtime="20200407 17:43:20.592"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.579" endtime="20200407 17:43:20.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.593" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:43:20.592" endtime="20200407 17:43:20.593"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:43:20.596" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:43:20.595" endtime="20200407 17:43:20.596"></status>
</kw>
<msg timestamp="20200407 17:43:20.596" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:43:20.594" endtime="20200407 17:43:20.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.598" endtime="20200407 17:43:20.599"></status>
</kw>
<msg timestamp="20200407 17:43:20.599" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:43:20.597" endtime="20200407 17:43:20.600"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.601" endtime="20200407 17:43:20.602"></status>
</kw>
<msg timestamp="20200407 17:43:20.602" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:43:20.600" endtime="20200407 17:43:20.602"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:43:20.603" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:43:20.603" endtime="20200407 17:43:20.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.606" endtime="20200407 17:43:20.606"></status>
</kw>
<msg timestamp="20200407 17:43:20.607" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:20.604" endtime="20200407 17:43:20.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:43:20.609" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:20.608" endtime="20200407 17:43:20.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.611" endtime="20200407 17:43:20.874"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.609" endtime="20200407 17:43:20.875"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.570" endtime="20200407 17:43:20.875"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.569" endtime="20200407 17:43:20.876"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.566" endtime="20200407 17:43:20.877"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.566" endtime="20200407 17:43:20.877"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:20.878" endtime="20200407 17:43:20.880"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:16.799" endtime="20200407 17:43:20.881"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:16.798" endtime="20200407 17:43:20.882"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:10.039" endtime="20200407 17:43:20.882"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:06.611" endtime="20200407 17:43:20.883"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:42:46.777" endtime="20200407 17:43:20.884" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t2" name="JM70-893:Modify the form of a line annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:43:20.894" level="INFO">${tc_start} = 1586295800.894015</msg>
<status status="PASS" starttime="20200407 17:43:20.893" endtime="20200407 17:43:20.894"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:43:20.897" level="INFO">${tc_start} = 1586295800.894015</msg>
<status status="PASS" starttime="20200407 17:43:20.895" endtime="20200407 17:43:20.897"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.891" endtime="20200407 17:43:20.898"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:43:20.900" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:43:20.899" endtime="20200407 17:43:26.922"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:26.922" endtime="20200407 17:43:31.045"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:43:31.045" endtime="20200407 17:43:31.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.890" endtime="20200407 17:43:31.160"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.161" endtime="20200407 17:43:31.195"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.195" endtime="20200407 17:43:31.224"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.224" endtime="20200407 17:43:31.258"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.258" endtime="20200407 17:43:31.259"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.260" endtime="20200407 17:43:31.280"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:31.260" endtime="20200407 17:43:31.280"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:31.280" endtime="20200407 17:43:31.301"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:43:31.302" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:43:31.301" endtime="20200407 17:43:31.353"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:32.354" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:31.353" endtime="20200407 17:43:32.354"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:31.258" endtime="20200407 17:43:32.354"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:32.355" endtime="20200407 17:43:32.357"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:32.357" endtime="20200407 17:43:32.376"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:32.357" endtime="20200407 17:43:32.376"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:32.377" endtime="20200407 17:43:32.395"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:43:32.396" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:43:32.396" endtime="20200407 17:43:32.459"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:33.461" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:32.460" endtime="20200407 17:43:33.461"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:32.354" endtime="20200407 17:43:33.461"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:43:33.462" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:43:33.462" endtime="20200407 17:43:33.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:34.873" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:33.872" endtime="20200407 17:43:34.873"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:31.160" endtime="20200407 17:43:34.873"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:20.888" endtime="20200407 17:43:34.873"></status>
</kw>
<kw name="Draw a Line Annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a line annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:34.875" endtime="20200407 17:43:34.876"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:43:34.884" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:43:34.876" endtime="20200407 17:43:34.884"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.876" endtime="20200407 17:43:34.885"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.874" endtime="20200407 17:43:34.885"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.874" endtime="20200407 17:43:34.885"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:34.886" endtime="20200407 17:43:34.909"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.886" endtime="20200407 17:43:34.909"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:43:34.909" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:43:34.909" endtime="20200407 17:43:34.948"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.885" endtime="20200407 17:43:34.948"></status>
</kw>
<kw name="Click On Line Annotation" library="CommonAnnotationWeb">
<doc>Click on line annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:34.949" endtime="20200407 17:43:34.971"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.948" endtime="20200407 17:43:34.971"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:43:34.971" level="INFO">Clicking element 'xpath://div[@id='linestring_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:43:34.971" endtime="20200407 17:43:35.068"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.948" endtime="20200407 17:43:35.068"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Line</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:35.069" endtime="20200407 17:43:35.097"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.069" endtime="20200407 17:43:35.097"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:43:35.111" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Line'.</msg>
<status status="PASS" starttime="20200407 17:43:35.098" endtime="20200407 17:43:35.111"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.097" endtime="20200407 17:43:35.111"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.069" endtime="20200407 17:43:35.112"></status>
</kw>
<kw name="Draw With Line Annotation" library="CommonAnnotationWeb">
<doc>Draw a Line Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:35.113" endtime="20200407 17:43:35.141"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.113" endtime="20200407 17:43:35.141"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:35.142" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:43:35.142" endtime="20200407 17:43:35.717"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.112" endtime="20200407 17:43:35.718"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:35.719" endtime="20200407 17:43:36.307"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:36.311" endtime="20200407 17:43:36.358"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:36.310" endtime="20200407 17:43:36.359"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:36.361" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:43:36.360" endtime="20200407 17:43:36.921"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:36.308" endtime="20200407 17:43:36.921"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:35.112" endtime="20200407 17:43:36.922"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:34.874" endtime="20200407 17:43:36.922"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:36.924" endtime="20200407 17:43:36.970"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:36.924" endtime="20200407 17:43:36.970"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:36.971" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:36.971" endtime="20200407 17:43:37.055"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:36.923" endtime="20200407 17:43:37.056"></status>
</kw>
<kw name="Edit The Form Of The Drawing Of The Line Annotation">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-125</arg>
<arg>92</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:37.059" endtime="20200407 17:43:37.092"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:37.058" endtime="20200407 17:43:37.092"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:37.093" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-125, y=92.</msg>
<status status="PASS" starttime="20200407 17:43:37.093" endtime="20200407 17:43:37.834"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:37.057" endtime="20200407 17:43:37.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:38.839" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:37.835" endtime="20200407 17:43:38.839"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>125</arg>
<arg>130</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:38.839" endtime="20200407 17:43:39.417"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:37.056" endtime="20200407 17:43:39.417"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:39.418" endtime="20200407 17:43:39.473"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.418" endtime="20200407 17:43:39.473"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:39.475" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:39.474" endtime="20200407 17:43:39.569"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.417" endtime="20200407 17:43:39.570"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:39.574" endtime="20200407 17:43:39.614"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.572" endtime="20200407 17:43:39.615"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:43:39.616" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:43:39.616" endtime="20200407 17:43:39.686"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.571" endtime="20200407 17:43:39.686"></status>
</kw>
<kw name="Select The Drawing Tool Line Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Line Annotation clicking over</doc>
<arguments>
<arg>125</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:39.691" endtime="20200407 17:43:39.733"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.689" endtime="20200407 17:43:39.734"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:43:39.735" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=125, y=130.</msg>
<status status="PASS" starttime="20200407 17:43:39.734" endtime="20200407 17:43:40.290"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.688" endtime="20200407 17:43:40.291"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:39.687" endtime="20200407 17:43:40.291"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:40.292" endtime="20200407 17:43:40.575"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.292" endtime="20200407 17:43:40.575"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:43:40.623" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:43:40.578" endtime="20200407 17:43:40.624"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.577" endtime="20200407 17:43:40.625"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.291" endtime="20200407 17:43:40.625"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:40.629" endtime="20200407 17:43:40.691"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.627" endtime="20200407 17:43:40.692"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:43:40.728" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:43:40.694" endtime="20200407 17:43:40.729"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.693" endtime="20200407 17:43:40.729"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.626" endtime="20200407 17:43:40.730"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:40.732" endtime="20200407 17:43:40.776"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.731" endtime="20200407 17:43:40.776"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:43:40.777" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:43:40.777" endtime="20200407 17:43:40.867"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.730" endtime="20200407 17:43:40.867"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:40.869" endtime="20200407 17:43:40.878"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.868" endtime="20200407 17:43:40.879"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:40.884" endtime="20200407 17:43:40.929"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:43:40.931" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:43:40.930" endtime="20200407 17:43:40.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:43:41.980" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:43:40.978" endtime="20200407 17:43:41.980"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.882" endtime="20200407 17:43:41.981"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:41.981" endtime="20200407 17:43:42.010"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:43:42.010" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:43:42.010" endtime="20200407 17:43:42.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:43:44.228" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:43:42.227" endtime="20200407 17:43:44.229"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.881" endtime="20200407 17:43:44.230"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:43:44.232" endtime="20200407 17:43:46.384"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:43:46.389" level="INFO">${tc_end} = 1586295826.389186</msg>
<status status="PASS" starttime="20200407 17:43:46.388" endtime="20200407 17:43:46.389"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:43:46.392" level="INFO">${tc_duration} = 25.495170831680298</msg>
<status status="PASS" starttime="20200407 17:43:46.390" endtime="20200407 17:43:46.392"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:43:46.394" level="INFO">${tc_duration} = 0.4249195138613383</msg>
<status status="PASS" starttime="20200407 17:43:46.393" endtime="20200407 17:43:46.395"></status>
</kw>
<msg timestamp="20200407 17:43:46.396" level="INFO">${duration} = 0.4249195138613383</msg>
<status status="PASS" starttime="20200407 17:43:46.386" endtime="20200407 17:43:46.396"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:43:46.398" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:43:46.397" endtime="20200407 17:43:46.398"></status>
</kw>
<msg timestamp="20200407 17:43:46.399" level="INFO">${ElapsedTime} = 0.4249195138613383</msg>
<status status="PASS" starttime="20200407 17:43:46.385" endtime="20200407 17:43:46.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:46.401" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:46.400" endtime="20200407 17:43:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:46.403" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:43:46.402" endtime="20200407 17:43:46.404"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:43:46.406" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:43:46.404" endtime="20200407 17:43:46.407"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:43:46.408" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:43:46.409" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:43:46.407" endtime="20200407 17:43:46.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:46.411" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:43:46.410" endtime="20200407 17:43:46.412"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:46.413" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:43:46.412" endtime="20200407 17:43:46.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:43:46.415" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:43:46.414" endtime="20200407 17:43:46.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:43:46.416" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:43:46.416" endtime="20200407 17:43:46.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:46.418" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:46.417" endtime="20200407 17:43:46.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:46.419" level="INFO">JM70-893:Modify the form of a line annotation</msg>
<status status="PASS" starttime="20200407 17:43:46.419" endtime="20200407 17:43:46.419"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:43:46.420" level="INFO">@{listeTestName} = [ JM70-893 | Modify the form of a line annotation ]</msg>
<status status="PASS" starttime="20200407 17:43:46.420" endtime="20200407 17:43:46.421"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:43:46.422" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:46.422" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:43:46.421" endtime="20200407 17:43:46.422"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:43:46.423" level="INFO">${tesCaseName} = Modify the form of a line annotation</msg>
<status status="PASS" starttime="20200407 17:43:46.423" endtime="20200407 17:43:46.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:43:46.425" level="INFO">Modify the form of a line annotation</msg>
<status status="PASS" starttime="20200407 17:43:46.424" endtime="20200407 17:43:46.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:46.426" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:43:46.425" endtime="20200407 17:43:46.426"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:46.429" endtime="20200407 17:43:48.446"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:48.447" endtime="20200407 17:43:48.448"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:48.448" endtime="20200407 17:43:48.497"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:43:48.547" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 192386174, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:43:48.497" endtime="20200407 17:43:48.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:43:48.548" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 192386174, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:43:48.547" endtime="20200407 17:43:48.548"></status>
</kw>
<msg timestamp="20200407 17:43:48.549" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 192386174, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:43:46.428" endtime="20200407 17:43:48.549"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:43:48.551" level="INFO">${getSessionID} = 192386174</msg>
<status status="PASS" starttime="20200407 17:43:48.551" endtime="20200407 17:43:48.551"></status>
</kw>
<msg timestamp="20200407 17:43:48.552" level="INFO">${SESSIONID} = 192386174</msg>
<status status="PASS" starttime="20200407 17:43:48.550" endtime="20200407 17:43:48.552"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:43:48.554" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:48.553" endtime="20200407 17:43:48.554"></status>
</kw>
<msg timestamp="20200407 17:43:48.555" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:48.553" endtime="20200407 17:43:48.555"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:43:48.556" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:48.556" endtime="20200407 17:43:48.557"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:48.558" endtime="20200407 17:43:50.571"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:50.572" endtime="20200407 17:43:50.611"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:50.612" endtime="20200407 17:43:50.659"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:48.557" endtime="20200407 17:43:50.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:50.661" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:50.660" endtime="20200407 17:43:50.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:50.665" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:43:50.665" endtime="20200407 17:43:50.666"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:43:51.439" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:43:50.666" endtime="20200407 17:43:51.440"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:51.441" endtime="20200407 17:43:52.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:52.039" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:43:52.038" endtime="20200407 17:43:52.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:52.041" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:52.041" endtime="20200407 17:43:52.042"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:50.664" endtime="20200407 17:43:52.043"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:43:52.528" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:43:52.043" endtime="20200407 17:43:52.528"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:52.530" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:43:52.530" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:43:52.529" endtime="20200407 17:43:52.531"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:43:52.532" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:43:52.531" endtime="20200407 17:43:52.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:43:52.534" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:43:52.533" endtime="20200407 17:43:52.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:43:52.535" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:43:52.534" endtime="20200407 17:43:52.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:43:52.536" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:43:52.536" endtime="20200407 17:43:52.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:52.538" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:52.537" endtime="20200407 17:43:52.538"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:43:52.876" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:43:52.538" endtime="20200407 17:43:52.877"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:52.879" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:52.879" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:43:52.877" endtime="20200407 17:43:52.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:43:52.882" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:43:52.881" endtime="20200407 17:43:52.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:43:52.884" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:43:52.883" endtime="20200407 17:43:52.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:43:52.886" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:43:52.885" endtime="20200407 17:43:52.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:43:52.889" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:43:52.888" endtime="20200407 17:43:52.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:52.891" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:52.890" endtime="20200407 17:43:52.891"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:43:53.237" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:43:52.892" endtime="20200407 17:43:53.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:53.239" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:43:53.238" endtime="20200407 17:43:53.240"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:53.242" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:43:53.242" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:43:53.241" endtime="20200407 17:43:53.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:43:53.244" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:43:53.243" endtime="20200407 17:43:53.245"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:43:53.247" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:53.245" endtime="20200407 17:43:53.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:53.249" endtime="20200407 17:43:53.250"></status>
</kw>
<msg timestamp="20200407 17:43:53.251" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:53.248" endtime="20200407 17:43:53.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:43:53.253" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:43:53.252" endtime="20200407 17:43:53.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:53.255" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:53.254" endtime="20200407 17:43:53.255"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:43:53.668" level="INFO">@{testCases} = [ {'id': '8527', 'name': 'Modify the form of a line annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '893'} ]</msg>
<status status="PASS" starttime="20200407 17:43:53.256" endtime="20200407 17:43:53.668"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:43:53.669" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:53.670" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:43:53.669" endtime="20200407 17:43:53.670"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:43:53.672" level="INFO">{'id': '8527', 'name': 'Modify the form of a line annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '893'}</msg>
<status status="PASS" starttime="20200407 17:43:53.671" endtime="20200407 17:43:53.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:53.674" endtime="20200407 17:43:53.674"></status>
</kw>
<msg timestamp="20200407 17:43:53.675" level="INFO">${testCase} = {'id': '8527', 'name': 'Modify the form of a line annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '893'}</msg>
<status status="PASS" starttime="20200407 17:43:53.672" endtime="20200407 17:43:53.675"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:43:53.676" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:43:53.675" endtime="20200407 17:43:53.677"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:53.670" endtime="20200407 17:43:53.677"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:53.670" endtime="20200407 17:43:53.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:43:53.678" level="INFO">{'id': '8527', 'name': 'Modify the form of a line annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '893'}</msg>
<status status="PASS" starttime="20200407 17:43:53.678" endtime="20200407 17:43:53.679"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:43:53.680" level="INFO">${testCaseNAME} = Modify the form of a line annotation</msg>
<status status="PASS" starttime="20200407 17:43:53.679" endtime="20200407 17:43:53.680"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:43:53.681" level="INFO">${testCaseID} = 8527</msg>
<status status="PASS" starttime="20200407 17:43:53.681" endtime="20200407 17:43:53.681"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:43:53.683" level="INFO">${testCaseExternalID} = 893</msg>
<status status="PASS" starttime="20200407 17:43:53.682" endtime="20200407 17:43:53.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:43:53.684" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:43:53.683" endtime="20200407 17:43:53.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:53.685" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:43:53.685" endtime="20200407 17:43:53.686"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:43:53.687" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:43:53.686" endtime="20200407 17:43:53.687"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:53.689" endtime="20200407 17:43:53.996"></status>
</kw>
<msg timestamp="20200407 17:43:53.997" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:43:53.688" endtime="20200407 17:43:53.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:43:53.999" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:43:53.998" endtime="20200407 17:43:53.999"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:54.001" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:43:54.000" endtime="20200407 17:43:54.002"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:54.003" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:43:54.002" endtime="20200407 17:43:54.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.006" endtime="20200407 17:43:54.008"></status>
</kw>
<msg timestamp="20200407 17:43:54.008" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:43:54.005" endtime="20200407 17:43:54.009"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:54.010" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:54.011" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:43:54.010" endtime="20200407 17:43:54.011"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:54.013" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:43:54.012" endtime="20200407 17:43:54.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.016" endtime="20200407 17:43:54.017"></status>
</kw>
<msg timestamp="20200407 17:43:54.018" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:43:54.014" endtime="20200407 17:43:54.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.022" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:43:54.021" endtime="20200407 17:43:54.022"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.019" endtime="20200407 17:43:54.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:43:54.024" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:43:54.023" endtime="20200407 17:43:54.025"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:54.026" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:43:54.025" endtime="20200407 17:43:54.027"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:54.028" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:54.027" endtime="20200407 17:43:54.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.032" endtime="20200407 17:43:54.033"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.031" endtime="20200407 17:43:54.033"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.030" endtime="20200407 17:43:54.033"></status>
</kw>
<msg timestamp="20200407 17:43:54.034" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:54.029" endtime="20200407 17:43:54.034"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.034" endtime="20200407 17:43:54.035"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:53.688" endtime="20200407 17:43:54.036"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.037" endtime="20200407 17:43:54.321"></status>
</kw>
<msg timestamp="20200407 17:43:54.321" level="INFO">@{getExecution} = [ PASS | [{'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:43:54.036" endtime="20200407 17:43:54.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.323" level="INFO">---- &gt; ['PASS', [{'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.33', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:43:54.322" endtime="20200407 17:43:54.323"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:54.325" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:43:54.324" endtime="20200407 17:43:54.325"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:43:54.325" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:43:54.325" endtime="20200407 17:43:54.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.326" endtime="20200407 17:43:54.326"></status>
</kw>
<msg timestamp="20200407 17:43:54.327" level="INFO">@{getExecution} = [ PASS | [{'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:43:54.325" endtime="20200407 17:43:54.327"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:54.327" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:54.327" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:43:54.327" endtime="20200407 17:43:54.328"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:54.330" level="INFO">${lastExecution} = [{'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:43:54.328" endtime="20200407 17:43:54.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.330" endtime="20200407 17:43:54.330"></status>
</kw>
<msg timestamp="20200407 17:43:54.330" level="INFO">${idBuild} = 332604</msg>
<status status="PASS" starttime="20200407 17:43:54.330" endtime="20200407 17:43:54.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.333" level="INFO">----- &gt; ID of Build(137) : 332604</msg>
<status status="PASS" starttime="20200407 17:43:54.332" endtime="20200407 17:43:54.333"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.331" endtime="20200407 17:43:54.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:43:54.334" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:43:54.334" endtime="20200407 17:43:54.334"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:54.336" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:43:54.335" endtime="20200407 17:43:54.336"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:43:54.337" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:43:54.336" endtime="20200407 17:43:54.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.341" endtime="20200407 17:43:54.341"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.340" endtime="20200407 17:43:54.342"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.338" endtime="20200407 17:43:54.342"></status>
</kw>
<msg timestamp="20200407 17:43:54.342" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:43:54.338" endtime="20200407 17:43:54.343"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:43:54.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:43:54.343" endtime="20200407 17:43:54.344"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.036" endtime="20200407 17:43:54.345"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:53.687" endtime="20200407 17:43:54.345"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:43:54.346" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:43:54.346" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:43:54.345" endtime="20200407 17:43:54.347"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:43:54.348" level="INFO">${lastExecution} = {'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:43:54.347" endtime="20200407 17:43:54.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:43:54.349" level="INFO">-----&gt; Last execution : {'id': '332604', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:07', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8528', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.33', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:43:54.348" endtime="20200407 17:43:54.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:43:54.351" level="INFO">${lastExecutionID} = 332604</msg>
<status status="PASS" starttime="20200407 17:43:54.350" endtime="20200407 17:43:54.351"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.353" endtime="20200407 17:43:54.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:43:54.357" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:54.357" endtime="20200407 17:43:54.357"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:43:54.359" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:43:54.358" endtime="20200407 17:43:54.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:43:54.360" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:43:54.359" endtime="20200407 17:43:54.360"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:43:54.361" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:43:54.362" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:43:54.361" endtime="20200407 17:43:54.362"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:43:54.363" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:43:54.363" endtime="20200407 17:43:54.363"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.366" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:43:54.365" endtime="20200407 17:43:54.366"></status>
</kw>
<msg timestamp="20200407 17:43:54.366" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:54.364" endtime="20200407 17:43:54.367"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:43:54.368" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:54.367" endtime="20200407 17:43:54.368"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.368" endtime="20200407 17:43:54.369"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.364" endtime="20200407 17:43:54.369"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.372" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:43:54.371" endtime="20200407 17:43:54.372"></status>
</kw>
<msg timestamp="20200407 17:43:54.372" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:54.370" endtime="20200407 17:43:54.373"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:43:54.374" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:43:54.373" endtime="20200407 17:43:54.374"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.374" endtime="20200407 17:43:54.375"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.370" endtime="20200407 17:43:54.375"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.363" endtime="20200407 17:43:54.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.377" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:43:54.376" endtime="20200407 17:43:54.377"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:43:54.379" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:43:54.378" endtime="20200407 17:43:54.379"></status>
</kw>
<msg timestamp="20200407 17:43:54.380" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:43:54.377" endtime="20200407 17:43:54.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.381" endtime="20200407 17:43:54.382"></status>
</kw>
<msg timestamp="20200407 17:43:54.382" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:43:54.381" endtime="20200407 17:43:54.383"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.384" endtime="20200407 17:43:54.385"></status>
</kw>
<msg timestamp="20200407 17:43:54.385" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:43:54.383" endtime="20200407 17:43:54.385"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:43:54.386" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:43:54.386" endtime="20200407 17:43:54.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.388" endtime="20200407 17:43:54.388"></status>
</kw>
<msg timestamp="20200407 17:43:54.389" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:54.387" endtime="20200407 17:43:54.389"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:43:54.390" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:43:54.389" endtime="20200407 17:43:54.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.392" endtime="20200407 17:43:54.770"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.391" endtime="20200407 17:43:54.770"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.355" endtime="20200407 17:43:54.771"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.355" endtime="20200407 17:43:54.772"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.352" endtime="20200407 17:43:54.772"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.351" endtime="20200407 17:43:54.773"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:43:54.774" endtime="20200407 17:43:54.775"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:50.663" endtime="20200407 17:43:54.775"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:50.662" endtime="20200407 17:43:54.776"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:44.230" endtime="20200407 17:43:54.777"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:40.880" endtime="20200407 17:43:54.778"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:43:20.886" endtime="20200407 17:43:54.778" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t3" name="JM70-894:Modify the form of a rectangle annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:43:54.788" level="INFO">${tc_start} = 1586295834.788161</msg>
<status status="PASS" starttime="20200407 17:43:54.786" endtime="20200407 17:43:54.788"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:43:54.790" level="INFO">${tc_start} = 1586295834.788161</msg>
<status status="PASS" starttime="20200407 17:43:54.789" endtime="20200407 17:43:54.790"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.785" endtime="20200407 17:43:54.791"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:43:54.792" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:43:54.791" endtime="20200407 17:44:00.727"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:00.728" endtime="20200407 17:44:04.849"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:44:04.849" endtime="20200407 17:44:04.967"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.783" endtime="20200407 17:44:04.967"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:04.968" endtime="20200407 17:44:05.007"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:05.007" endtime="20200407 17:44:05.037"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:05.037" endtime="20200407 17:44:05.068"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:05.069" endtime="20200407 17:44:05.070"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:05.071" endtime="20200407 17:44:05.090"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:05.070" endtime="20200407 17:44:05.091"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:05.091" endtime="20200407 17:44:05.110"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:44:05.111" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:44:05.111" endtime="20200407 17:44:05.165"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:06.166" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:05.166" endtime="20200407 17:44:06.166"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:05.069" endtime="20200407 17:44:06.167"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:06.168" endtime="20200407 17:44:06.171"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:06.173" endtime="20200407 17:44:06.203"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:06.172" endtime="20200407 17:44:06.203"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:06.204" endtime="20200407 17:44:06.228"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:44:06.229" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:44:06.228" endtime="20200407 17:44:06.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:07.309" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:06.308" endtime="20200407 17:44:07.309"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:06.167" endtime="20200407 17:44:07.311"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:44:07.314" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:44:07.312" endtime="20200407 17:44:07.847"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:08.848" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:07.847" endtime="20200407 17:44:08.848"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:04.968" endtime="20200407 17:44:08.848"></status>
</kw>
<status status="PASS" starttime="20200407 17:43:54.782" endtime="20200407 17:44:08.849"></status>
</kw>
<kw name="Draw a Rectangle annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a line annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:08.851" endtime="20200407 17:44:08.852"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:44:08.862" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:44:08.853" endtime="20200407 17:44:08.862"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.853" endtime="20200407 17:44:08.862"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.850" endtime="20200407 17:44:08.862"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.850" endtime="20200407 17:44:08.863"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:08.864" endtime="20200407 17:44:08.887"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.863" endtime="20200407 17:44:08.887"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:44:08.888" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:44:08.888" endtime="20200407 17:44:08.926"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.863" endtime="20200407 17:44:08.927"></status>
</kw>
<kw name="Click On Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Click on rectangle annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:08.928" endtime="20200407 17:44:09.197"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.927" endtime="20200407 17:44:09.197"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:44:09.199" level="INFO">Clicking element 'xpath://div[@id='rectangle_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:44:09.198" endtime="20200407 17:44:09.344"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.927" endtime="20200407 17:44:09.344"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Rectangle</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:09.347" endtime="20200407 17:44:09.380"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.346" endtime="20200407 17:44:09.380"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:44:09.395" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Rectangle'.</msg>
<status status="PASS" starttime="20200407 17:44:09.380" endtime="20200407 17:44:09.395"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.380" endtime="20200407 17:44:09.395"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.345" endtime="20200407 17:44:09.395"></status>
</kw>
<kw name="Draw With Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Draw a Rectangle Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:09.397" endtime="20200407 17:44:09.447"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.396" endtime="20200407 17:44:09.448"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:09.449" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:44:09.448" endtime="20200407 17:44:10.020"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.396" endtime="20200407 17:44:10.020"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:10.021" endtime="20200407 17:44:10.042"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.021" endtime="20200407 17:44:10.042"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:10.042" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200407 17:44:10.042" endtime="20200407 17:44:10.592"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.020" endtime="20200407 17:44:10.593"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:10.600" endtime="20200407 17:44:10.652"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.598" endtime="20200407 17:44:10.653"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:10.655" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:44:10.654" endtime="20200407 17:44:11.204"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.597" endtime="20200407 17:44:11.205"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.596" endtime="20200407 17:44:11.205"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:11.206" endtime="20200407 17:44:11.226"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:11.206" endtime="20200407 17:44:11.226"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:11.227" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:44:11.227" endtime="20200407 17:44:11.759"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:11.205" endtime="20200407 17:44:11.760"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:11.205" endtime="20200407 17:44:11.760"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.595" endtime="20200407 17:44:11.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:12.764" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:11.761" endtime="20200407 17:44:12.765"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:10.594" endtime="20200407 17:44:12.765"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:09.396" endtime="20200407 17:44:12.765"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:08.849" endtime="20200407 17:44:12.765"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:12.767" endtime="20200407 17:44:12.798"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:12.765" endtime="20200407 17:44:12.798"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:12.799" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:12.798" endtime="20200407 17:44:12.884"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:12.765" endtime="20200407 17:44:12.884"></status>
</kw>
<kw name="Edit The Form Of The Drawing Of The Rectangle Annotation">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:12.887" endtime="20200407 17:44:12.920"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:12.886" endtime="20200407 17:44:12.920"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:12.922" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200407 17:44:12.921" endtime="20200407 17:44:13.476"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:12.885" endtime="20200407 17:44:13.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:14.480" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:13.477" endtime="20200407 17:44:14.480"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>${mapElement}</arg>
<arg>-60</arg>
<arg>10</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:14.481" endtime="20200407 17:44:15.052"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:12.884" endtime="20200407 17:44:15.053"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:15.057" endtime="20200407 17:44:15.114"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.056" endtime="20200407 17:44:15.114"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:15.116" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:15.115" endtime="20200407 17:44:15.166"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.054" endtime="20200407 17:44:15.166"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:15.169" endtime="20200407 17:44:15.186"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.168" endtime="20200407 17:44:15.186"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:15.187" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:15.187" endtime="20200407 17:44:15.254"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.167" endtime="20200407 17:44:15.255"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>-60</arg>
<arg>10</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:15.258" endtime="20200407 17:44:15.296"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.257" endtime="20200407 17:44:15.297"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:15.298" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-60, y=10.</msg>
<status status="PASS" starttime="20200407 17:44:15.297" endtime="20200407 17:44:15.851"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.256" endtime="20200407 17:44:15.851"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.255" endtime="20200407 17:44:15.852"></status>
</kw>
<kw name="Verify That The Drawn Annotation Is Selected To Modify It" library="CommonAnnotationWeb">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
<arg>reason=Wait until the annotation is ready to be changed</arg>
</arguments>
<msg timestamp="20200407 17:44:16.855" level="INFO">Slept 1 second</msg>
<msg timestamp="20200407 17:44:16.855" level="INFO">Wait until the annotation is ready to be changed</msg>
<status status="PASS" starttime="20200407 17:44:15.853" endtime="20200407 17:44:16.855"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.app.clickToolManager.getModifyTool().interaction.getFeatures().getArray()[0].L.selected</arg>
</arguments>
<assign>
<var>${isSelectedAnnotation}</var>
</assign>
<msg timestamp="20200407 17:44:16.858" level="INFO">Executing JavaScript:
return window.JMap.app.clickToolManager.getModifyTool().interaction.getFeatures().getArray()[0].L.selected
Without any arguments.</msg>
<msg timestamp="20200407 17:44:16.867" level="INFO">${isSelectedAnnotation} = True</msg>
<status status="PASS" starttime="20200407 17:44:16.857" endtime="20200407 17:44:16.868"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${isSelectedAnnotation}</arg>
<arg>${True}</arg>
<arg>msg=The current annotation does not selected to be changed. But, it should be to be changed!!!</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${isSelectedAnnotation}</arg>
<arg>${True}</arg>
<arg>msg=The current annotation does not selected to be changed. But, it should be to be changed!!!</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:16.869" endtime="20200407 17:44:16.870"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:16.868" endtime="20200407 17:44:16.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:44:17.873" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:16.871" endtime="20200407 17:44:17.873"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:15.853" endtime="20200407 17:44:17.874"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:17.878" endtime="20200407 17:44:17.953"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:17.876" endtime="20200407 17:44:17.954"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:44:18.010" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:44:17.956" endtime="20200407 17:44:18.010"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:17.955" endtime="20200407 17:44:18.011"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:17.874" endtime="20200407 17:44:18.012"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:18.015" endtime="20200407 17:44:18.072"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.014" endtime="20200407 17:44:18.073"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:44:18.117" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:44:18.075" endtime="20200407 17:44:18.117"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.074" endtime="20200407 17:44:18.118"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.013" endtime="20200407 17:44:18.118"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:18.122" endtime="20200407 17:44:18.179"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.120" endtime="20200407 17:44:18.179"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:44:18.181" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:44:18.180" endtime="20200407 17:44:18.297"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.119" endtime="20200407 17:44:18.297"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:18.299" endtime="20200407 17:44:18.312"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.298" endtime="20200407 17:44:18.313"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:18.319" endtime="20200407 17:44:18.356"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:44:18.357" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:44:18.357" endtime="20200407 17:44:18.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:19.458" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:18.458" endtime="20200407 17:44:19.458"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.317" endtime="20200407 17:44:19.459"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:19.459" endtime="20200407 17:44:19.508"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:44:19.509" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:44:19.509" endtime="20200407 17:44:19.724"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:44:21.727" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:44:19.724" endtime="20200407 17:44:21.728"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.316" endtime="20200407 17:44:21.729"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:44:21.731" endtime="20200407 17:44:23.882"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:44:23.887" level="INFO">${tc_end} = 1586295863.886521</msg>
<status status="PASS" starttime="20200407 17:44:23.886" endtime="20200407 17:44:23.888"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:44:23.890" level="INFO">${tc_duration} = 29.098360061645508</msg>
<status status="PASS" starttime="20200407 17:44:23.888" endtime="20200407 17:44:23.890"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:44:23.892" level="INFO">${tc_duration} = 0.4849726676940918</msg>
<status status="PASS" starttime="20200407 17:44:23.891" endtime="20200407 17:44:23.892"></status>
</kw>
<msg timestamp="20200407 17:44:23.893" level="INFO">${duration} = 0.4849726676940918</msg>
<status status="PASS" starttime="20200407 17:44:23.885" endtime="20200407 17:44:23.893"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:44:23.895" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:44:23.893" endtime="20200407 17:44:23.895"></status>
</kw>
<msg timestamp="20200407 17:44:23.897" level="INFO">${ElapsedTime} = 0.4849726676940918</msg>
<status status="PASS" starttime="20200407 17:44:23.883" endtime="20200407 17:44:23.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:23.898" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:44:23.897" endtime="20200407 17:44:23.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:44:23.901" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:44:23.900" endtime="20200407 17:44:23.901"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:44:23.903" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:44:23.903" endtime="20200407 17:44:23.904"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:44:23.905" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:44:23.906" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:44:23.904" endtime="20200407 17:44:23.906"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:44:23.908" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:44:23.907" endtime="20200407 17:44:23.909"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:44:23.911" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:44:23.909" endtime="20200407 17:44:23.911"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:44:23.913" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:44:23.912" endtime="20200407 17:44:23.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:44:23.915" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:44:23.915" endtime="20200407 17:44:23.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:23.918" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:44:23.916" endtime="20200407 17:44:23.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:44:23.918" level="INFO">JM70-894:Modify the form of a rectangle annotation</msg>
<status status="PASS" starttime="20200407 17:44:23.918" endtime="20200407 17:44:23.919"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:44:23.920" level="INFO">@{listeTestName} = [ JM70-894 | Modify the form of a rectangle annotation ]</msg>
<status status="PASS" starttime="20200407 17:44:23.919" endtime="20200407 17:44:23.920"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:44:23.921" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:44:23.922" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:44:23.921" endtime="20200407 17:44:23.922"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:44:23.923" level="INFO">${tesCaseName} = Modify the form of a rectangle annotation</msg>
<status status="PASS" starttime="20200407 17:44:23.923" endtime="20200407 17:44:23.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:44:23.925" level="INFO">Modify the form of a rectangle annotation</msg>
<status status="PASS" starttime="20200407 17:44:23.924" endtime="20200407 17:44:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:23.926" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:44:23.925" endtime="20200407 17:44:23.926"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:23.929" endtime="20200407 17:44:25.955"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:25.956" endtime="20200407 17:44:25.958"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:25.959" endtime="20200407 17:44:26.018"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:44:26.067" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 170153675, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:44:26.018" endtime="20200407 17:44:26.067"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:44:26.069" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 170153675, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:44:26.068" endtime="20200407 17:44:26.069"></status>
</kw>
<msg timestamp="20200407 17:44:26.069" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 170153675, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:44:23.928" endtime="20200407 17:44:26.070"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:44:26.072" level="INFO">${getSessionID} = 170153675</msg>
<status status="PASS" starttime="20200407 17:44:26.071" endtime="20200407 17:44:26.072"></status>
</kw>
<msg timestamp="20200407 17:44:26.073" level="INFO">${SESSIONID} = 170153675</msg>
<status status="PASS" starttime="20200407 17:44:26.070" endtime="20200407 17:44:26.073"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:44:26.075" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:26.074" endtime="20200407 17:44:26.075"></status>
</kw>
<msg timestamp="20200407 17:44:26.076" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:26.073" endtime="20200407 17:44:26.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:44:26.077" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:26.076" endtime="20200407 17:44:26.077"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:26.078" endtime="20200407 17:44:28.104"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:28.105" endtime="20200407 17:44:28.190"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:28.191" endtime="20200407 17:44:28.268"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:26.078" endtime="20200407 17:44:28.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:28.270" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:28.269" endtime="20200407 17:44:28.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:44:28.274" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:44:28.274" endtime="20200407 17:44:28.275"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:44:28.839" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:44:28.275" endtime="20200407 17:44:28.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:28.841" endtime="20200407 17:44:29.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:44:29.446" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:44:29.445" endtime="20200407 17:44:29.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:29.448" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:29.447" endtime="20200407 17:44:29.448"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:28.273" endtime="20200407 17:44:29.449"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:44:29.941" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:44:29.450" endtime="20200407 17:44:29.942"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:44:29.944" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:44:29.944" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:44:29.943" endtime="20200407 17:44:29.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:44:29.947" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:44:29.945" endtime="20200407 17:44:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:44:29.949" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:44:29.948" endtime="20200407 17:44:29.949"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:44:29.954" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:44:29.951" endtime="20200407 17:44:29.954"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:44:29.957" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:44:29.955" endtime="20200407 17:44:29.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:29.959" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:29.958" endtime="20200407 17:44:29.959"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:44:30.295" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:44:29.960" endtime="20200407 17:44:30.296"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:44:30.298" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:44:30.299" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:44:30.297" endtime="20200407 17:44:30.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:44:30.302" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:44:30.300" endtime="20200407 17:44:30.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:44:30.304" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:44:30.303" endtime="20200407 17:44:30.304"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:44:30.306" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:44:30.305" endtime="20200407 17:44:30.307"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:44:30.309" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:44:30.308" endtime="20200407 17:44:30.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:30.311" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:30.310" endtime="20200407 17:44:30.311"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:44:30.626" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:44:30.312" endtime="20200407 17:44:30.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:44:30.628" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:44:30.627" endtime="20200407 17:44:30.629"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:44:30.631" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:44:30.632" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:44:30.630" endtime="20200407 17:44:30.632"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:44:30.634" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:44:30.633" endtime="20200407 17:44:30.635"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:44:30.637" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:30.635" endtime="20200407 17:44:30.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:30.639" endtime="20200407 17:44:30.640"></status>
</kw>
<msg timestamp="20200407 17:44:30.641" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:30.638" endtime="20200407 17:44:30.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:44:30.643" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:44:30.642" endtime="20200407 17:44:30.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:30.645" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:30.644" endtime="20200407 17:44:30.645"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:44:31.226" level="INFO">@{testCases} = [ {'id': '8529', 'name': 'Modify the form of a rectangle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '894'} ]</msg>
<status status="PASS" starttime="20200407 17:44:30.646" endtime="20200407 17:44:31.226"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:44:31.226" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:44:31.227" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:44:31.226" endtime="20200407 17:44:31.227"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:44:31.229" level="INFO">{'id': '8529', 'name': 'Modify the form of a rectangle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '894'}</msg>
<status status="PASS" starttime="20200407 17:44:31.228" endtime="20200407 17:44:31.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.231" endtime="20200407 17:44:31.231"></status>
</kw>
<msg timestamp="20200407 17:44:31.232" level="INFO">${testCase} = {'id': '8529', 'name': 'Modify the form of a rectangle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '894'}</msg>
<status status="PASS" starttime="20200407 17:44:31.230" endtime="20200407 17:44:31.232"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:44:31.233" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:44:31.232" endtime="20200407 17:44:31.234"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.227" endtime="20200407 17:44:31.234"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.227" endtime="20200407 17:44:31.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:44:31.235" level="INFO">{'id': '8529', 'name': 'Modify the form of a rectangle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '894'}</msg>
<status status="PASS" starttime="20200407 17:44:31.235" endtime="20200407 17:44:31.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:44:31.237" level="INFO">${testCaseNAME} = Modify the form of a rectangle annotation</msg>
<status status="PASS" starttime="20200407 17:44:31.236" endtime="20200407 17:44:31.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:44:31.238" level="INFO">${testCaseID} = 8529</msg>
<status status="PASS" starttime="20200407 17:44:31.238" endtime="20200407 17:44:31.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:44:31.240" level="INFO">${testCaseExternalID} = 894</msg>
<status status="PASS" starttime="20200407 17:44:31.239" endtime="20200407 17:44:31.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:44:31.241" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:44:31.240" endtime="20200407 17:44:31.241"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:44:31.242" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:44:31.242" endtime="20200407 17:44:31.242"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:44:31.244" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:44:31.243" endtime="20200407 17:44:31.244"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.246" endtime="20200407 17:44:31.634"></status>
</kw>
<msg timestamp="20200407 17:44:31.636" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:44:31.245" endtime="20200407 17:44:31.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:44:31.639" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:44:31.637" endtime="20200407 17:44:31.639"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:44:31.640" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:44:31.639" endtime="20200407 17:44:31.640"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:44:31.641" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:44:31.640" endtime="20200407 17:44:31.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.643" endtime="20200407 17:44:31.643"></status>
</kw>
<msg timestamp="20200407 17:44:31.644" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:44:31.642" endtime="20200407 17:44:31.644"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:44:31.645" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:44:31.646" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:44:31.645" endtime="20200407 17:44:31.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:44:31.647" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:44:31.646" endtime="20200407 17:44:31.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.649" endtime="20200407 17:44:31.649"></status>
</kw>
<msg timestamp="20200407 17:44:31.650" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:44:31.648" endtime="20200407 17:44:31.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:44:31.652" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:44:31.651" endtime="20200407 17:44:31.652"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.651" endtime="20200407 17:44:31.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:44:31.654" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:44:31.653" endtime="20200407 17:44:31.654"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:44:31.655" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:44:31.654" endtime="20200407 17:44:31.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:44:31.656" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:44:31.656" endtime="20200407 17:44:31.657"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.660" endtime="20200407 17:44:31.661"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.659" endtime="20200407 17:44:31.661"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.659" endtime="20200407 17:44:31.661"></status>
</kw>
<msg timestamp="20200407 17:44:31.662" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:44:31.657" endtime="20200407 17:44:31.662"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.662" endtime="20200407 17:44:31.663"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.245" endtime="20200407 17:44:31.664"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:31.665" endtime="20200407 17:44:32.077"></status>
</kw>
<msg timestamp="20200407 17:44:32.078" level="INFO">@{getExecution} = [ PASS | [{'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:44:31.664" endtime="20200407 17:44:32.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.080" level="INFO">---- &gt; ['PASS', [{'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.37', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:44:32.079" endtime="20200407 17:44:32.081"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:44:32.082" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:44:32.081" endtime="20200407 17:44:32.082"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:44:32.083" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:44:32.083" endtime="20200407 17:44:32.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.085" endtime="20200407 17:44:32.086"></status>
</kw>
<msg timestamp="20200407 17:44:32.086" level="INFO">@{getExecution} = [ PASS | [{'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:44:32.084" endtime="20200407 17:44:32.086"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:44:32.087" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:44:32.088" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:44:32.087" endtime="20200407 17:44:32.088"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:44:32.089" level="INFO">${lastExecution} = [{'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:44:32.088" endtime="20200407 17:44:32.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.091" endtime="20200407 17:44:32.092"></status>
</kw>
<msg timestamp="20200407 17:44:32.092" level="INFO">${idBuild} = 332607</msg>
<status status="PASS" starttime="20200407 17:44:32.090" endtime="20200407 17:44:32.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.093" level="INFO">----- &gt; ID of Build(137) : 332607</msg>
<status status="PASS" starttime="20200407 17:44:32.093" endtime="20200407 17:44:32.093"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.092" endtime="20200407 17:44:32.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:44:32.095" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:44:32.095" endtime="20200407 17:44:32.095"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:44:32.096" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:44:32.095" endtime="20200407 17:44:32.096"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:44:32.097" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:44:32.097" endtime="20200407 17:44:32.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.101" endtime="20200407 17:44:32.102"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.100" endtime="20200407 17:44:32.102"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.099" endtime="20200407 17:44:32.103"></status>
</kw>
<msg timestamp="20200407 17:44:32.103" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:44:32.098" endtime="20200407 17:44:32.103"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:44:32.104" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:44:32.104" endtime="20200407 17:44:32.105"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.664" endtime="20200407 17:44:32.105"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:31.244" endtime="20200407 17:44:32.105"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:44:32.107" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:44:32.107" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:44:32.107" endtime="20200407 17:44:32.107"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:44:32.108" level="INFO">${lastExecution} = {'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:44:32.108" endtime="20200407 17:44:32.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:44:32.110" level="INFO">-----&gt; Last execution : {'id': '332607', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:32', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8530', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.37', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:44:32.109" endtime="20200407 17:44:32.110"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:44:32.112" level="INFO">${lastExecutionID} = 332607</msg>
<status status="PASS" starttime="20200407 17:44:32.110" endtime="20200407 17:44:32.112"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.114" endtime="20200407 17:44:32.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:44:32.118" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:44:32.117" endtime="20200407 17:44:32.118"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:44:32.119" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:44:32.119" endtime="20200407 17:44:32.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:44:32.121" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:44:32.120" endtime="20200407 17:44:32.121"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:44:32.122" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:44:32.122" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:44:32.121" endtime="20200407 17:44:32.122"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:44:32.123" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:44:32.123" endtime="20200407 17:44:32.124"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.126" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:44:32.125" endtime="20200407 17:44:32.126"></status>
</kw>
<msg timestamp="20200407 17:44:32.127" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:44:32.125" endtime="20200407 17:44:32.127"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:44:32.128" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:44:32.127" endtime="20200407 17:44:32.128"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.129" endtime="20200407 17:44:32.129"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.124" endtime="20200407 17:44:32.130"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.132" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:44:32.131" endtime="20200407 17:44:32.133"></status>
</kw>
<msg timestamp="20200407 17:44:32.133" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:44:32.130" endtime="20200407 17:44:32.133"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:44:32.134" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:44:32.134" endtime="20200407 17:44:32.135"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.135" endtime="20200407 17:44:32.136"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.130" endtime="20200407 17:44:32.136"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.124" endtime="20200407 17:44:32.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.137" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:44:32.137" endtime="20200407 17:44:32.138"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:44:32.140" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:44:32.139" endtime="20200407 17:44:32.140"></status>
</kw>
<msg timestamp="20200407 17:44:32.140" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:44:32.138" endtime="20200407 17:44:32.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.142" endtime="20200407 17:44:32.142"></status>
</kw>
<msg timestamp="20200407 17:44:32.143" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:44:32.141" endtime="20200407 17:44:32.143"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.144" endtime="20200407 17:44:32.145"></status>
</kw>
<msg timestamp="20200407 17:44:32.145" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:44:32.143" endtime="20200407 17:44:32.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:44:32.147" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:44:32.146" endtime="20200407 17:44:32.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.148" endtime="20200407 17:44:32.149"></status>
</kw>
<msg timestamp="20200407 17:44:32.149" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:44:32.147" endtime="20200407 17:44:32.149"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:44:32.151" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:44:32.150" endtime="20200407 17:44:32.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.152" endtime="20200407 17:44:32.463"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.151" endtime="20200407 17:44:32.464"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.116" endtime="20200407 17:44:32.464"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.115" endtime="20200407 17:44:32.465"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.113" endtime="20200407 17:44:32.466"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.112" endtime="20200407 17:44:32.466"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:32.467" endtime="20200407 17:44:32.468"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:28.271" endtime="20200407 17:44:32.469"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:28.270" endtime="20200407 17:44:32.470"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:21.729" endtime="20200407 17:44:32.471"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:18.314" endtime="20200407 17:44:32.471"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:43:54.780" endtime="20200407 17:44:32.472" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t4" name="JM70-895:Modify the form of a polygon annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:44:32.481" level="INFO">${tc_start} = 1586295872.481084</msg>
<status status="PASS" starttime="20200407 17:44:32.480" endtime="20200407 17:44:32.482"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:44:32.484" level="INFO">${tc_start} = 1586295872.481084</msg>
<status status="PASS" starttime="20200407 17:44:32.483" endtime="20200407 17:44:32.484"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.479" endtime="20200407 17:44:32.485"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:44:32.487" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:44:32.486" endtime="20200407 17:44:38.575"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:38.575" endtime="20200407 17:44:42.704"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:44:42.705" endtime="20200407 17:44:42.839"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.477" endtime="20200407 17:44:42.840"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:42.843" endtime="20200407 17:44:42.910"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:42.910" endtime="20200407 17:44:42.938"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:42.938" endtime="20200407 17:44:42.993"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:42.994" endtime="20200407 17:44:42.997"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:42.998" endtime="20200407 17:44:43.039"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:42.997" endtime="20200407 17:44:43.039"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:43.040" endtime="20200407 17:44:43.081"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:44:43.082" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:44:43.082" endtime="20200407 17:44:43.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:44.223" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:43.220" endtime="20200407 17:44:44.223"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:42.993" endtime="20200407 17:44:44.224"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:44.227" endtime="20200407 17:44:44.231"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:44.234" endtime="20200407 17:44:44.259"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:44.232" endtime="20200407 17:44:44.259"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:44.259" endtime="20200407 17:44:44.285"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:44:44.286" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:44:44.285" endtime="20200407 17:44:44.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:45.406" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:44.405" endtime="20200407 17:44:45.407"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:44.225" endtime="20200407 17:44:45.408"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:44:45.410" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:44:45.409" endtime="20200407 17:44:46.033"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:47.035" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:46.033" endtime="20200407 17:44:47.035"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:42.841" endtime="20200407 17:44:47.035"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:32.476" endtime="20200407 17:44:47.035"></status>
</kw>
<kw name="Draw a Polygon annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a polygon annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:47.037" endtime="20200407 17:44:47.038"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:44:47.047" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:44:47.038" endtime="20200407 17:44:47.047"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.038" endtime="20200407 17:44:47.047"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.036" endtime="20200407 17:44:47.047"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.036" endtime="20200407 17:44:47.047"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:47.048" endtime="20200407 17:44:47.072"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.048" endtime="20200407 17:44:47.072"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:44:47.073" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:44:47.073" endtime="20200407 17:44:47.112"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.048" endtime="20200407 17:44:47.113"></status>
</kw>
<kw name="Click On Polygon Annotation" library="CommonAnnotationWeb">
<doc>Click on polygon annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:47.114" endtime="20200407 17:44:47.380"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.114" endtime="20200407 17:44:47.380"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:44:47.381" level="INFO">Clicking element 'xpath://div[@id='polygon_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:44:47.380" endtime="20200407 17:44:47.451"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.113" endtime="20200407 17:44:47.451"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Polygon</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:47.453" endtime="20200407 17:44:47.506"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.452" endtime="20200407 17:44:47.507"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:44:47.532" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Polygon'.</msg>
<status status="PASS" starttime="20200407 17:44:47.508" endtime="20200407 17:44:47.533"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.508" endtime="20200407 17:44:47.533"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.451" endtime="20200407 17:44:47.534"></status>
</kw>
<kw name="Draw With Polygon Annotation" library="CommonAnnotationWeb">
<doc>Draw a Polygon Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:47.537" endtime="20200407 17:44:47.585"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.536" endtime="20200407 17:44:47.585"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:47.587" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:44:47.586" endtime="20200407 17:44:48.176"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.535" endtime="20200407 17:44:48.177"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>90</arg>
<arg>-90</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:48.179" endtime="20200407 17:44:48.202"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:48.178" endtime="20200407 17:44:48.203"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:48.203" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=90, y=-90.</msg>
<status status="PASS" starttime="20200407 17:44:48.203" endtime="20200407 17:44:48.749"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:48.177" endtime="20200407 17:44:48.750"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-90</arg>
<arg>-100</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:48.751" endtime="20200407 17:44:48.774"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:48.750" endtime="20200407 17:44:48.774"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:48.775" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-90, y=-100.</msg>
<status status="PASS" starttime="20200407 17:44:48.775" endtime="20200407 17:44:49.335"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:48.750" endtime="20200407 17:44:49.335"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-100</arg>
<arg>10</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:49.338" endtime="20200407 17:44:49.372"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:49.337" endtime="20200407 17:44:49.372"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:49.373" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-100, y=10.</msg>
<status status="PASS" starttime="20200407 17:44:49.373" endtime="20200407 17:44:49.914"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:49.336" endtime="20200407 17:44:49.915"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-20</arg>
<arg>-10</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:49.917" endtime="20200407 17:44:49.951"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:49.916" endtime="20200407 17:44:49.952"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:49.953" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-20, y=-10.</msg>
<status status="PASS" starttime="20200407 17:44:49.952" endtime="20200407 17:44:50.496"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:49.915" endtime="20200407 17:44:50.497"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:50.499" endtime="20200407 17:44:50.534"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:50.498" endtime="20200407 17:44:50.534"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:50.536" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:44:50.535" endtime="20200407 17:44:51.070"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:50.497" endtime="20200407 17:44:51.070"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.534" endtime="20200407 17:44:51.071"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:47.036" endtime="20200407 17:44:51.071"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:51.074" endtime="20200407 17:44:51.115"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:51.073" endtime="20200407 17:44:51.116"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:51.117" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:51.116" endtime="20200407 17:44:51.194"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:51.072" endtime="20200407 17:44:51.195"></status>
</kw>
<kw name="Edit The Form Of The Drawing Of The Polygon Annotation">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-20</arg>
<arg>-10</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:51.198" endtime="20200407 17:44:51.232"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:51.197" endtime="20200407 17:44:51.233"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:51.234" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-20, y=-10.</msg>
<status status="PASS" starttime="20200407 17:44:51.233" endtime="20200407 17:44:51.864"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:51.196" endtime="20200407 17:44:51.864"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:52.867" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:51.865" endtime="20200407 17:44:52.867"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>${mapElement}</arg>
<arg>120</arg>
<arg>50</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:52.869" endtime="20200407 17:44:53.450"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:51.195" endtime="20200407 17:44:53.451"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:53.455" endtime="20200407 17:44:53.509"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.454" endtime="20200407 17:44:53.509"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:53.510" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:53.510" endtime="20200407 17:44:53.577"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.452" endtime="20200407 17:44:53.578"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:53.579" endtime="20200407 17:44:53.604"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.578" endtime="20200407 17:44:53.604"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:44:53.606" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:44:53.605" endtime="20200407 17:44:53.668"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.578" endtime="20200407 17:44:53.668"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>120</arg>
<arg>50</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:53.672" endtime="20200407 17:44:53.709"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.671" endtime="20200407 17:44:53.709"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:44:53.710" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=120, y=50.</msg>
<status status="PASS" starttime="20200407 17:44:53.710" endtime="20200407 17:44:54.263"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.670" endtime="20200407 17:44:54.264"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:53.669" endtime="20200407 17:44:54.265"></status>
</kw>
<kw name="Verify That The Drawn Annotation Is Selected To Modify It" library="CommonAnnotationWeb">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
<arg>reason=Wait until the annotation is ready to be changed</arg>
</arguments>
<msg timestamp="20200407 17:44:55.269" level="INFO">Slept 1 second</msg>
<msg timestamp="20200407 17:44:55.269" level="INFO">Wait until the annotation is ready to be changed</msg>
<status status="PASS" starttime="20200407 17:44:54.266" endtime="20200407 17:44:55.270"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.app.clickToolManager.getModifyTool().interaction.getFeatures().getArray()[0].L.selected</arg>
</arguments>
<assign>
<var>${isSelectedAnnotation}</var>
</assign>
<msg timestamp="20200407 17:44:55.273" level="INFO">Executing JavaScript:
return window.JMap.app.clickToolManager.getModifyTool().interaction.getFeatures().getArray()[0].L.selected
Without any arguments.</msg>
<msg timestamp="20200407 17:44:55.288" level="INFO">${isSelectedAnnotation} = True</msg>
<status status="PASS" starttime="20200407 17:44:55.271" endtime="20200407 17:44:55.289"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${isSelectedAnnotation}</arg>
<arg>${True}</arg>
<arg>msg=The current annotation does not selected to be changed. But, it should be to be changed!!!</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${isSelectedAnnotation}</arg>
<arg>${True}</arg>
<arg>msg=The current annotation does not selected to be changed. But, it should be to be changed!!!</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:55.291" endtime="20200407 17:44:55.292"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:55.290" endtime="20200407 17:44:55.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:44:56.295" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:55.294" endtime="20200407 17:44:56.296"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:54.265" endtime="20200407 17:44:56.296"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:56.300" endtime="20200407 17:44:56.357"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.299" endtime="20200407 17:44:56.358"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:44:56.393" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:44:56.359" endtime="20200407 17:44:56.393"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.358" endtime="20200407 17:44:56.394"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.297" endtime="20200407 17:44:56.394"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:56.397" endtime="20200407 17:44:56.441"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.396" endtime="20200407 17:44:56.441"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:44:56.477" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:44:56.443" endtime="20200407 17:44:56.477"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.442" endtime="20200407 17:44:56.478"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.395" endtime="20200407 17:44:56.478"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:56.481" endtime="20200407 17:44:56.529"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.480" endtime="20200407 17:44:56.529"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:44:56.530" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:44:56.530" endtime="20200407 17:44:56.621"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.479" endtime="20200407 17:44:56.622"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:56.624" endtime="20200407 17:44:56.633"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.622" endtime="20200407 17:44:56.634"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:56.637" endtime="20200407 17:44:56.690"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:44:56.691" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:44:56.690" endtime="20200407 17:44:56.801"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:44:57.802" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:44:56.801" endtime="20200407 17:44:57.802"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.636" endtime="20200407 17:44:57.803"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:44:57.804" endtime="20200407 17:44:57.861"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:44:57.862" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:44:57.862" endtime="20200407 17:44:58.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:45:00.037" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:44:58.036" endtime="20200407 17:45:00.037"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.636" endtime="20200407 17:45:00.037"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:45:00.038" endtime="20200407 17:45:02.141"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:45:02.145" level="INFO">${tc_end} = 1586295902.145097</msg>
<status status="PASS" starttime="20200407 17:45:02.144" endtime="20200407 17:45:02.145"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:45:02.147" level="INFO">${tc_duration} = 29.664012908935547</msg>
<status status="PASS" starttime="20200407 17:45:02.146" endtime="20200407 17:45:02.147"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:45:02.148" level="INFO">${tc_duration} = 0.4944002151489258</msg>
<status status="PASS" starttime="20200407 17:45:02.147" endtime="20200407 17:45:02.148"></status>
</kw>
<msg timestamp="20200407 17:45:02.149" level="INFO">${duration} = 0.4944002151489258</msg>
<status status="PASS" starttime="20200407 17:45:02.143" endtime="20200407 17:45:02.149"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:45:02.150" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:45:02.150" endtime="20200407 17:45:02.151"></status>
</kw>
<msg timestamp="20200407 17:45:02.151" level="INFO">${ElapsedTime} = 0.4944002151489258</msg>
<status status="PASS" starttime="20200407 17:45:02.142" endtime="20200407 17:45:02.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:02.152" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:02.152" endtime="20200407 17:45:02.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:02.154" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:45:02.153" endtime="20200407 17:45:02.154"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:45:02.155" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:45:02.155" endtime="20200407 17:45:02.156"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:45:02.157" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:45:02.157" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:45:02.156" endtime="20200407 17:45:02.157"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:02.159" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:45:02.158" endtime="20200407 17:45:02.159"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:02.160" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:45:02.159" endtime="20200407 17:45:02.160"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:02.162" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:45:02.161" endtime="20200407 17:45:02.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:45:02.163" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:45:02.162" endtime="20200407 17:45:02.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:02.164" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:02.164" endtime="20200407 17:45:02.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:02.165" level="INFO">JM70-895:Modify the form of a polygon annotation</msg>
<status status="PASS" starttime="20200407 17:45:02.165" endtime="20200407 17:45:02.166"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:45:02.167" level="INFO">@{listeTestName} = [ JM70-895 | Modify the form of a polygon annotation ]</msg>
<status status="PASS" starttime="20200407 17:45:02.166" endtime="20200407 17:45:02.167"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:45:02.168" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:02.169" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:45:02.168" endtime="20200407 17:45:02.169"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:45:02.170" level="INFO">${tesCaseName} = Modify the form of a polygon annotation</msg>
<status status="PASS" starttime="20200407 17:45:02.169" endtime="20200407 17:45:02.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:45:02.171" level="INFO">Modify the form of a polygon annotation</msg>
<status status="PASS" starttime="20200407 17:45:02.171" endtime="20200407 17:45:02.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:02.173" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:02.172" endtime="20200407 17:45:02.173"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:02.176" endtime="20200407 17:45:04.200"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:04.201" endtime="20200407 17:45:04.205"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:04.205" endtime="20200407 17:45:04.284"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:45:04.354" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1746864948, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:45:04.285" endtime="20200407 17:45:04.354"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:45:04.356" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1746864948, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:45:04.355" endtime="20200407 17:45:04.356"></status>
</kw>
<msg timestamp="20200407 17:45:04.356" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1746864948, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:45:02.175" endtime="20200407 17:45:04.357"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:45:04.359" level="INFO">${getSessionID} = 1746864948</msg>
<status status="PASS" starttime="20200407 17:45:04.358" endtime="20200407 17:45:04.359"></status>
</kw>
<msg timestamp="20200407 17:45:04.360" level="INFO">${SESSIONID} = 1746864948</msg>
<status status="PASS" starttime="20200407 17:45:04.357" endtime="20200407 17:45:04.360"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:45:04.362" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:04.361" endtime="20200407 17:45:04.362"></status>
</kw>
<msg timestamp="20200407 17:45:04.363" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:04.361" endtime="20200407 17:45:04.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:45:04.364" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:04.364" endtime="20200407 17:45:04.365"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:04.366" endtime="20200407 17:45:06.386"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:06.386" endtime="20200407 17:45:06.467"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:06.468" endtime="20200407 17:45:06.533"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:04.365" endtime="20200407 17:45:06.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:06.535" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:06.534" endtime="20200407 17:45:06.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:06.539" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:45:06.539" endtime="20200407 17:45:06.540"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:45:07.367" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:45:06.540" endtime="20200407 17:45:07.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:07.369" endtime="20200407 17:45:07.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:07.972" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:45:07.971" endtime="20200407 17:45:07.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:07.974" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:07.973" endtime="20200407 17:45:07.975"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:06.538" endtime="20200407 17:45:07.975"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:45:08.449" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:45:07.976" endtime="20200407 17:45:08.449"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:08.453" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:45:08.453" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:45:08.452" endtime="20200407 17:45:08.453"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:45:08.454" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:45:08.454" endtime="20200407 17:45:08.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:45:08.456" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:45:08.455" endtime="20200407 17:45:08.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:45:08.457" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:45:08.456" endtime="20200407 17:45:08.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:45:08.459" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:45:08.458" endtime="20200407 17:45:08.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:08.460" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:08.459" endtime="20200407 17:45:08.460"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:45:08.809" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:45:08.461" endtime="20200407 17:45:08.809"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:08.811" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:08.812" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:45:08.810" endtime="20200407 17:45:08.812"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:45:08.814" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:45:08.813" endtime="20200407 17:45:08.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:45:08.815" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:45:08.814" endtime="20200407 17:45:08.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:45:08.816" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:45:08.816" endtime="20200407 17:45:08.817"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:45:08.818" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:45:08.817" endtime="20200407 17:45:08.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:08.819" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:08.819" endtime="20200407 17:45:08.819"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:45:09.149" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:45:08.820" endtime="20200407 17:45:09.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:09.151" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:45:09.151" endtime="20200407 17:45:09.153"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:09.155" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:45:09.155" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:45:09.153" endtime="20200407 17:45:09.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:45:09.157" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:45:09.156" endtime="20200407 17:45:09.158"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:45:09.160" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:09.159" endtime="20200407 17:45:09.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:09.163" endtime="20200407 17:45:09.163"></status>
</kw>
<msg timestamp="20200407 17:45:09.164" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:09.161" endtime="20200407 17:45:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:09.165" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:09.164" endtime="20200407 17:45:09.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:09.167" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:09.166" endtime="20200407 17:45:09.168"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:45:09.746" level="INFO">@{testCases} = [ {'id': '8531', 'name': 'Modify the form of a polygon annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '895'} ]</msg>
<status status="PASS" starttime="20200407 17:45:09.169" endtime="20200407 17:45:09.747"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:09.749" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:09.749" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:45:09.748" endtime="20200407 17:45:09.750"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:45:09.753" level="INFO">{'id': '8531', 'name': 'Modify the form of a polygon annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '895'}</msg>
<status status="PASS" starttime="20200407 17:45:09.752" endtime="20200407 17:45:09.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:09.756" endtime="20200407 17:45:09.757"></status>
</kw>
<msg timestamp="20200407 17:45:09.758" level="INFO">${testCase} = {'id': '8531', 'name': 'Modify the form of a polygon annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '895'}</msg>
<status status="PASS" starttime="20200407 17:45:09.754" endtime="20200407 17:45:09.758"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:45:09.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:45:09.759" endtime="20200407 17:45:09.761"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:09.751" endtime="20200407 17:45:09.762"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:09.750" endtime="20200407 17:45:09.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:45:09.764" level="INFO">{'id': '8531', 'name': 'Modify the form of a polygon annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '895'}</msg>
<status status="PASS" starttime="20200407 17:45:09.763" endtime="20200407 17:45:09.764"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:45:09.766" level="INFO">${testCaseNAME} = Modify the form of a polygon annotation</msg>
<status status="PASS" starttime="20200407 17:45:09.765" endtime="20200407 17:45:09.767"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:45:09.769" level="INFO">${testCaseID} = 8531</msg>
<status status="PASS" starttime="20200407 17:45:09.767" endtime="20200407 17:45:09.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:45:09.771" level="INFO">${testCaseExternalID} = 895</msg>
<status status="PASS" starttime="20200407 17:45:09.770" endtime="20200407 17:45:09.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:09.772" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:09.772" endtime="20200407 17:45:09.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:09.773" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:45:09.772" endtime="20200407 17:45:09.774"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:45:09.775" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:45:09.774" endtime="20200407 17:45:09.775"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:09.777" endtime="20200407 17:45:10.139"></status>
</kw>
<msg timestamp="20200407 17:45:10.140" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:45:09.776" endtime="20200407 17:45:10.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.141" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:45:10.141" endtime="20200407 17:45:10.141"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:10.143" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:45:10.142" endtime="20200407 17:45:10.143"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:10.144" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:45:10.144" endtime="20200407 17:45:10.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.146" endtime="20200407 17:45:10.147"></status>
</kw>
<msg timestamp="20200407 17:45:10.147" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:45:10.145" endtime="20200407 17:45:10.148"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:10.149" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:10.149" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:45:10.148" endtime="20200407 17:45:10.149"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:10.150" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:45:10.150" endtime="20200407 17:45:10.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.152" endtime="20200407 17:45:10.153"></status>
</kw>
<msg timestamp="20200407 17:45:10.153" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:45:10.151" endtime="20200407 17:45:10.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.155" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:45:10.155" endtime="20200407 17:45:10.156"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.154" endtime="20200407 17:45:10.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:45:10.157" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:45:10.156" endtime="20200407 17:45:10.157"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:10.158" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:45:10.158" endtime="20200407 17:45:10.159"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:10.160" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:10.159" endtime="20200407 17:45:10.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.163" endtime="20200407 17:45:10.164"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.162" endtime="20200407 17:45:10.164"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.162" endtime="20200407 17:45:10.165"></status>
</kw>
<msg timestamp="20200407 17:45:10.165" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:10.160" endtime="20200407 17:45:10.165"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.166" endtime="20200407 17:45:10.167"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:09.776" endtime="20200407 17:45:10.167"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.169" endtime="20200407 17:45:10.486"></status>
</kw>
<msg timestamp="20200407 17:45:10.487" level="INFO">@{getExecution} = [ PASS | [{'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:45:10.168" endtime="20200407 17:45:10.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.489" level="INFO">---- &gt; ['PASS', [{'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.39', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:45:10.488" endtime="20200407 17:45:10.489"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:10.490" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:45:10.490" endtime="20200407 17:45:10.491"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:10.492" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:45:10.491" endtime="20200407 17:45:10.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.494" endtime="20200407 17:45:10.494"></status>
</kw>
<msg timestamp="20200407 17:45:10.495" level="INFO">@{getExecution} = [ PASS | [{'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:45:10.493" endtime="20200407 17:45:10.495"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:10.496" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:10.496" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:45:10.496" endtime="20200407 17:45:10.497"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:10.498" level="INFO">${lastExecution} = [{'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:45:10.497" endtime="20200407 17:45:10.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.500" endtime="20200407 17:45:10.500"></status>
</kw>
<msg timestamp="20200407 17:45:10.501" level="INFO">${idBuild} = 332608</msg>
<status status="PASS" starttime="20200407 17:45:10.499" endtime="20200407 17:45:10.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.503" level="INFO">----- &gt; ID of Build(137) : 332608</msg>
<status status="PASS" starttime="20200407 17:45:10.502" endtime="20200407 17:45:10.503"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.501" endtime="20200407 17:45:10.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:45:10.505" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:45:10.504" endtime="20200407 17:45:10.505"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:10.506" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:10.505" endtime="20200407 17:45:10.506"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:10.508" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:45:10.507" endtime="20200407 17:45:10.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.511" endtime="20200407 17:45:10.512"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.510" endtime="20200407 17:45:10.512"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.510" endtime="20200407 17:45:10.513"></status>
</kw>
<msg timestamp="20200407 17:45:10.513" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:45:10.508" endtime="20200407 17:45:10.513"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:45:10.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:45:10.514" endtime="20200407 17:45:10.515"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.168" endtime="20200407 17:45:10.516"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:09.775" endtime="20200407 17:45:10.516"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:10.517" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:10.517" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:45:10.516" endtime="20200407 17:45:10.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:10.519" level="INFO">${lastExecution} = {'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:45:10.518" endtime="20200407 17:45:10.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:10.520" level="INFO">-----&gt; Last execution : {'id': '332608', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:48:58', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8532', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.39', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:45:10.520" endtime="20200407 17:45:10.521"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:45:10.522" level="INFO">${lastExecutionID} = 332608</msg>
<status status="PASS" starttime="20200407 17:45:10.521" endtime="20200407 17:45:10.522"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.525" endtime="20200407 17:45:10.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:45:10.529" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:10.528" endtime="20200407 17:45:10.530"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:45:10.531" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:45:10.530" endtime="20200407 17:45:10.531"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:45:10.532" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:45:10.532" endtime="20200407 17:45:10.533"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:45:10.534" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:10.534" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:45:10.533" endtime="20200407 17:45:10.534"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:45:10.535" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:45:10.535" endtime="20200407 17:45:10.535"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.538" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:45:10.537" endtime="20200407 17:45:10.539"></status>
</kw>
<msg timestamp="20200407 17:45:10.539" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:10.537" endtime="20200407 17:45:10.539"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:45:10.540" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:10.540" endtime="20200407 17:45:10.541"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.541" endtime="20200407 17:45:10.542"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.536" endtime="20200407 17:45:10.542"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.545" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:45:10.544" endtime="20200407 17:45:10.545"></status>
</kw>
<msg timestamp="20200407 17:45:10.546" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:10.543" endtime="20200407 17:45:10.546"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:45:10.547" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:10.546" endtime="20200407 17:45:10.547"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.548" endtime="20200407 17:45:10.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.542" endtime="20200407 17:45:10.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.536" endtime="20200407 17:45:10.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.550" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:45:10.550" endtime="20200407 17:45:10.550"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:45:10.552" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:45:10.552" endtime="20200407 17:45:10.553"></status>
</kw>
<msg timestamp="20200407 17:45:10.553" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:45:10.551" endtime="20200407 17:45:10.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.555" endtime="20200407 17:45:10.555"></status>
</kw>
<msg timestamp="20200407 17:45:10.556" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:45:10.554" endtime="20200407 17:45:10.556"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.557" endtime="20200407 17:45:10.558"></status>
</kw>
<msg timestamp="20200407 17:45:10.559" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:45:10.557" endtime="20200407 17:45:10.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:45:10.560" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:45:10.559" endtime="20200407 17:45:10.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.561" endtime="20200407 17:45:10.562"></status>
</kw>
<msg timestamp="20200407 17:45:10.562" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:10.561" endtime="20200407 17:45:10.563"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:45:10.564" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:10.563" endtime="20200407 17:45:10.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.565" endtime="20200407 17:45:10.826"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.564" endtime="20200407 17:45:10.827"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.527" endtime="20200407 17:45:10.827"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.526" endtime="20200407 17:45:10.828"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.523" endtime="20200407 17:45:10.828"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.523" endtime="20200407 17:45:10.828"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:10.829" endtime="20200407 17:45:10.829"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:06.537" endtime="20200407 17:45:10.830"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:06.536" endtime="20200407 17:45:10.830"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:00.038" endtime="20200407 17:45:10.831"></status>
</kw>
<status status="PASS" starttime="20200407 17:44:56.635" endtime="20200407 17:45:10.831"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:44:32.474" endtime="20200407 17:45:10.831" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t5" name="JM70-896:Modify the form of a circle annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:45:10.837" level="INFO">${tc_start} = 1586295910.836881</msg>
<status status="PASS" starttime="20200407 17:45:10.836" endtime="20200407 17:45:10.837"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:45:10.838" level="INFO">${tc_start} = 1586295910.836881</msg>
<status status="PASS" starttime="20200407 17:45:10.837" endtime="20200407 17:45:10.838"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.835" endtime="20200407 17:45:10.839"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:45:10.840" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:45:10.839" endtime="20200407 17:45:16.792"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:16.792" endtime="20200407 17:45:20.912"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:45:20.913" endtime="20200407 17:45:21.039"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.834" endtime="20200407 17:45:21.040"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.041" endtime="20200407 17:45:21.113"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.114" endtime="20200407 17:45:21.191"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.192" endtime="20200407 17:45:21.260"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.262" endtime="20200407 17:45:21.264"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.266" endtime="20200407 17:45:21.306"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:21.265" endtime="20200407 17:45:21.306"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:21.307" endtime="20200407 17:45:21.348"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:45:21.349" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:45:21.349" endtime="20200407 17:45:21.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:22.416" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:21.414" endtime="20200407 17:45:22.416"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:21.261" endtime="20200407 17:45:22.416"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:22.418" endtime="20200407 17:45:22.419"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:22.420" endtime="20200407 17:45:22.441"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:22.420" endtime="20200407 17:45:22.441"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:22.441" endtime="20200407 17:45:22.461"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:45:22.462" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:45:22.462" endtime="20200407 17:45:22.577"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:23.578" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:22.577" endtime="20200407 17:45:23.579"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:22.417" endtime="20200407 17:45:23.580"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:45:23.582" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:45:23.581" endtime="20200407 17:45:24.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:25.162" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:24.160" endtime="20200407 17:45:25.162"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:21.040" endtime="20200407 17:45:25.162"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:10.834" endtime="20200407 17:45:25.162"></status>
</kw>
<kw name="Draw a Circle annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a circle annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:25.164" endtime="20200407 17:45:25.165"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:45:25.174" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:45:25.166" endtime="20200407 17:45:25.174"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.165" endtime="20200407 17:45:25.175"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.163" endtime="20200407 17:45:25.175"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.163" endtime="20200407 17:45:25.175"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:25.176" endtime="20200407 17:45:25.200"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.176" endtime="20200407 17:45:25.200"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:45:25.201" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:45:25.201" endtime="20200407 17:45:25.239"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.175" endtime="20200407 17:45:25.239"></status>
</kw>
<kw name="Click On Circle Annotation" library="CommonAnnotationWeb">
<doc>Click on circle annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='circle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='circle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:25.240" endtime="20200407 17:45:25.510"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.240" endtime="20200407 17:45:25.511"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='circle_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:45:25.513" level="INFO">Clicking element 'xpath://div[@id='circle_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:45:25.512" endtime="20200407 17:45:25.608"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.240" endtime="20200407 17:45:25.608"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Circle</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:25.610" endtime="20200407 17:45:25.664"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.609" endtime="20200407 17:45:25.664"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:45:25.691" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Circle'.</msg>
<status status="PASS" starttime="20200407 17:45:25.666" endtime="20200407 17:45:25.692"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.665" endtime="20200407 17:45:25.692"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.608" endtime="20200407 17:45:25.693"></status>
</kw>
<kw name="Draw With Circle Annotation" library="CommonAnnotationWeb">
<doc>Draw a Circle Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-30</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:25.696" endtime="20200407 17:45:25.737"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.695" endtime="20200407 17:45:25.737"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:25.738" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-30, y=30.</msg>
<status status="PASS" starttime="20200407 17:45:25.738" endtime="20200407 17:45:26.343"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.694" endtime="20200407 17:45:26.344"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:26.348" endtime="20200407 17:45:26.382"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.347" endtime="20200407 17:45:26.382"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:26.383" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:45:26.383" endtime="20200407 17:45:26.927"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.345" endtime="20200407 17:45:26.927"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:26.931" endtime="20200407 17:45:26.971"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.931" endtime="20200407 17:45:26.972"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:26.973" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:45:26.972" endtime="20200407 17:45:27.530"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.929" endtime="20200407 17:45:27.531"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.929" endtime="20200407 17:45:27.531"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:27.534" endtime="20200407 17:45:27.569"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:27.534" endtime="20200407 17:45:27.570"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:27.571" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:45:27.570" endtime="20200407 17:45:28.122"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:27.533" endtime="20200407 17:45:28.123"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:27.532" endtime="20200407 17:45:28.123"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.929" endtime="20200407 17:45:28.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:29.126" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:28.124" endtime="20200407 17:45:29.126"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:26.928" endtime="20200407 17:45:29.127"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.693" endtime="20200407 17:45:29.127"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:25.163" endtime="20200407 17:45:29.128"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:29.130" endtime="20200407 17:45:29.186"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:29.129" endtime="20200407 17:45:29.187"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:45:29.189" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:45:29.188" endtime="20200407 17:45:29.326"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:29.128" endtime="20200407 17:45:29.327"></status>
</kw>
<kw name="Edit The Form Of The Drawing Of The Circle Annotation">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-30</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:29.332" endtime="20200407 17:45:29.380"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:29.330" endtime="20200407 17:45:29.381"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:29.382" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-30, y=30.</msg>
<status status="PASS" starttime="20200407 17:45:29.381" endtime="20200407 17:45:29.969"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:29.329" endtime="20200407 17:45:29.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:30.973" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:29.971" endtime="20200407 17:45:30.973"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>${mapElement}</arg>
<arg>70</arg>
<arg>10</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:30.973" endtime="20200407 17:45:31.512"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:29.329" endtime="20200407 17:45:31.512"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:31.515" endtime="20200407 17:45:31.554"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.514" endtime="20200407 17:45:31.554"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:45:31.555" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:45:31.555" endtime="20200407 17:45:31.635"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.513" endtime="20200407 17:45:31.635"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:31.638" endtime="20200407 17:45:31.670"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.637" endtime="20200407 17:45:31.671"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:45:31.672" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:45:31.671" endtime="20200407 17:45:31.735"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.636" endtime="20200407 17:45:31.736"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>40</arg>
<arg>05</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:31.739" endtime="20200407 17:45:31.778"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.738" endtime="20200407 17:45:31.778"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:45:31.780" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=40, y=05.</msg>
<status status="PASS" starttime="20200407 17:45:31.779" endtime="20200407 17:45:32.332"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.737" endtime="20200407 17:45:32.333"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:31.736" endtime="20200407 17:45:32.334"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:32.338" endtime="20200407 17:45:32.644"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.336" endtime="20200407 17:45:32.645"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:45:32.690" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:45:32.647" endtime="20200407 17:45:32.691"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.646" endtime="20200407 17:45:32.691"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.335" endtime="20200407 17:45:32.692"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:32.695" endtime="20200407 17:45:32.752"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.694" endtime="20200407 17:45:32.752"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:45:32.798" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:45:32.754" endtime="20200407 17:45:32.799"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.753" endtime="20200407 17:45:32.799"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.693" endtime="20200407 17:45:32.800"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:32.804" endtime="20200407 17:45:32.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.802" endtime="20200407 17:45:32.853"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:45:32.854" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:45:32.853" endtime="20200407 17:45:32.933"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.800" endtime="20200407 17:45:32.934"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:32.935" endtime="20200407 17:45:32.943"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.934" endtime="20200407 17:45:32.943"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:32.946" endtime="20200407 17:45:32.999"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:45:33.001" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:45:33.000" endtime="20200407 17:45:33.102"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:34.104" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:33.103" endtime="20200407 17:45:34.105"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.946" endtime="20200407 17:45:34.106"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:34.108" endtime="20200407 17:45:34.164"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:45:34.165" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:45:34.164" endtime="20200407 17:45:34.366"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:45:36.369" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:45:34.366" endtime="20200407 17:45:36.370"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.945" endtime="20200407 17:45:36.371"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:45:36.373" endtime="20200407 17:45:38.515"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:45:38.521" level="INFO">${tc_end} = 1586295938.520845</msg>
<status status="PASS" starttime="20200407 17:45:38.520" endtime="20200407 17:45:38.521"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:45:38.523" level="INFO">${tc_duration} = 27.683964014053345</msg>
<status status="PASS" starttime="20200407 17:45:38.522" endtime="20200407 17:45:38.524"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:45:38.526" level="INFO">${tc_duration} = 0.46139940023422243</msg>
<status status="PASS" starttime="20200407 17:45:38.524" endtime="20200407 17:45:38.526"></status>
</kw>
<msg timestamp="20200407 17:45:38.527" level="INFO">${duration} = 0.46139940023422243</msg>
<status status="PASS" starttime="20200407 17:45:38.518" endtime="20200407 17:45:38.527"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:45:38.529" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:45:38.528" endtime="20200407 17:45:38.530"></status>
</kw>
<msg timestamp="20200407 17:45:38.530" level="INFO">${ElapsedTime} = 0.46139940023422243</msg>
<status status="PASS" starttime="20200407 17:45:38.516" endtime="20200407 17:45:38.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:38.532" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:38.531" endtime="20200407 17:45:38.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:38.534" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:45:38.534" endtime="20200407 17:45:38.534"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:45:38.535" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:45:38.535" endtime="20200407 17:45:38.535"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:45:38.536" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:45:38.536" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:45:38.535" endtime="20200407 17:45:38.536"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:38.536" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:45:38.536" endtime="20200407 17:45:38.537"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:38.537" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:45:38.537" endtime="20200407 17:45:38.537"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:45:38.538" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:45:38.537" endtime="20200407 17:45:38.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:45:38.539" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:45:38.538" endtime="20200407 17:45:38.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:38.539" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:38.539" endtime="20200407 17:45:38.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:38.540" level="INFO">JM70-896:Modify the form of a circle annotation</msg>
<status status="PASS" starttime="20200407 17:45:38.540" endtime="20200407 17:45:38.540"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:45:38.541" level="INFO">@{listeTestName} = [ JM70-896 | Modify the form of a circle annotation ]</msg>
<status status="PASS" starttime="20200407 17:45:38.541" endtime="20200407 17:45:38.542"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:45:38.543" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:38.543" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:45:38.542" endtime="20200407 17:45:38.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:45:38.544" level="INFO">${tesCaseName} = Modify the form of a circle annotation</msg>
<status status="PASS" starttime="20200407 17:45:38.544" endtime="20200407 17:45:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:45:38.546" level="INFO">Modify the form of a circle annotation</msg>
<status status="PASS" starttime="20200407 17:45:38.545" endtime="20200407 17:45:38.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:38.547" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:45:38.546" endtime="20200407 17:45:38.547"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:38.550" endtime="20200407 17:45:40.567"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:40.567" endtime="20200407 17:45:40.568"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:40.568" endtime="20200407 17:45:40.616"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:45:40.659" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1838784790, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:45:40.617" endtime="20200407 17:45:40.660"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:45:40.661" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1838784790, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:45:40.660" endtime="20200407 17:45:40.661"></status>
</kw>
<msg timestamp="20200407 17:45:40.662" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1838784790, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:45:38.549" endtime="20200407 17:45:40.662"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:45:40.664" level="INFO">${getSessionID} = 1838784790</msg>
<status status="PASS" starttime="20200407 17:45:40.663" endtime="20200407 17:45:40.664"></status>
</kw>
<msg timestamp="20200407 17:45:40.665" level="INFO">${SESSIONID} = 1838784790</msg>
<status status="PASS" starttime="20200407 17:45:40.662" endtime="20200407 17:45:40.665"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:45:40.667" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:40.666" endtime="20200407 17:45:40.667"></status>
</kw>
<msg timestamp="20200407 17:45:40.668" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:40.666" endtime="20200407 17:45:40.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:45:40.669" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:40.669" endtime="20200407 17:45:40.669"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:40.671" endtime="20200407 17:45:42.693"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:42.694" endtime="20200407 17:45:42.743"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:42.743" endtime="20200407 17:45:42.780"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:40.670" endtime="20200407 17:45:42.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:42.781" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:42.781" endtime="20200407 17:45:42.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:42.786" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:45:42.785" endtime="20200407 17:45:42.786"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:45:43.646" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:45:42.787" endtime="20200407 17:45:43.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:43.648" endtime="20200407 17:45:44.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:44.233" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:45:44.232" endtime="20200407 17:45:44.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:44.235" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:44.234" endtime="20200407 17:45:44.235"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:42.784" endtime="20200407 17:45:44.236"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:45:44.862" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:45:44.237" endtime="20200407 17:45:44.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:44.864" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:45:44.865" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:45:44.863" endtime="20200407 17:45:44.865"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:45:44.867" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:45:44.865" endtime="20200407 17:45:44.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:45:44.868" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:45:44.867" endtime="20200407 17:45:44.868"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:45:44.870" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:45:44.869" endtime="20200407 17:45:44.870"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:45:44.871" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:45:44.870" endtime="20200407 17:45:44.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:44.872" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:44.872" endtime="20200407 17:45:44.873"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:45:45.147" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:45:44.873" endtime="20200407 17:45:45.147"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:45.149" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:45.150" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:45:45.148" endtime="20200407 17:45:45.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:45:45.152" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:45:45.151" endtime="20200407 17:45:45.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:45:45.154" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:45:45.153" endtime="20200407 17:45:45.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:45:45.157" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:45:45.155" endtime="20200407 17:45:45.157"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:45:45.159" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:45:45.158" endtime="20200407 17:45:45.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:45.161" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:45.160" endtime="20200407 17:45:45.161"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:45:45.482" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:45:45.162" endtime="20200407 17:45:45.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:45.484" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:45:45.483" endtime="20200407 17:45:45.484"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:45.485" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:45:45.486" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:45:45.485" endtime="20200407 17:45:45.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:45:45.487" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:45:45.486" endtime="20200407 17:45:45.487"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:45:45.489" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:45.488" endtime="20200407 17:45:45.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:45.490" endtime="20200407 17:45:45.491"></status>
</kw>
<msg timestamp="20200407 17:45:45.491" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:45.489" endtime="20200407 17:45:45.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:45:45.492" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:45:45.492" endtime="20200407 17:45:45.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:45.494" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:45.493" endtime="20200407 17:45:45.494"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:45:45.893" level="INFO">@{testCases} = [ {'id': '8533', 'name': 'Modify the form of a circle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '896'} ]</msg>
<status status="PASS" starttime="20200407 17:45:45.495" endtime="20200407 17:45:45.893"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:45:45.894" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:45.895" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:45:45.894" endtime="20200407 17:45:45.895"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:45:45.897" level="INFO">{'id': '8533', 'name': 'Modify the form of a circle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '896'}</msg>
<status status="PASS" starttime="20200407 17:45:45.896" endtime="20200407 17:45:45.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:45.900" endtime="20200407 17:45:45.901"></status>
</kw>
<msg timestamp="20200407 17:45:45.901" level="INFO">${testCase} = {'id': '8533', 'name': 'Modify the form of a circle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '896'}</msg>
<status status="PASS" starttime="20200407 17:45:45.899" endtime="20200407 17:45:45.902"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:45:45.904" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:45:45.902" endtime="20200407 17:45:45.904"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:45.896" endtime="20200407 17:45:45.905"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:45.895" endtime="20200407 17:45:45.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:45:45.906" level="INFO">{'id': '8533', 'name': 'Modify the form of a circle annotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '896'}</msg>
<status status="PASS" starttime="20200407 17:45:45.906" endtime="20200407 17:45:45.907"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:45:45.908" level="INFO">${testCaseNAME} = Modify the form of a circle annotation</msg>
<status status="PASS" starttime="20200407 17:45:45.907" endtime="20200407 17:45:45.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:45:45.910" level="INFO">${testCaseID} = 8533</msg>
<status status="PASS" starttime="20200407 17:45:45.909" endtime="20200407 17:45:45.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:45:45.910" level="INFO">${testCaseExternalID} = 896</msg>
<status status="PASS" starttime="20200407 17:45:45.910" endtime="20200407 17:45:45.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:45:45.911" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:45:45.911" endtime="20200407 17:45:45.911"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:45.912" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:45:45.911" endtime="20200407 17:45:45.912"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:45:45.913" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:45:45.912" endtime="20200407 17:45:45.913"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:45.914" endtime="20200407 17:45:46.225"></status>
</kw>
<msg timestamp="20200407 17:45:46.227" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:45:45.913" endtime="20200407 17:45:46.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.229" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:45:46.228" endtime="20200407 17:45:46.229"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:46.230" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:45:46.229" endtime="20200407 17:45:46.230"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:46.231" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:45:46.230" endtime="20200407 17:45:46.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.233" endtime="20200407 17:45:46.234"></status>
</kw>
<msg timestamp="20200407 17:45:46.234" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:45:46.232" endtime="20200407 17:45:46.234"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:46.235" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:46.236" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:45:46.235" endtime="20200407 17:45:46.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:46.237" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:45:46.236" endtime="20200407 17:45:46.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.239" endtime="20200407 17:45:46.239"></status>
</kw>
<msg timestamp="20200407 17:45:46.240" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:45:46.238" endtime="20200407 17:45:46.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.242" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:45:46.241" endtime="20200407 17:45:46.242"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.241" endtime="20200407 17:45:46.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:45:46.244" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:45:46.243" endtime="20200407 17:45:46.244"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:46.245" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:45:46.244" endtime="20200407 17:45:46.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:46.246" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:46.246" endtime="20200407 17:45:46.247"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.250" endtime="20200407 17:45:46.251"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.249" endtime="20200407 17:45:46.251"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.248" endtime="20200407 17:45:46.251"></status>
</kw>
<msg timestamp="20200407 17:45:46.252" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:46.247" endtime="20200407 17:45:46.252"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.252" endtime="20200407 17:45:46.253"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:45.913" endtime="20200407 17:45:46.254"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.255" endtime="20200407 17:45:46.553"></status>
</kw>
<msg timestamp="20200407 17:45:46.554" level="INFO">@{getExecution} = [ PASS | [{'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:45:46.255" endtime="20200407 17:45:46.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.556" level="INFO">---- &gt; ['PASS', [{'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.34', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:45:46.555" endtime="20200407 17:45:46.556"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:46.557" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:45:46.557" endtime="20200407 17:45:46.558"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:45:46.559" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:45:46.558" endtime="20200407 17:45:46.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.561" endtime="20200407 17:45:46.561"></status>
</kw>
<msg timestamp="20200407 17:45:46.562" level="INFO">@{getExecution} = [ PASS | [{'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:45:46.560" endtime="20200407 17:45:46.562"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:46.563" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:46.563" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:45:46.563" endtime="20200407 17:45:46.563"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:46.564" level="INFO">${lastExecution} = [{'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:45:46.564" endtime="20200407 17:45:46.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.566" endtime="20200407 17:45:46.567"></status>
</kw>
<msg timestamp="20200407 17:45:46.567" level="INFO">${idBuild} = 332611</msg>
<status status="PASS" starttime="20200407 17:45:46.565" endtime="20200407 17:45:46.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.569" level="INFO">----- &gt; ID of Build(137) : 332611</msg>
<status status="PASS" starttime="20200407 17:45:46.569" endtime="20200407 17:45:46.570"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.568" endtime="20200407 17:45:46.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:45:46.571" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:45:46.571" endtime="20200407 17:45:46.571"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:46.572" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:45:46.572" endtime="20200407 17:45:46.573"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:45:46.574" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:45:46.573" endtime="20200407 17:45:46.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.578" endtime="20200407 17:45:46.578"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.577" endtime="20200407 17:45:46.579"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.576" endtime="20200407 17:45:46.579"></status>
</kw>
<msg timestamp="20200407 17:45:46.579" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:45:46.575" endtime="20200407 17:45:46.580"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:45:46.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:45:46.580" endtime="20200407 17:45:46.581"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.254" endtime="20200407 17:45:46.582"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:45.913" endtime="20200407 17:45:46.582"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:45:46.583" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:45:46.583" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:45:46.582" endtime="20200407 17:45:46.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:45:46.585" level="INFO">${lastExecution} = {'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:45:46.584" endtime="20200407 17:45:46.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:45:46.586" level="INFO">-----&gt; Last execution : {'id': '332611', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:49:20', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8534', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.34', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:45:46.585" endtime="20200407 17:45:46.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:45:46.587" level="INFO">${lastExecutionID} = 332611</msg>
<status status="PASS" starttime="20200407 17:45:46.587" endtime="20200407 17:45:46.588"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.590" endtime="20200407 17:45:46.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:45:46.594" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:46.593" endtime="20200407 17:45:46.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:45:46.595" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:45:46.595" endtime="20200407 17:45:46.596"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:45:46.597" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:45:46.596" endtime="20200407 17:45:46.597"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:45:46.598" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:45:46.598" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:45:46.598" endtime="20200407 17:45:46.599"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:45:46.600" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:45:46.599" endtime="20200407 17:45:46.600"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.602" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:45:46.602" endtime="20200407 17:45:46.603"></status>
</kw>
<msg timestamp="20200407 17:45:46.603" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:46.601" endtime="20200407 17:45:46.603"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:45:46.604" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:46.604" endtime="20200407 17:45:46.605"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.605" endtime="20200407 17:45:46.606"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.601" endtime="20200407 17:45:46.606"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.609" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:45:46.608" endtime="20200407 17:45:46.609"></status>
</kw>
<msg timestamp="20200407 17:45:46.609" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:46.607" endtime="20200407 17:45:46.609"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:45:46.611" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:45:46.610" endtime="20200407 17:45:46.611"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.611" endtime="20200407 17:45:46.612"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.606" endtime="20200407 17:45:46.612"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.600" endtime="20200407 17:45:46.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.613" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:45:46.613" endtime="20200407 17:45:46.614"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:45:46.616" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:45:46.615" endtime="20200407 17:45:46.616"></status>
</kw>
<msg timestamp="20200407 17:45:46.616" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:45:46.614" endtime="20200407 17:45:46.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.618" endtime="20200407 17:45:46.619"></status>
</kw>
<msg timestamp="20200407 17:45:46.619" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:45:46.617" endtime="20200407 17:45:46.619"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.620" endtime="20200407 17:45:46.621"></status>
</kw>
<msg timestamp="20200407 17:45:46.622" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:45:46.620" endtime="20200407 17:45:46.622"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:45:46.623" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:45:46.622" endtime="20200407 17:45:46.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.624" endtime="20200407 17:45:46.625"></status>
</kw>
<msg timestamp="20200407 17:45:46.625" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:46.623" endtime="20200407 17:45:46.625"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:45:46.627" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:45:46.626" endtime="20200407 17:45:46.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.629" endtime="20200407 17:45:46.918"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.628" endtime="20200407 17:45:46.919"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.592" endtime="20200407 17:45:46.920"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.591" endtime="20200407 17:45:46.920"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.589" endtime="20200407 17:45:46.921"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.588" endtime="20200407 17:45:46.922"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:46.923" endtime="20200407 17:45:46.924"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:42.783" endtime="20200407 17:45:46.925"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:42.782" endtime="20200407 17:45:46.925"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:36.371" endtime="20200407 17:45:46.926"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:32.944" endtime="20200407 17:45:46.927"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:45:10.832" endtime="20200407 17:45:46.927" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t6" name="JM70-897:Modify a freehand annotation with the right rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:45:46.936" level="INFO">${tc_start} = 1586295946.935807</msg>
<status status="PASS" starttime="20200407 17:45:46.935" endtime="20200407 17:45:46.937"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:45:46.939" level="INFO">${tc_start} = 1586295946.935807</msg>
<status status="PASS" starttime="20200407 17:45:46.937" endtime="20200407 17:45:46.939"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.934" endtime="20200407 17:45:46.940"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:45:46.942" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:45:46.941" endtime="20200407 17:45:53.031"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:53.031" endtime="20200407 17:45:57.163"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:45:57.164" endtime="20200407 17:45:57.297"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.932" endtime="20200407 17:45:57.298"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.301" endtime="20200407 17:45:57.389"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.390" endtime="20200407 17:45:57.454"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.455" endtime="20200407 17:45:57.526"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.527" endtime="20200407 17:45:57.530"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.531" endtime="20200407 17:45:57.571"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:57.530" endtime="20200407 17:45:57.571"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:57.572" endtime="20200407 17:45:57.613"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:45:57.614" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:45:57.614" endtime="20200407 17:45:57.730"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:58.733" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:57.731" endtime="20200407 17:45:58.733"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:57.526" endtime="20200407 17:45:58.733"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:58.734" endtime="20200407 17:45:58.735"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:58.736" endtime="20200407 17:45:58.757"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:58.735" endtime="20200407 17:45:58.757"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:45:58.758" endtime="20200407 17:45:58.778"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:45:58.779" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:45:58.778" endtime="20200407 17:45:58.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:45:59.842" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:45:58.841" endtime="20200407 17:45:59.842"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:58.733" endtime="20200407 17:45:59.842"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:45:59.843" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:45:59.842" endtime="20200407 17:46:00.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:46:01.239" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:46:00.234" endtime="20200407 17:46:01.239"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:57.299" endtime="20200407 17:46:01.239"></status>
</kw>
<status status="PASS" starttime="20200407 17:45:46.931" endtime="20200407 17:46:01.239"></status>
</kw>
<kw name="Draw a Freehand Annotation With Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a freehand annotation</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:01.239"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:46:01.251" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:01.251"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:01.251"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:01.251"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:01.251"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.252" endtime="20200407 17:46:01.276"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.252" endtime="20200407 17:46:01.276"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:46:01.277" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:46:01.276" endtime="20200407 17:46:01.318"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.251" endtime="20200407 17:46:01.318"></status>
</kw>
<kw name="Click On Freehand Annotation" library="CommonAnnotationWeb">
<doc>Click on freehand annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.319" endtime="20200407 17:46:01.344"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.319" endtime="20200407 17:46:01.345"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:46:01.345" level="INFO">Clicking element 'xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:46:01.345" endtime="20200407 17:46:01.403"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.319" endtime="20200407 17:46:01.404"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Freehand</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.405" endtime="20200407 17:46:01.433"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.404" endtime="20200407 17:46:01.434"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:46:01.447" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Freehand'.</msg>
<status status="PASS" starttime="20200407 17:46:01.434" endtime="20200407 17:46:01.447"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.434" endtime="20200407 17:46:01.448"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.404" endtime="20200407 17:46:01.448"></status>
</kw>
<kw name="Draw With Freehand Annotation" library="CommonAnnotationWeb">
<doc>Draw a Freehand Annotation</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.449" endtime="20200407 17:46:01.472"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.448" endtime="20200407 17:46:01.472"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:01.472" endtime="20200407 17:46:02.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:46:03.061" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:46:02.046" endtime="20200407 17:46:03.061"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.448" endtime="20200407 17:46:03.062"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:01.239" endtime="20200407 17:46:03.062"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:03.062" endtime="20200407 17:46:03.112"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.062" endtime="20200407 17:46:03.112"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:46:03.112" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:46:03.112" endtime="20200407 17:46:03.199"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.062" endtime="20200407 17:46:03.199"></status>
</kw>
<kw name="Select The Drawing Tool Freehand Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Freehand Annotation clicking over</doc>
<arguments>
<arg>-125</arg>
<arg>93</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:03.203" endtime="20200407 17:46:03.241"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.199" endtime="20200407 17:46:03.241"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:46:03.241" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-125, y=93.</msg>
<status status="PASS" starttime="20200407 17:46:03.241" endtime="20200407 17:46:03.817"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.199" endtime="20200407 17:46:03.817"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.199" endtime="20200407 17:46:03.817"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:03.821" endtime="20200407 17:46:04.139"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.820" endtime="20200407 17:46:04.140"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:04.156" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:46:04.140" endtime="20200407 17:46:04.156"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:04.140" endtime="20200407 17:46:04.156"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:03.817" endtime="20200407 17:46:04.156"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Right">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:04.158" endtime="20200407 17:46:04.158"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:04.159" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:04.158" endtime="20200407 17:46:05.265"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:04.158" endtime="20200407 17:46:05.265"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:05.265" endtime="20200407 17:46:05.265"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:05.265" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:05.265" endtime="20200407 17:46:06.376"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:05.265" endtime="20200407 17:46:06.376"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:06.376" endtime="20200407 17:46:06.376"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:06.376" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:06.376" endtime="20200407 17:46:07.479"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:06.376" endtime="20200407 17:46:07.479"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:07.479" endtime="20200407 17:46:07.479"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:07.479" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:07.479" endtime="20200407 17:46:08.565"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:07.479" endtime="20200407 17:46:08.565"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:08.565" endtime="20200407 17:46:08.565"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:08.565" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:08.565" endtime="20200407 17:46:09.692"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:08.565" endtime="20200407 17:46:09.692"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:09.693" endtime="20200407 17:46:09.693"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:09.693" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:09.693" endtime="20200407 17:46:10.789"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:09.693" endtime="20200407 17:46:10.789"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:10.789" endtime="20200407 17:46:10.789"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:10.789" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:10.789" endtime="20200407 17:46:11.893"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:10.789" endtime="20200407 17:46:11.893"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:11.893" endtime="20200407 17:46:11.893"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:11.893" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:11.893" endtime="20200407 17:46:12.993"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:11.893" endtime="20200407 17:46:12.993"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:12.993" endtime="20200407 17:46:12.993"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:12.993" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:46:12.993" endtime="20200407 17:46:14.084"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:12.993" endtime="20200407 17:46:14.085"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:04.157" endtime="20200407 17:46:14.085"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:04.156" endtime="20200407 17:46:14.086"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:14.086" endtime="20200407 17:46:15.159"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:14.086" endtime="20200407 17:46:15.159"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:46:15.159" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:46:15.159" endtime="20200407 17:46:16.273"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:14.086" endtime="20200407 17:46:16.273"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:16.273" endtime="20200407 17:46:17.340"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:16.273" endtime="20200407 17:46:17.340"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:46:17.340" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:46:17.340" endtime="20200407 17:46:18.424"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:16.273" endtime="20200407 17:46:18.425"></status>
</kw>
<kw name="Select The Drawing Tool Freehand Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Freehand Annotation clicking over</doc>
<arguments>
<arg>-180</arg>
<arg>80</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:18.425" endtime="20200407 17:46:20.008"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:18.425" endtime="20200407 17:46:20.008"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:46:20.008" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-180, y=80.</msg>
<status status="PASS" starttime="20200407 17:46:20.008" endtime="20200407 17:46:21.634"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:18.425" endtime="20200407 17:46:21.635"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:18.425" endtime="20200407 17:46:21.635"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:21.635" endtime="20200407 17:46:22.707"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:21.635" endtime="20200407 17:46:22.707"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:46:23.779" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:46:22.707" endtime="20200407 17:46:23.779"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:22.707" endtime="20200407 17:46:23.779"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:21.635" endtime="20200407 17:46:23.779"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:23.779" endtime="20200407 17:46:24.858"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:23.779" endtime="20200407 17:46:24.858"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:46:24.858" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:46:24.858" endtime="20200407 17:46:25.988"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:23.779" endtime="20200407 17:46:25.988"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:25.988" endtime="20200407 17:46:27.518"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:25.988" endtime="20200407 17:46:27.519"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:27.519" endtime="20200407 17:46:29.117"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:46:29.120" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:46:29.119" endtime="20200407 17:46:30.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:46:31.231" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:46:30.229" endtime="20200407 17:46:31.231"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:27.519" endtime="20200407 17:46:31.231"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:31.231" endtime="20200407 17:46:32.849"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:46:32.849" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:46:32.849" endtime="20200407 17:46:34.133"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:46:36.135" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:46:34.133" endtime="20200407 17:46:36.135"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:27.519" endtime="20200407 17:46:36.136"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:46:36.136" endtime="20200407 17:46:38.745"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:46:38.746" level="INFO">${tc_end} = 1586295998.746005</msg>
<status status="PASS" starttime="20200407 17:46:38.746" endtime="20200407 17:46:38.746"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:46:38.746" level="INFO">${tc_duration} = 51.810198068618774</msg>
<status status="PASS" starttime="20200407 17:46:38.746" endtime="20200407 17:46:38.746"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:46:38.753" level="INFO">${tc_duration} = 0.8635033011436463</msg>
<status status="PASS" starttime="20200407 17:46:38.746" endtime="20200407 17:46:38.753"></status>
</kw>
<msg timestamp="20200407 17:46:38.754" level="INFO">${duration} = 0.8635033011436463</msg>
<status status="PASS" starttime="20200407 17:46:38.746" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:46:38.754" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.754"></status>
</kw>
<msg timestamp="20200407 17:46:38.754" level="INFO">${ElapsedTime} = 0.8635033011436463</msg>
<status status="PASS" starttime="20200407 17:46:38.746" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:38.754" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:46:38.754" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:46:38.754" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:46:38.754" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:46:38.754" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:46:38.763" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:46:38.754" endtime="20200407 17:46:38.764"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:46:38.765" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:46:38.764" endtime="20200407 17:46:38.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:46:38.767" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:46:38.765" endtime="20200407 17:46:38.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:46:38.768" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:46:38.767" endtime="20200407 17:46:38.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:38.769" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:46:38.769" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:46:38.770" level="INFO">JM70-897:Modify a freehand annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:46:38.770" level="INFO">@{listeTestName} = [ JM70-897 | Modify a freehand annotation with the right rotation ]</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:46:38.770" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:46:38.770" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:46:38.770" level="INFO">${tesCaseName} = Modify a freehand annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:46:38.770" level="INFO">Modify a freehand annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:38.770" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:38.770"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:40.849"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:40.850" endtime="20200407 17:46:40.850"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:40.850" endtime="20200407 17:46:40.900"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:46:40.950" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1214731722, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:46:40.915" endtime="20200407 17:46:40.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:46:40.966" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1214731722, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<msg timestamp="20200407 17:46:40.966" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1214731722, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:46:38.770" endtime="20200407 17:46:40.966"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:46:40.966" level="INFO">${getSessionID} = 1214731722</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<msg timestamp="20200407 17:46:40.966" level="INFO">${SESSIONID} = 1214731722</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:46:40.966" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<msg timestamp="20200407 17:46:40.966" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:46:40.966" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:40.966"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:43.029"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:43.030" endtime="20200407 17:46:43.117"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:43.117" endtime="20200407 17:46:43.166"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:40.966" endtime="20200407 17:46:43.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:43.166" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:43.166" endtime="20200407 17:46:43.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:46:43.166" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:46:43.166" endtime="20200407 17:46:43.166"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:46:43.747" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:46:43.174" endtime="20200407 17:46:43.752"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:43.753" endtime="20200407 17:46:44.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:46:44.354" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:46:44.353" endtime="20200407 17:46:44.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:44.354" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:44.354" endtime="20200407 17:46:44.354"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:43.166" endtime="20200407 17:46:44.354"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:46:44.972" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:46:44.354" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:46:44.973" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:46:44.973" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:46:44.973" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:46:44.973" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:46:44.973" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:46:44.973" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:44.973" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:44.973"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:46:45.313" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:46:44.973" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:46:45.313" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:46:45.313" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:46:45.313" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:46:45.313" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:46:45.313" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:46:45.313" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:45.313" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:45.313" endtime="20200407 17:46:45.329"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:46:45.660" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:46:45.329" endtime="20200407 17:46:45.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:46:45.661" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:46:45.661" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:46:45.661" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:46:45.661" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:46:45.661" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<msg timestamp="20200407 17:46:45.661" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:46:45.661" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:45.661" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:45.661"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:46:46.134" level="INFO">@{testCases} = [ {'id': '8535', 'name': 'Modify a freehand annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '897'} ]</msg>
<status status="PASS" starttime="20200407 17:46:45.661" endtime="20200407 17:46:46.134"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:46:46.135" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:46:46.136" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:46:46.135" endtime="20200407 17:46:46.136"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.137" level="INFO">{'id': '8535', 'name': 'Modify a freehand annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '897'}</msg>
<status status="PASS" starttime="20200407 17:46:46.137" endtime="20200407 17:46:46.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.137" endtime="20200407 17:46:46.144"></status>
</kw>
<msg timestamp="20200407 17:46:46.144" level="INFO">${testCase} = {'id': '8535', 'name': 'Modify a freehand annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '897'}</msg>
<status status="PASS" starttime="20200407 17:46:46.137" endtime="20200407 17:46:46.145"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:46:46.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:46:46.146" endtime="20200407 17:46:46.147"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.137" endtime="20200407 17:46:46.148"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.136" endtime="20200407 17:46:46.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.149" level="INFO">{'id': '8535', 'name': 'Modify a freehand annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '897'}</msg>
<status status="PASS" starttime="20200407 17:46:46.148" endtime="20200407 17:46:46.149"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:46:46.150" level="INFO">${testCaseNAME} = Modify a freehand annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:46:46.150" level="INFO">${testCaseID} = 8535</msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:46:46.150" level="INFO">${testCaseExternalID} = 897</msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:46:46.150" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:46:46.150" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:46:46.150" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.150"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.165" endtime="20200407 17:46:46.436"></status>
</kw>
<msg timestamp="20200407 17:46:46.436" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:46:46.165" endtime="20200407 17:46:46.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.437" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:46:46.437" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:46:46.437" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<msg timestamp="20200407 17:46:46.437" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:46:46.437" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:46:46.437" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:46:46.437" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<msg timestamp="20200407 17:46:46.437" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.437" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.437"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.437" endtime="20200407 17:46:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:46:46.452" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:46:46.452" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:46:46.452" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<msg timestamp="20200407 17:46:46.452" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.452" endtime="20200407 17:46:46.452"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.165" endtime="20200407 17:46:46.463"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.464" endtime="20200407 17:46:46.795"></status>
</kw>
<msg timestamp="20200407 17:46:46.795" level="INFO">@{getExecution} = [ PASS | [{'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:46:46.464" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.796" level="INFO">---- &gt; ['PASS', [{'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.74', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:46:46.796" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:46:46.796" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<msg timestamp="20200407 17:46:46.796" level="INFO">@{getExecution} = [ PASS | [{'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:46:46.796" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:46:46.796" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:46:46.796" level="INFO">${lastExecution} = [{'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.813" endtime="20200407 17:46:46.814"></status>
</kw>
<msg timestamp="20200407 17:46:46.814" level="INFO">${idBuild} = 332612</msg>
<status status="PASS" starttime="20200407 17:46:46.796" endtime="20200407 17:46:46.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.815" level="INFO">----- &gt; ID of Build(137) : 332612</msg>
<status status="PASS" starttime="20200407 17:46:46.815" endtime="20200407 17:46:46.815"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.815" endtime="20200407 17:46:46.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:46:46.815" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:46:46.815" endtime="20200407 17:46:46.815"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:46:46.819" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:46:46.819" endtime="20200407 17:46:46.820"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:46:46.820" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.820"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.820"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.820"></status>
</kw>
<msg timestamp="20200407 17:46:46.820" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.820"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:46:46.828" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:46:46.820" endtime="20200407 17:46:46.828"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.463" endtime="20200407 17:46:46.829"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.150" endtime="20200407 17:46:46.829"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:46:46.830" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:46:46.830" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:46:46.829" endtime="20200407 17:46:46.830"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:46:46.831" level="INFO">${lastExecution} = {'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:46:46.831" endtime="20200407 17:46:46.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:46:46.831" level="INFO">-----&gt; Last execution : {'id': '332612', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:50:08', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8536', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.74', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:46:46.831" endtime="20200407 17:46:46.831"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:46:46.835" level="INFO">${lastExecutionID} = 332612</msg>
<status status="PASS" starttime="20200407 17:46:46.834" endtime="20200407 17:46:46.835"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:46:46.836" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:46:46.836" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:46:46.836" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:46:46.836" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:46:46.836" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:46:46.836" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.836" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<msg timestamp="20200407 17:46:46.836" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.836"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:46:46.852" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.852" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<msg timestamp="20200407 17:46:46.852" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:46:46.852" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:46:46.852" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:46:46.852" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<msg timestamp="20200407 17:46:46.852" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<msg timestamp="20200407 17:46:46.852" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.852"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.868" endtime="20200407 17:46:46.868"></status>
</kw>
<msg timestamp="20200407 17:46:46.869" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:46:46.852" endtime="20200407 17:46:46.869"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:46:46.869" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:46:46.869" endtime="20200407 17:46:46.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.870" endtime="20200407 17:46:46.870"></status>
</kw>
<msg timestamp="20200407 17:46:46.870" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:46:46.870" endtime="20200407 17:46:46.870"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:46:46.870" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:46:46.870" endtime="20200407 17:46:46.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:46.870" endtime="20200407 17:46:47.159"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.870" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.836" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:46.835" endtime="20200407 17:46:47.160"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:43.166" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:43.166" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:36.136" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:27.519" endtime="20200407 17:46:47.160"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:45:46.929" endtime="20200407 17:46:47.160" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t7" name="JM70-898:Modify a text annotation with the right rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:46:47.160" level="INFO">${tc_start} = 1586296007.160296</msg>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:47.160"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:46:47.160" level="INFO">${tc_start} = 1586296007.160296</msg>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:47.160"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:47.160"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:46:47.160" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:53.688"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:53.688" endtime="20200407 17:46:58.363"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:46:58.364" endtime="20200407 17:46:59.011"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:46:59.012"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:46:59.015" endtime="20200407 17:47:00.094"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:00.095" endtime="20200407 17:47:01.163"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:01.164" endtime="20200407 17:47:02.277"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:02.280" endtime="20200407 17:47:02.784"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:02.787" endtime="20200407 17:47:04.342"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:02.785" endtime="20200407 17:47:04.343"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:04.344" endtime="20200407 17:47:05.410"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:47:05.412" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:47:05.411" endtime="20200407 17:47:07.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:08.110" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:07.108" endtime="20200407 17:47:08.111"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:02.278" endtime="20200407 17:47:08.112"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:08.114" endtime="20200407 17:47:08.619"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:08.622" endtime="20200407 17:47:10.184"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:08.621" endtime="20200407 17:47:10.185"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:10.186" endtime="20200407 17:47:11.237"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:47:11.239" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:47:11.238" endtime="20200407 17:47:12.921"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:13.926" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:12.921" endtime="20200407 17:47:13.926"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:08.113" endtime="20200407 17:47:13.927"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:47:13.928" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:47:13.928" endtime="20200407 17:47:17.612"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:18.613" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:17.612" endtime="20200407 17:47:18.614"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:59.013" endtime="20200407 17:47:18.615"></status>
</kw>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:47:18.615"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:18.621" endtime="20200407 17:47:19.125"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:47:19.653" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:47:19.129" endtime="20200407 17:47:19.653"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:19.127" endtime="20200407 17:47:19.654"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:18.620" endtime="20200407 17:47:19.654"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:18.618" endtime="20200407 17:47:19.655"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:19.659" endtime="20200407 17:47:21.227"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:19.657" endtime="20200407 17:47:21.228"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:47:21.230" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:47:21.229" endtime="20200407 17:47:22.336"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:19.656" endtime="20200407 17:47:22.336"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:22.340" endtime="20200407 17:47:23.913"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:22.339" endtime="20200407 17:47:23.914"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:47:23.917" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:47:23.915" endtime="20200407 17:47:25.000"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:22.338" endtime="20200407 17:47:25.001"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:25.005" endtime="20200407 17:47:26.579"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:25.004" endtime="20200407 17:47:26.580"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:47:27.622" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200407 17:47:26.582" endtime="20200407 17:47:27.622"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:26.581" endtime="20200407 17:47:27.623"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:25.002" endtime="20200407 17:47:27.624"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:27.629" endtime="20200407 17:47:29.169"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:27.628" endtime="20200407 17:47:29.170"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:47:29.172" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:47:29.171" endtime="20200407 17:47:30.775"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:27.627" endtime="20200407 17:47:30.776"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:27.627" endtime="20200407 17:47:30.777"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:30.781" endtime="20200407 17:47:32.336"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:30.780" endtime="20200407 17:47:32.337"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:47:32.339" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:47:32.338" endtime="20200407 17:47:33.902"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:30.778" endtime="20200407 17:47:33.902"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:30.777" endtime="20200407 17:47:33.903"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:27.626" endtime="20200407 17:47:33.903"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:34.906" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:33.904" endtime="20200407 17:47:34.906"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:27.625" endtime="20200407 17:47:34.907"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:34.911" endtime="20200407 17:47:35.977"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:34.910" endtime="20200407 17:47:35.978"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200407 17:47:37.038" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200407 17:47:35.980" endtime="20200407 17:47:37.039"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:35.979" endtime="20200407 17:47:37.040"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:34.908" endtime="20200407 17:47:37.041"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:37.047" endtime="20200407 17:47:37.551"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:37.552" endtime="20200407 17:47:39.110"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:37.551" endtime="20200407 17:47:39.110"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:39.111" endtime="20200407 17:47:40.173"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:47:40.175" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200407 17:47:40.175" endtime="20200407 17:47:41.938"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:42.941" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:41.939" endtime="20200407 17:47:42.941"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:37.045" endtime="20200407 17:47:42.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:47:43.946" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:42.943" endtime="20200407 17:47:43.946"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:37.043" endtime="20200407 17:47:43.947"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:43.950" endtime="20200407 17:47:45.493"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:43.949" endtime="20200407 17:47:45.495"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:47:46.533" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200407 17:47:45.497" endtime="20200407 17:47:46.534"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:45.496" endtime="20200407 17:47:46.534"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:43.948" endtime="20200407 17:47:46.535"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:43.947" endtime="20200407 17:47:46.536"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200407 17:47:46.539" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200407 17:47:46.539" endtime="20200407 17:47:47.639"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:47:48.642" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:47.641" endtime="20200407 17:47:48.642"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:46.537" endtime="20200407 17:47:48.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:47:49.647" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:47:48.644" endtime="20200407 17:47:49.648"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:37.041" endtime="20200407 17:47:49.649"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:18.617" endtime="20200407 17:47:49.649"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:49.652" endtime="20200407 17:47:50.695"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:49.651" endtime="20200407 17:47:50.696"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:47:50.698" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:47:50.697" endtime="20200407 17:47:51.824"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:49.650" endtime="20200407 17:47:51.825"></status>
</kw>
<kw name="Select The Text Annotation On The Map" library="CommonAnnotationWeb">
<doc>Select The Text Annotation On The Map clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:51.831" endtime="20200407 17:47:53.385"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:51.829" endtime="20200407 17:47:53.386"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:47:53.388" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:47:53.387" endtime="20200407 17:47:54.959"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:51.827" endtime="20200407 17:47:54.960"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:51.826" endtime="20200407 17:47:54.960"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:54.962" endtime="20200407 17:47:56.007"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:54.961" endtime="20200407 17:47:56.009"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:47:57.055" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:47:56.011" endtime="20200407 17:47:57.056"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:56.010" endtime="20200407 17:47:57.056"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:54.961" endtime="20200407 17:47:57.057"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Right">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:57.060" endtime="20200407 17:47:57.061"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:47:57.062" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:47:57.061" endtime="20200407 17:47:58.161"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:57.060" endtime="20200407 17:47:58.162"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:58.164" endtime="20200407 17:47:58.165"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:47:58.167" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:47:58.166" endtime="20200407 17:47:59.225"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:58.163" endtime="20200407 17:47:59.226"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:47:59.227" endtime="20200407 17:47:59.228"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:47:59.230" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:47:59.229" endtime="20200407 17:48:00.315"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:59.226" endtime="20200407 17:48:00.316"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:00.318" endtime="20200407 17:48:00.319"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:00.320" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:00.320" endtime="20200407 17:48:01.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:00.316" endtime="20200407 17:48:01.384"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:01.385" endtime="20200407 17:48:01.387"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:01.388" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:01.387" endtime="20200407 17:48:02.439"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:01.385" endtime="20200407 17:48:02.440"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:02.442" endtime="20200407 17:48:02.443"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:02.444" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:02.443" endtime="20200407 17:48:03.509"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:02.440" endtime="20200407 17:48:03.510"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:03.511" endtime="20200407 17:48:03.512"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:03.514" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:03.513" endtime="20200407 17:48:04.595"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:03.511" endtime="20200407 17:48:04.595"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:04.596" endtime="20200407 17:48:04.596"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:04.597" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:04.596" endtime="20200407 17:48:05.673"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:04.595" endtime="20200407 17:48:05.674"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:05.675" endtime="20200407 17:48:05.676"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:05.677" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:48:05.676" endtime="20200407 17:48:06.759"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:05.675" endtime="20200407 17:48:06.760"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:57.059" endtime="20200407 17:48:06.760"></status>
</kw>
<status status="PASS" starttime="20200407 17:47:57.058" endtime="20200407 17:48:06.761"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:06.765" endtime="20200407 17:48:07.822"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:06.764" endtime="20200407 17:48:07.823"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:48:07.825" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:48:07.824" endtime="20200407 17:48:08.981"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:06.762" endtime="20200407 17:48:08.981"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:08.985" endtime="20200407 17:48:10.025"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:08.984" endtime="20200407 17:48:10.026"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:48:10.028" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:48:10.027" endtime="20200407 17:48:11.107"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:08.982" endtime="20200407 17:48:11.108"></status>
</kw>
<kw name="Select The Text Annotation On The Map" library="CommonAnnotationWeb">
<doc>Select The Text Annotation On The Map clicking over</doc>
<arguments>
<arg>-209</arg>
<arg>110</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:11.111" endtime="20200407 17:48:12.653"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:11.110" endtime="20200407 17:48:12.654"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:48:12.656" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-209, y=110.</msg>
<status status="PASS" starttime="20200407 17:48:12.655" endtime="20200407 17:48:14.217"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:11.109" endtime="20200407 17:48:14.218"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:11.108" endtime="20200407 17:48:14.219"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:14.223" endtime="20200407 17:48:15.271"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:14.223" endtime="20200407 17:48:15.272"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:48:16.312" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:48:15.274" endtime="20200407 17:48:16.312"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:15.273" endtime="20200407 17:48:16.313"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:14.220" endtime="20200407 17:48:16.314"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:16.318" endtime="20200407 17:48:17.379"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:16.316" endtime="20200407 17:48:17.380"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:48:17.382" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:48:17.381" endtime="20200407 17:48:18.477"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:16.315" endtime="20200407 17:48:18.478"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:18.481" endtime="20200407 17:48:19.989"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:18.479" endtime="20200407 17:48:19.990"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:19.995" endtime="20200407 17:48:21.561"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:48:21.563" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:48:21.562" endtime="20200407 17:48:22.668"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:48:23.673" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:48:22.669" endtime="20200407 17:48:23.673"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:19.993" endtime="20200407 17:48:23.674"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:23.675" endtime="20200407 17:48:25.233"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:48:25.235" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:48:25.234" endtime="20200407 17:48:26.833"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:48:28.836" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:48:26.834" endtime="20200407 17:48:28.836"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:19.992" endtime="20200407 17:48:28.837"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:48:28.840" endtime="20200407 17:48:31.387"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:48:31.390" level="INFO">${tc_end} = 1586296111.390413</msg>
<status status="PASS" starttime="20200407 17:48:31.390" endtime="20200407 17:48:31.390"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:48:31.392" level="INFO">${tc_duration} = 104.23011708259583</msg>
<status status="PASS" starttime="20200407 17:48:31.391" endtime="20200407 17:48:31.392"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:48:31.393" level="INFO">${tc_duration} = 1.7371686180432637</msg>
<status status="PASS" starttime="20200407 17:48:31.393" endtime="20200407 17:48:31.393"></status>
</kw>
<msg timestamp="20200407 17:48:31.394" level="INFO">${duration} = 1.7371686180432637</msg>
<status status="PASS" starttime="20200407 17:48:31.389" endtime="20200407 17:48:31.394"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:48:31.395" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:48:31.395" endtime="20200407 17:48:31.396"></status>
</kw>
<msg timestamp="20200407 17:48:31.397" level="INFO">${ElapsedTime} = 1.7371686180432637</msg>
<status status="PASS" starttime="20200407 17:48:31.387" endtime="20200407 17:48:31.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:31.397" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:48:31.397" endtime="20200407 17:48:31.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:48:31.399" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:48:31.398" endtime="20200407 17:48:31.399"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:48:31.401" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:48:31.400" endtime="20200407 17:48:31.401"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:48:31.401" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:48:31.402" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:48:31.401" endtime="20200407 17:48:31.402"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:48:31.403" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:48:31.402" endtime="20200407 17:48:31.404"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:48:31.405" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:48:31.404" endtime="20200407 17:48:31.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:48:31.407" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:48:31.406" endtime="20200407 17:48:31.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:48:31.408" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:48:31.407" endtime="20200407 17:48:31.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:31.409" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:48:31.408" endtime="20200407 17:48:31.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:48:31.410" level="INFO">JM70-898:Modify a text annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:48:31.410" endtime="20200407 17:48:31.411"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:48:31.412" level="INFO">@{listeTestName} = [ JM70-898 | Modify a text annotation with the right rotation ]</msg>
<status status="PASS" starttime="20200407 17:48:31.411" endtime="20200407 17:48:31.412"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:48:31.413" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:48:31.413" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:48:31.412" endtime="20200407 17:48:31.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:48:31.415" level="INFO">${tesCaseName} = Modify a text annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:48:31.414" endtime="20200407 17:48:31.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:48:31.416" level="INFO">Modify a text annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:48:31.415" endtime="20200407 17:48:31.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:31.417" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:48:31.417" endtime="20200407 17:48:31.418"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:31.421" endtime="20200407 17:48:33.449"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:33.451" endtime="20200407 17:48:33.452"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:33.453" endtime="20200407 17:48:33.500"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:48:33.543" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1933135360, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:48:33.500" endtime="20200407 17:48:33.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:48:33.545" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1933135360, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:48:33.544" endtime="20200407 17:48:33.545"></status>
</kw>
<msg timestamp="20200407 17:48:33.545" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1933135360, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:48:31.419" endtime="20200407 17:48:33.546"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:48:33.548" level="INFO">${getSessionID} = 1933135360</msg>
<status status="PASS" starttime="20200407 17:48:33.547" endtime="20200407 17:48:33.548"></status>
</kw>
<msg timestamp="20200407 17:48:33.548" level="INFO">${SESSIONID} = 1933135360</msg>
<status status="PASS" starttime="20200407 17:48:33.546" endtime="20200407 17:48:33.549"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:48:33.551" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:33.550" endtime="20200407 17:48:33.551"></status>
</kw>
<msg timestamp="20200407 17:48:33.551" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:33.550" endtime="20200407 17:48:33.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:48:33.553" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:33.552" endtime="20200407 17:48:33.553"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:33.554" endtime="20200407 17:48:35.575"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:35.577" endtime="20200407 17:48:35.657"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:35.657" endtime="20200407 17:48:35.728"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:33.553" endtime="20200407 17:48:35.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:35.730" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:35.730" endtime="20200407 17:48:35.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:48:35.735" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:48:35.735" endtime="20200407 17:48:35.736"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:48:36.489" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:48:35.736" endtime="20200407 17:48:36.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:36.491" endtime="20200407 17:48:37.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:48:37.092" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:48:37.091" endtime="20200407 17:48:37.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:37.093" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:37.093" endtime="20200407 17:48:37.094"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:35.734" endtime="20200407 17:48:37.094"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:48:37.569" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:48:37.095" endtime="20200407 17:48:37.570"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:48:37.572" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:48:37.572" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:48:37.571" endtime="20200407 17:48:37.573"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:48:37.575" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:48:37.573" endtime="20200407 17:48:37.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:48:37.577" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:48:37.576" endtime="20200407 17:48:37.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:48:37.580" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:48:37.578" endtime="20200407 17:48:37.580"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:48:37.582" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:48:37.581" endtime="20200407 17:48:37.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:37.584" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:37.583" endtime="20200407 17:48:37.585"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:48:37.905" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:48:37.586" endtime="20200407 17:48:37.906"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:48:37.908" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:48:37.908" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:48:37.907" endtime="20200407 17:48:37.908"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:48:37.910" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:48:37.909" endtime="20200407 17:48:37.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:48:37.911" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:48:37.911" endtime="20200407 17:48:37.912"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:48:37.913" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:48:37.912" endtime="20200407 17:48:37.913"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:48:37.914" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:48:37.913" endtime="20200407 17:48:37.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:37.915" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:37.915" endtime="20200407 17:48:37.916"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:48:38.218" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:48:37.916" endtime="20200407 17:48:38.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:48:38.220" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:48:38.219" endtime="20200407 17:48:38.221"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:48:38.222" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:48:38.223" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:48:38.222" endtime="20200407 17:48:38.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:48:38.224" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:48:38.223" endtime="20200407 17:48:38.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:48:38.226" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:38.225" endtime="20200407 17:48:38.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:38.227" endtime="20200407 17:48:38.228"></status>
</kw>
<msg timestamp="20200407 17:48:38.228" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:38.226" endtime="20200407 17:48:38.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:48:38.230" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:48:38.229" endtime="20200407 17:48:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:38.231" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:38.230" endtime="20200407 17:48:38.231"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:48:38.605" level="INFO">@{testCases} = [ {'id': '8537', 'name': 'Modify a text annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '898'} ]</msg>
<status status="PASS" starttime="20200407 17:48:38.232" endtime="20200407 17:48:38.605"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:48:38.607" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:48:38.608" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:48:38.606" endtime="20200407 17:48:38.608"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:48:38.611" level="INFO">{'id': '8537', 'name': 'Modify a text annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '898'}</msg>
<status status="PASS" starttime="20200407 17:48:38.610" endtime="20200407 17:48:38.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:38.614" endtime="20200407 17:48:38.615"></status>
</kw>
<msg timestamp="20200407 17:48:38.616" level="INFO">${testCase} = {'id': '8537', 'name': 'Modify a text annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '898'}</msg>
<status status="PASS" starttime="20200407 17:48:38.612" endtime="20200407 17:48:38.616"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:48:38.619" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:48:38.617" endtime="20200407 17:48:38.619"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:38.609" endtime="20200407 17:48:38.620"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:38.608" endtime="20200407 17:48:38.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:48:38.622" level="INFO">{'id': '8537', 'name': 'Modify a text annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '898'}</msg>
<status status="PASS" starttime="20200407 17:48:38.621" endtime="20200407 17:48:38.623"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:48:38.625" level="INFO">${testCaseNAME} = Modify a text annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:48:38.623" endtime="20200407 17:48:38.625"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:48:38.627" level="INFO">${testCaseID} = 8537</msg>
<status status="PASS" starttime="20200407 17:48:38.626" endtime="20200407 17:48:38.627"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:48:38.629" level="INFO">${testCaseExternalID} = 898</msg>
<status status="PASS" starttime="20200407 17:48:38.628" endtime="20200407 17:48:38.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:48:38.631" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:48:38.630" endtime="20200407 17:48:38.632"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:48:38.634" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:48:38.632" endtime="20200407 17:48:38.634"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:48:38.635" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:48:38.635" endtime="20200407 17:48:38.636"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:38.638" endtime="20200407 17:48:39.251"></status>
</kw>
<msg timestamp="20200407 17:48:39.251" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:48:38.637" endtime="20200407 17:48:39.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.254" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:48:39.253" endtime="20200407 17:48:39.255"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:48:39.256" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:48:39.255" endtime="20200407 17:48:39.257"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:48:39.259" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:48:39.258" endtime="20200407 17:48:39.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.261" endtime="20200407 17:48:39.262"></status>
</kw>
<msg timestamp="20200407 17:48:39.263" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:48:39.260" endtime="20200407 17:48:39.263"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:48:39.265" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:48:39.266" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:48:39.264" endtime="20200407 17:48:39.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:48:39.269" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:48:39.267" endtime="20200407 17:48:39.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.271" endtime="20200407 17:48:39.272"></status>
</kw>
<msg timestamp="20200407 17:48:39.273" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:48:39.270" endtime="20200407 17:48:39.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.277" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:48:39.276" endtime="20200407 17:48:39.277"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.274" endtime="20200407 17:48:39.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:48:39.279" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:48:39.278" endtime="20200407 17:48:39.279"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:48:39.281" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:48:39.280" endtime="20200407 17:48:39.281"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:48:39.282" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:48:39.281" endtime="20200407 17:48:39.282"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.286" endtime="20200407 17:48:39.286"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.285" endtime="20200407 17:48:39.287"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.284" endtime="20200407 17:48:39.287"></status>
</kw>
<msg timestamp="20200407 17:48:39.287" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:48:39.283" endtime="20200407 17:48:39.287"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.288" endtime="20200407 17:48:39.289"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:38.637" endtime="20200407 17:48:39.289"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.291" endtime="20200407 17:48:39.592"></status>
</kw>
<msg timestamp="20200407 17:48:39.593" level="INFO">@{getExecution} = [ PASS | [{'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:48:39.290" endtime="20200407 17:48:39.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.596" level="INFO">---- &gt; ['PASS', [{'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.49', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:48:39.594" endtime="20200407 17:48:39.596"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:48:39.598" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:48:39.597" endtime="20200407 17:48:39.599"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:48:39.601" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:48:39.599" endtime="20200407 17:48:39.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.604" endtime="20200407 17:48:39.605"></status>
</kw>
<msg timestamp="20200407 17:48:39.605" level="INFO">@{getExecution} = [ PASS | [{'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:48:39.602" endtime="20200407 17:48:39.606"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:48:39.607" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:48:39.608" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:48:39.606" endtime="20200407 17:48:39.608"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:48:39.610" level="INFO">${lastExecution} = [{'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:48:39.609" endtime="20200407 17:48:39.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.613" endtime="20200407 17:48:39.614"></status>
</kw>
<msg timestamp="20200407 17:48:39.615" level="INFO">${idBuild} = 332617</msg>
<status status="PASS" starttime="20200407 17:48:39.611" endtime="20200407 17:48:39.615"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.618" level="INFO">----- &gt; ID of Build(137) : 332617</msg>
<status status="PASS" starttime="20200407 17:48:39.617" endtime="20200407 17:48:39.619"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.616" endtime="20200407 17:48:39.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:48:39.621" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:48:39.620" endtime="20200407 17:48:39.621"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:48:39.623" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:48:39.622" endtime="20200407 17:48:39.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:48:39.625" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:48:39.624" endtime="20200407 17:48:39.625"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.629" endtime="20200407 17:48:39.630"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.628" endtime="20200407 17:48:39.630"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.627" endtime="20200407 17:48:39.631"></status>
</kw>
<msg timestamp="20200407 17:48:39.631" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:48:39.626" endtime="20200407 17:48:39.631"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:48:39.633" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:48:39.632" endtime="20200407 17:48:39.633"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.290" endtime="20200407 17:48:39.633"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:38.636" endtime="20200407 17:48:39.633"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:48:39.635" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:48:39.635" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:48:39.634" endtime="20200407 17:48:39.635"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:48:39.636" level="INFO">${lastExecution} = {'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:48:39.635" endtime="20200407 17:48:39.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:48:39.638" level="INFO">-----&gt; Last execution : {'id': '332617', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:51:40', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8538', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.49', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:48:39.637" endtime="20200407 17:48:39.638"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:48:39.639" level="INFO">${lastExecutionID} = 332617</msg>
<status status="PASS" starttime="20200407 17:48:39.638" endtime="20200407 17:48:39.639"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.642" endtime="20200407 17:48:39.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:48:39.646" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:48:39.645" endtime="20200407 17:48:39.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:48:39.647" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:48:39.646" endtime="20200407 17:48:39.647"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:48:39.649" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:48:39.648" endtime="20200407 17:48:39.649"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:48:39.650" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:48:39.650" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:48:39.649" endtime="20200407 17:48:39.650"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:48:39.651" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:48:39.651" endtime="20200407 17:48:39.652"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.654" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:48:39.653" endtime="20200407 17:48:39.655"></status>
</kw>
<msg timestamp="20200407 17:48:39.655" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:48:39.653" endtime="20200407 17:48:39.655"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:48:39.656" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:48:39.656" endtime="20200407 17:48:39.657"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.657" endtime="20200407 17:48:39.658"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.652" endtime="20200407 17:48:39.658"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.661" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:48:39.660" endtime="20200407 17:48:39.661"></status>
</kw>
<msg timestamp="20200407 17:48:39.661" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:48:39.659" endtime="20200407 17:48:39.662"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:48:39.663" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:48:39.662" endtime="20200407 17:48:39.663"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.663" endtime="20200407 17:48:39.664"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.658" endtime="20200407 17:48:39.664"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.652" endtime="20200407 17:48:39.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:48:39.666" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:48:39.665" endtime="20200407 17:48:39.666"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:48:39.668" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:48:39.667" endtime="20200407 17:48:39.668"></status>
</kw>
<msg timestamp="20200407 17:48:39.668" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:48:39.666" endtime="20200407 17:48:39.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.670" endtime="20200407 17:48:39.671"></status>
</kw>
<msg timestamp="20200407 17:48:39.671" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:48:39.669" endtime="20200407 17:48:39.671"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.673" endtime="20200407 17:48:39.673"></status>
</kw>
<msg timestamp="20200407 17:48:39.674" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:48:39.672" endtime="20200407 17:48:39.674"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:48:39.675" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:48:39.674" endtime="20200407 17:48:39.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.677" endtime="20200407 17:48:39.677"></status>
</kw>
<msg timestamp="20200407 17:48:39.678" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:48:39.676" endtime="20200407 17:48:39.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:48:39.679" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:48:39.678" endtime="20200407 17:48:39.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:39.681" endtime="20200407 17:48:40.285"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.680" endtime="20200407 17:48:40.285"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.644" endtime="20200407 17:48:40.286"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.643" endtime="20200407 17:48:40.287"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.641" endtime="20200407 17:48:40.288"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:39.640" endtime="20200407 17:48:40.288"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:40.289" endtime="20200407 17:48:40.290"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:35.732" endtime="20200407 17:48:40.291"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:35.731" endtime="20200407 17:48:40.292"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:28.838" endtime="20200407 17:48:40.292"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:19.991" endtime="20200407 17:48:40.293"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:46:47.160" endtime="20200407 17:48:40.294" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t8" name="JM70-899:Modify a line annotation with the right rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:48:40.303" level="INFO">${tc_start} = 1586296120.302246</msg>
<status status="PASS" starttime="20200407 17:48:40.302" endtime="20200407 17:48:40.303"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:48:40.305" level="INFO">${tc_start} = 1586296120.302246</msg>
<status status="PASS" starttime="20200407 17:48:40.304" endtime="20200407 17:48:40.306"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:40.300" endtime="20200407 17:48:40.306"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:48:40.308" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:48:40.307" endtime="20200407 17:48:46.704"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:46.704" endtime="20200407 17:48:51.335"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:48:51.336" endtime="20200407 17:48:51.974"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:40.299" endtime="20200407 17:48:51.975"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:51.977" endtime="20200407 17:48:53.051"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:53.052" endtime="20200407 17:48:54.153"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:54.154" endtime="20200407 17:48:55.229"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:55.232" endtime="20200407 17:48:55.735"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:55.738" endtime="20200407 17:48:57.297"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:55.737" endtime="20200407 17:48:57.297"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:48:57.298" endtime="20200407 17:48:58.361"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:48:58.363" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:48:58.362" endtime="20200407 17:49:00.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:49:01.067" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:49:00.065" endtime="20200407 17:49:01.067"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:55.230" endtime="20200407 17:49:01.069"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:01.071" endtime="20200407 17:49:01.575"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:01.577" endtime="20200407 17:49:03.130"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:01.575" endtime="20200407 17:49:03.130"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:03.131" endtime="20200407 17:49:04.182"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:49:04.185" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:49:04.183" endtime="20200407 17:49:05.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:49:06.850" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:49:05.847" endtime="20200407 17:49:06.850"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:01.070" endtime="20200407 17:49:06.851"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:49:06.853" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:49:06.852" endtime="20200407 17:49:08.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:49:09.604" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:49:08.603" endtime="20200407 17:49:09.604"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:51.976" endtime="20200407 17:49:09.605"></status>
</kw>
<status status="PASS" starttime="20200407 17:48:40.298" endtime="20200407 17:49:09.605"></status>
</kw>
<kw name="Draw a Line Annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a line annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:09.607" endtime="20200407 17:49:10.110"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:49:10.634" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:49:10.113" endtime="20200407 17:49:10.634"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:10.111" endtime="20200407 17:49:10.635"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:09.606" endtime="20200407 17:49:10.636"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:09.606" endtime="20200407 17:49:10.637"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:10.641" endtime="20200407 17:49:12.199"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:10.639" endtime="20200407 17:49:12.200"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:49:12.202" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:49:12.201" endtime="20200407 17:49:13.323"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:10.637" endtime="20200407 17:49:13.324"></status>
</kw>
<kw name="Click On Line Annotation" library="CommonAnnotationWeb">
<doc>Click on line annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:13.328" endtime="20200407 17:49:14.901"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:13.327" endtime="20200407 17:49:14.901"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='linestring_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:49:14.904" level="INFO">Clicking element 'xpath://div[@id='linestring_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:49:14.903" endtime="20200407 17:49:16.049"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:13.325" endtime="20200407 17:49:16.050"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Line</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:16.052" endtime="20200407 17:49:17.615"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:16.051" endtime="20200407 17:49:17.615"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:49:18.649" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Line'.</msg>
<status status="PASS" starttime="20200407 17:49:17.617" endtime="20200407 17:49:18.650"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:17.616" endtime="20200407 17:49:18.651"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:16.050" endtime="20200407 17:49:18.651"></status>
</kw>
<kw name="Draw With Line Annotation" library="CommonAnnotationWeb">
<doc>Draw a Line Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:18.657" endtime="20200407 17:49:20.231"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:18.656" endtime="20200407 17:49:20.232"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:49:20.234" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:49:20.233" endtime="20200407 17:49:21.794"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:18.654" endtime="20200407 17:49:21.795"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:21.795" endtime="20200407 17:49:23.370"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:23.375" endtime="20200407 17:49:24.915"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:23.373" endtime="20200407 17:49:24.917"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:49:24.919" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:49:24.918" endtime="20200407 17:49:26.519"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:23.372" endtime="20200407 17:49:26.519"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:18.652" endtime="20200407 17:49:26.520"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:09.606" endtime="20200407 17:49:26.520"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:26.521" endtime="20200407 17:49:27.568"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:26.521" endtime="20200407 17:49:27.568"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:49:27.569" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:49:27.568" endtime="20200407 17:49:28.614"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:26.520" endtime="20200407 17:49:28.615"></status>
</kw>
<kw name="Select The Drawing Tool Line Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Line Annotation clicking over</doc>
<arguments>
<arg>-125</arg>
<arg>92</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:28.620" endtime="20200407 17:49:30.176"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:28.619" endtime="20200407 17:49:30.176"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:49:30.179" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-125, y=92.</msg>
<status status="PASS" starttime="20200407 17:49:30.177" endtime="20200407 17:49:31.759"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:28.617" endtime="20200407 17:49:31.759"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:28.616" endtime="20200407 17:49:31.759"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:31.761" endtime="20200407 17:49:32.810"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:31.760" endtime="20200407 17:49:32.811"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:33.851" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:49:32.814" endtime="20200407 17:49:33.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:32.812" endtime="20200407 17:49:33.852"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:31.760" endtime="20200407 17:49:33.853"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Right">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:33.857" endtime="20200407 17:49:33.858"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:33.860" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:33.859" endtime="20200407 17:49:34.965"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:33.856" endtime="20200407 17:49:34.966"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:34.968" endtime="20200407 17:49:34.969"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:34.971" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:34.970" endtime="20200407 17:49:36.055"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:34.967" endtime="20200407 17:49:36.057"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:36.058" endtime="20200407 17:49:36.059"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:36.061" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:36.060" endtime="20200407 17:49:37.145"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:36.057" endtime="20200407 17:49:37.145"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:37.147" endtime="20200407 17:49:37.147"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:37.148" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:37.148" endtime="20200407 17:49:38.222"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:37.146" endtime="20200407 17:49:38.223"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:38.224" endtime="20200407 17:49:38.225"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:38.226" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:38.226" endtime="20200407 17:49:39.299"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:38.223" endtime="20200407 17:49:39.300"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:39.302" endtime="20200407 17:49:39.303"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:39.304" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:39.304" endtime="20200407 17:49:40.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:39.300" endtime="20200407 17:49:40.384"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:40.385" endtime="20200407 17:49:40.386"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:40.388" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:40.387" endtime="20200407 17:49:41.472"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:40.384" endtime="20200407 17:49:41.473"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:41.475" endtime="20200407 17:49:41.476"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:41.478" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:41.477" endtime="20200407 17:49:42.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:41.474" endtime="20200407 17:49:42.551"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:42.552" endtime="20200407 17:49:42.553"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:42.555" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:49:42.554" endtime="20200407 17:49:43.629"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:42.551" endtime="20200407 17:49:43.630"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:33.855" endtime="20200407 17:49:43.630"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:33.855" endtime="20200407 17:49:43.631"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:43.634" endtime="20200407 17:49:44.690"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:43.633" endtime="20200407 17:49:44.691"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:49:44.693" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:49:44.692" endtime="20200407 17:49:45.839"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:43.632" endtime="20200407 17:49:45.839"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:45.842" endtime="20200407 17:49:46.883"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:45.841" endtime="20200407 17:49:46.884"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:49:46.886" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:49:46.885" endtime="20200407 17:49:47.954"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:45.840" endtime="20200407 17:49:47.955"></status>
</kw>
<kw name="Select The Drawing Tool Line Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Line Annotation clicking over</doc>
<arguments>
<arg>-150</arg>
<arg>75</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:47.958" endtime="20200407 17:49:49.505"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:47.957" endtime="20200407 17:49:49.506"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:49:49.508" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-150, y=75.</msg>
<status status="PASS" starttime="20200407 17:49:49.507" endtime="20200407 17:49:51.082"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:47.956" endtime="20200407 17:49:51.083"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:47.955" endtime="20200407 17:49:51.084"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:51.088" endtime="20200407 17:49:52.137"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:51.086" endtime="20200407 17:49:52.138"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:49:53.187" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:49:52.140" endtime="20200407 17:49:53.187"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:52.139" endtime="20200407 17:49:53.188"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:51.085" endtime="20200407 17:49:53.188"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:53.191" endtime="20200407 17:49:54.241"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:53.190" endtime="20200407 17:49:54.242"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:49:54.243" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:49:54.242" endtime="20200407 17:49:55.353"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:53.189" endtime="20200407 17:49:55.354"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:55.357" endtime="20200407 17:49:56.868"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:55.355" endtime="20200407 17:49:56.869"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:49:56.874" endtime="20200407 17:49:58.433"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:49:58.435" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:49:58.434" endtime="20200407 17:49:59.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:50:00.549" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:49:59.548" endtime="20200407 17:50:00.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:56.873" endtime="20200407 17:50:00.550"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:00.551" endtime="20200407 17:50:02.114"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:50:02.117" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:50:02.116" endtime="20200407 17:50:03.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:50:05.329" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:50:03.327" endtime="20200407 17:50:05.330"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:56.872" endtime="20200407 17:50:05.331"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:50:05.333" endtime="20200407 17:50:07.917"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:50:07.922" level="INFO">${tc_end} = 1586296207.921568</msg>
<status status="PASS" starttime="20200407 17:50:07.921" endtime="20200407 17:50:07.923"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:50:07.925" level="INFO">${tc_duration} = 87.61932182312012</msg>
<status status="PASS" starttime="20200407 17:50:07.923" endtime="20200407 17:50:07.925"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:50:07.927" level="INFO">${tc_duration} = 1.4603220303853353</msg>
<status status="PASS" starttime="20200407 17:50:07.926" endtime="20200407 17:50:07.927"></status>
</kw>
<msg timestamp="20200407 17:50:07.928" level="INFO">${duration} = 1.4603220303853353</msg>
<status status="PASS" starttime="20200407 17:50:07.920" endtime="20200407 17:50:07.929"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:50:07.931" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:50:07.929" endtime="20200407 17:50:07.931"></status>
</kw>
<msg timestamp="20200407 17:50:07.932" level="INFO">${ElapsedTime} = 1.4603220303853353</msg>
<status status="PASS" starttime="20200407 17:50:07.918" endtime="20200407 17:50:07.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:07.934" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:50:07.933" endtime="20200407 17:50:07.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:50:07.936" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:50:07.935" endtime="20200407 17:50:07.937"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:50:07.938" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:50:07.937" endtime="20200407 17:50:07.939"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:50:07.941" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:50:07.942" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:50:07.940" endtime="20200407 17:50:07.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:50:07.944" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:50:07.943" endtime="20200407 17:50:07.944"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:50:07.945" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:50:07.945" endtime="20200407 17:50:07.946"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:50:07.948" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:50:07.946" endtime="20200407 17:50:07.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:50:07.950" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:50:07.948" endtime="20200407 17:50:07.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:07.951" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:50:07.950" endtime="20200407 17:50:07.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:50:07.951" level="INFO">JM70-899:Modify a line annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:50:07.951" endtime="20200407 17:50:07.952"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:50:07.953" level="INFO">@{listeTestName} = [ JM70-899 | Modify a line annotation with the right rotation ]</msg>
<status status="PASS" starttime="20200407 17:50:07.952" endtime="20200407 17:50:07.953"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:50:07.954" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:50:07.954" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:50:07.954" endtime="20200407 17:50:07.955"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:50:07.956" level="INFO">${tesCaseName} = Modify a line annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:50:07.955" endtime="20200407 17:50:07.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:50:07.957" level="INFO">Modify a line annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:50:07.957" endtime="20200407 17:50:07.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:07.958" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:50:07.958" endtime="20200407 17:50:07.959"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:07.962" endtime="20200407 17:50:09.989"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:09.990" endtime="20200407 17:50:09.992"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:09.993" endtime="20200407 17:50:10.045"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:50:10.094" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1495554631, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:50:10.046" endtime="20200407 17:50:10.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:50:10.096" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1495554631, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:50:10.095" endtime="20200407 17:50:10.096"></status>
</kw>
<msg timestamp="20200407 17:50:10.097" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1495554631, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:50:07.961" endtime="20200407 17:50:10.097"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:50:10.099" level="INFO">${getSessionID} = 1495554631</msg>
<status status="PASS" starttime="20200407 17:50:10.098" endtime="20200407 17:50:10.099"></status>
</kw>
<msg timestamp="20200407 17:50:10.100" level="INFO">${SESSIONID} = 1495554631</msg>
<status status="PASS" starttime="20200407 17:50:10.097" endtime="20200407 17:50:10.100"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:50:10.102" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:10.101" endtime="20200407 17:50:10.102"></status>
</kw>
<msg timestamp="20200407 17:50:10.103" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:10.100" endtime="20200407 17:50:10.103"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:50:10.104" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:10.104" endtime="20200407 17:50:10.104"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:10.106" endtime="20200407 17:50:12.132"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:12.132" endtime="20200407 17:50:12.190"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:12.191" endtime="20200407 17:50:12.239"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:10.105" endtime="20200407 17:50:12.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:12.241" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:12.240" endtime="20200407 17:50:12.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:50:12.245" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:50:12.245" endtime="20200407 17:50:12.246"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:50:13.007" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:50:12.246" endtime="20200407 17:50:13.007"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:13.008" endtime="20200407 17:50:13.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:50:13.602" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:50:13.601" endtime="20200407 17:50:13.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:13.604" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:13.604" endtime="20200407 17:50:13.605"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:12.244" endtime="20200407 17:50:13.606"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:50:14.117" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:50:13.607" endtime="20200407 17:50:14.118"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:50:14.120" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:50:14.121" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:50:14.119" endtime="20200407 17:50:14.121"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:50:14.123" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:50:14.122" endtime="20200407 17:50:14.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:50:14.125" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:50:14.124" endtime="20200407 17:50:14.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:50:14.128" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:50:14.126" endtime="20200407 17:50:14.128"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:50:14.130" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:50:14.129" endtime="20200407 17:50:14.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:14.132" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:14.131" endtime="20200407 17:50:14.132"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:50:14.516" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:50:14.133" endtime="20200407 17:50:14.517"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:50:14.519" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:50:14.519" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:50:14.518" endtime="20200407 17:50:14.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:50:14.521" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:50:14.520" endtime="20200407 17:50:14.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:50:14.522" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:50:14.522" endtime="20200407 17:50:14.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:50:14.524" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:50:14.523" endtime="20200407 17:50:14.524"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:50:14.525" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:50:14.525" endtime="20200407 17:50:14.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:14.526" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:14.526" endtime="20200407 17:50:14.527"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:50:14.885" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:50:14.527" endtime="20200407 17:50:14.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:50:14.887" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:50:14.886" endtime="20200407 17:50:14.887"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:50:14.889" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:50:14.889" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:50:14.888" endtime="20200407 17:50:14.889"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:50:14.891" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:50:14.890" endtime="20200407 17:50:14.891"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:50:14.892" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:14.891" endtime="20200407 17:50:14.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:14.894" endtime="20200407 17:50:14.894"></status>
</kw>
<msg timestamp="20200407 17:50:14.895" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:14.893" endtime="20200407 17:50:14.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:50:14.896" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:50:14.895" endtime="20200407 17:50:14.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:14.897" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:14.897" endtime="20200407 17:50:14.897"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:50:15.511" level="INFO">@{testCases} = [ {'id': '8539', 'name': 'Modify a line annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '899'} ]</msg>
<status status="PASS" starttime="20200407 17:50:14.898" endtime="20200407 17:50:15.511"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:50:15.513" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:50:15.514" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:50:15.512" endtime="20200407 17:50:15.514"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:50:15.516" level="INFO">{'id': '8539', 'name': 'Modify a line annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '899'}</msg>
<status status="PASS" starttime="20200407 17:50:15.515" endtime="20200407 17:50:15.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.518" endtime="20200407 17:50:15.519"></status>
</kw>
<msg timestamp="20200407 17:50:15.519" level="INFO">${testCase} = {'id': '8539', 'name': 'Modify a line annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '899'}</msg>
<status status="PASS" starttime="20200407 17:50:15.517" endtime="20200407 17:50:15.519"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:50:15.521" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:50:15.520" endtime="20200407 17:50:15.521"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.515" endtime="20200407 17:50:15.521"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.514" endtime="20200407 17:50:15.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:50:15.523" level="INFO">{'id': '8539', 'name': 'Modify a line annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '899'}</msg>
<status status="PASS" starttime="20200407 17:50:15.522" endtime="20200407 17:50:15.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:50:15.524" level="INFO">${testCaseNAME} = Modify a line annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:50:15.523" endtime="20200407 17:50:15.524"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:50:15.526" level="INFO">${testCaseID} = 8539</msg>
<status status="PASS" starttime="20200407 17:50:15.525" endtime="20200407 17:50:15.526"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:50:15.527" level="INFO">${testCaseExternalID} = 899</msg>
<status status="PASS" starttime="20200407 17:50:15.526" endtime="20200407 17:50:15.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:50:15.528" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:50:15.528" endtime="20200407 17:50:15.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:50:15.530" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:50:15.529" endtime="20200407 17:50:15.530"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:50:15.531" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:50:15.530" endtime="20200407 17:50:15.531"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.533" endtime="20200407 17:50:15.922"></status>
</kw>
<msg timestamp="20200407 17:50:15.923" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:50:15.532" endtime="20200407 17:50:15.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:50:15.925" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:50:15.924" endtime="20200407 17:50:15.926"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:50:15.928" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:50:15.927" endtime="20200407 17:50:15.928"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:50:15.930" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:50:15.929" endtime="20200407 17:50:15.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.933" endtime="20200407 17:50:15.934"></status>
</kw>
<msg timestamp="20200407 17:50:15.935" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:50:15.931" endtime="20200407 17:50:15.935"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:50:15.937" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:50:15.938" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:50:15.936" endtime="20200407 17:50:15.938"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:50:15.940" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:50:15.939" endtime="20200407 17:50:15.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.943" endtime="20200407 17:50:15.944"></status>
</kw>
<msg timestamp="20200407 17:50:15.944" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:50:15.941" endtime="20200407 17:50:15.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:50:15.948" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:50:15.947" endtime="20200407 17:50:15.948"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.945" endtime="20200407 17:50:15.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:50:15.950" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:50:15.950" endtime="20200407 17:50:15.951"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:50:15.953" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:50:15.952" endtime="20200407 17:50:15.953"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:50:15.955" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:50:15.954" endtime="20200407 17:50:15.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.959" endtime="20200407 17:50:15.960"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.958" endtime="20200407 17:50:15.961"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.957" endtime="20200407 17:50:15.961"></status>
</kw>
<msg timestamp="20200407 17:50:15.961" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:50:15.956" endtime="20200407 17:50:15.962"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.962" endtime="20200407 17:50:15.963"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.532" endtime="20200407 17:50:15.963"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:15.965" endtime="20200407 17:50:16.365"></status>
</kw>
<msg timestamp="20200407 17:50:16.366" level="INFO">@{getExecution} = [ PASS | [{'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:50:15.964" endtime="20200407 17:50:16.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.369" level="INFO">---- &gt; ['PASS', [{'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.31', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:50:16.367" endtime="20200407 17:50:16.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:50:16.372" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:50:16.370" endtime="20200407 17:50:16.372"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:50:16.374" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:50:16.373" endtime="20200407 17:50:16.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.377" endtime="20200407 17:50:16.378"></status>
</kw>
<msg timestamp="20200407 17:50:16.378" level="INFO">@{getExecution} = [ PASS | [{'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:50:16.375" endtime="20200407 17:50:16.379"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:50:16.380" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:50:16.381" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:50:16.380" endtime="20200407 17:50:16.381"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:50:16.383" level="INFO">${lastExecution} = [{'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:50:16.382" endtime="20200407 17:50:16.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.386" endtime="20200407 17:50:16.387"></status>
</kw>
<msg timestamp="20200407 17:50:16.388" level="INFO">${idBuild} = 332620</msg>
<status status="PASS" starttime="20200407 17:50:16.384" endtime="20200407 17:50:16.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.392" level="INFO">----- &gt; ID of Build(137) : 332620</msg>
<status status="PASS" starttime="20200407 17:50:16.391" endtime="20200407 17:50:16.392"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.389" endtime="20200407 17:50:16.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:50:16.394" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:50:16.393" endtime="20200407 17:50:16.395"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:50:16.397" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:50:16.395" endtime="20200407 17:50:16.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:50:16.398" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:50:16.397" endtime="20200407 17:50:16.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.402" endtime="20200407 17:50:16.403"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.402" endtime="20200407 17:50:16.404"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.400" endtime="20200407 17:50:16.404"></status>
</kw>
<msg timestamp="20200407 17:50:16.404" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:50:16.399" endtime="20200407 17:50:16.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:50:16.406" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:50:16.405" endtime="20200407 17:50:16.406"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.964" endtime="20200407 17:50:16.407"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:15.532" endtime="20200407 17:50:16.407"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:50:16.408" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:50:16.408" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:50:16.407" endtime="20200407 17:50:16.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:50:16.410" level="INFO">${lastExecution} = {'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:50:16.409" endtime="20200407 17:50:16.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:50:16.411" level="INFO">-----&gt; Last execution : {'id': '332620', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:53:02', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8540', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.31', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:50:16.410" endtime="20200407 17:50:16.411"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:50:16.413" level="INFO">${lastExecutionID} = 332620</msg>
<status status="PASS" starttime="20200407 17:50:16.412" endtime="20200407 17:50:16.413"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.415" endtime="20200407 17:50:16.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:50:16.419" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:50:16.419" endtime="20200407 17:50:16.420"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:50:16.421" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:50:16.420" endtime="20200407 17:50:16.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:50:16.422" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:50:16.422" endtime="20200407 17:50:16.422"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:50:16.423" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:50:16.423" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:50:16.423" endtime="20200407 17:50:16.423"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:50:16.425" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:50:16.423" endtime="20200407 17:50:16.425"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.427" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:50:16.426" endtime="20200407 17:50:16.427"></status>
</kw>
<msg timestamp="20200407 17:50:16.428" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:50:16.426" endtime="20200407 17:50:16.428"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:50:16.430" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:50:16.428" endtime="20200407 17:50:16.430"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.430" endtime="20200407 17:50:16.430"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.426" endtime="20200407 17:50:16.432"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.433" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:50:16.432" endtime="20200407 17:50:16.433"></status>
</kw>
<msg timestamp="20200407 17:50:16.434" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:50:16.432" endtime="20200407 17:50:16.434"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:50:16.435" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:50:16.434" endtime="20200407 17:50:16.435"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.436" endtime="20200407 17:50:16.436"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.432" endtime="20200407 17:50:16.438"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.426" endtime="20200407 17:50:16.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.438" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:50:16.438" endtime="20200407 17:50:16.438"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:50:16.440" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:50:16.439" endtime="20200407 17:50:16.441"></status>
</kw>
<msg timestamp="20200407 17:50:16.441" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:50:16.439" endtime="20200407 17:50:16.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.443" endtime="20200407 17:50:16.443"></status>
</kw>
<msg timestamp="20200407 17:50:16.444" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:50:16.442" endtime="20200407 17:50:16.444"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.445" endtime="20200407 17:50:16.446"></status>
</kw>
<msg timestamp="20200407 17:50:16.446" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:50:16.444" endtime="20200407 17:50:16.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:50:16.448" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:50:16.447" endtime="20200407 17:50:16.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.449" endtime="20200407 17:50:16.450"></status>
</kw>
<msg timestamp="20200407 17:50:16.450" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:50:16.449" endtime="20200407 17:50:16.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:50:16.452" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:50:16.451" endtime="20200407 17:50:16.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.454" endtime="20200407 17:50:16.945"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.452" endtime="20200407 17:50:16.946"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.417" endtime="20200407 17:50:16.947"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.416" endtime="20200407 17:50:16.947"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.414" endtime="20200407 17:50:16.948"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.413" endtime="20200407 17:50:16.949"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:16.950" endtime="20200407 17:50:16.951"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:12.243" endtime="20200407 17:50:16.951"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:12.242" endtime="20200407 17:50:16.952"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:05.332" endtime="20200407 17:50:16.953"></status>
</kw>
<status status="PASS" starttime="20200407 17:49:56.871" endtime="20200407 17:50:16.954"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:48:40.296" endtime="20200407 17:50:16.954" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t9" name="JM70-900:Modify a rectangle annotation with the right rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:50:16.963" level="INFO">${tc_start} = 1586296216.962561</msg>
<status status="PASS" starttime="20200407 17:50:16.962" endtime="20200407 17:50:16.964"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:50:16.966" level="INFO">${tc_start} = 1586296216.962561</msg>
<status status="PASS" starttime="20200407 17:50:16.964" endtime="20200407 17:50:16.966"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.961" endtime="20200407 17:50:16.967"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:50:16.969" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:50:16.968" endtime="20200407 17:50:23.405"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:23.405" endtime="20200407 17:50:28.035"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:50:28.036" endtime="20200407 17:50:28.670"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.959" endtime="20200407 17:50:28.671"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:28.673" endtime="20200407 17:50:29.766"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:29.766" endtime="20200407 17:50:30.825"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:30.826" endtime="20200407 17:50:31.913"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:31.916" endtime="20200407 17:50:32.419"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:32.422" endtime="20200407 17:50:33.977"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:32.420" endtime="20200407 17:50:33.978"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:33.979" endtime="20200407 17:50:35.043"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:50:35.046" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:50:35.045" endtime="20200407 17:50:36.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:50:37.728" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:50:36.727" endtime="20200407 17:50:37.728"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:31.914" endtime="20200407 17:50:37.729"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:37.732" endtime="20200407 17:50:38.236"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:38.239" endtime="20200407 17:50:39.800"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:38.237" endtime="20200407 17:50:39.801"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:39.802" endtime="20200407 17:50:40.866"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:50:40.868" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:50:40.867" endtime="20200407 17:50:42.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:50:43.577" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:50:42.574" endtime="20200407 17:50:43.578"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:37.730" endtime="20200407 17:50:43.579"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:50:43.580" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:50:43.580" endtime="20200407 17:50:45.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:50:46.113" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:50:45.111" endtime="20200407 17:50:46.113"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:28.671" endtime="20200407 17:50:46.114"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:16.958" endtime="20200407 17:50:46.115"></status>
</kw>
<kw name="Draw a Rectangle annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a line annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:46.119" endtime="20200407 17:50:46.621"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:50:47.145" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:50:46.623" endtime="20200407 17:50:47.146"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:46.622" endtime="20200407 17:50:47.147"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:46.118" endtime="20200407 17:50:47.148"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:46.117" endtime="20200407 17:50:47.149"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:47.152" endtime="20200407 17:50:48.717"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:47.151" endtime="20200407 17:50:48.719"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:50:48.721" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:50:48.720" endtime="20200407 17:50:49.807"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:47.149" endtime="20200407 17:50:49.809"></status>
</kw>
<kw name="Click On Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Click on rectangle annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:49.812" endtime="20200407 17:50:50.867"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:49.811" endtime="20200407 17:50:50.868"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200407 17:50:50.870" level="INFO">Clicking element 'xpath://div[@id='rectangle_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200407 17:50:50.869" endtime="20200407 17:50:51.994"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:49.810" endtime="20200407 17:50:51.995"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Rectangle</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:51.997" endtime="20200407 17:50:53.557"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:51.996" endtime="20200407 17:50:53.558"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:50:54.601" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Rectangle'.</msg>
<status status="PASS" starttime="20200407 17:50:53.560" endtime="20200407 17:50:54.602"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:53.559" endtime="20200407 17:50:54.603"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:51.995" endtime="20200407 17:50:54.603"></status>
</kw>
<kw name="Draw With Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Draw a Rectangle Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:54.608" endtime="20200407 17:50:56.173"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:54.607" endtime="20200407 17:50:56.173"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:50:56.175" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:50:56.174" endtime="20200407 17:50:57.783"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:54.606" endtime="20200407 17:50:57.784"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:50:57.788" endtime="20200407 17:50:59.340"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:57.787" endtime="20200407 17:50:59.341"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:50:59.343" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200407 17:50:59.342" endtime="20200407 17:51:00.929"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:57.785" endtime="20200407 17:51:00.930"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:02.505"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:02.505"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:51:02.505" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:51:02.505" endtime="20200407 17:51:04.146"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:04.146"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:04.146"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:04.146" endtime="20200407 17:51:05.707"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:04.146" endtime="20200407 17:51:05.707"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:51:05.707" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200407 17:51:05.707" endtime="20200407 17:51:07.303"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:04.146" endtime="20200407 17:51:07.304"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:04.146" endtime="20200407 17:51:07.304"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:07.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:51:08.313" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:51:07.305" endtime="20200407 17:51:08.313"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:00.931" endtime="20200407 17:51:08.313"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:54.604" endtime="20200407 17:51:08.313"></status>
</kw>
<status status="PASS" starttime="20200407 17:50:46.116" endtime="20200407 17:51:08.313"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:08.313" endtime="20200407 17:51:09.392"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:08.313" endtime="20200407 17:51:09.392"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:51:09.392" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:51:09.392" endtime="20200407 17:51:10.551"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:08.313" endtime="20200407 17:51:10.551"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>0</arg>
<arg>-20</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:10.551" endtime="20200407 17:51:12.138"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:10.551" endtime="20200407 17:51:12.138"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:51:12.138" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=-20.</msg>
<status status="PASS" starttime="20200407 17:51:12.138" endtime="20200407 17:51:13.730"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:10.551" endtime="20200407 17:51:13.730"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:10.551" endtime="20200407 17:51:13.730"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:13.731" endtime="20200407 17:51:14.794"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:13.731" endtime="20200407 17:51:14.794"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:15.869" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:51:14.794" endtime="20200407 17:51:15.869"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:14.794" endtime="20200407 17:51:15.869"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:13.731" endtime="20200407 17:51:15.869"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Right">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:15.869" endtime="20200407 17:51:15.869"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:15.869" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:15.869" endtime="20200407 17:51:16.985"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:15.869" endtime="20200407 17:51:16.985"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:16.985" endtime="20200407 17:51:16.985"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:16.985" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:16.985" endtime="20200407 17:51:18.050"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:16.985" endtime="20200407 17:51:18.050"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:18.050" endtime="20200407 17:51:18.051"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:18.051" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:18.051" endtime="20200407 17:51:19.134"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:18.050" endtime="20200407 17:51:19.134"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:19.136" endtime="20200407 17:51:19.137"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:19.137" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:19.137" endtime="20200407 17:51:20.227"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:19.134" endtime="20200407 17:51:20.227"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:20.228" endtime="20200407 17:51:20.229"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:20.229" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:20.229" endtime="20200407 17:51:21.301"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:20.228" endtime="20200407 17:51:21.301"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:21.302" endtime="20200407 17:51:21.302"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:21.303" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:21.302" endtime="20200407 17:51:22.388"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:21.301" endtime="20200407 17:51:22.388"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:22.389" endtime="20200407 17:51:22.390"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:22.390" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:22.390" endtime="20200407 17:51:23.460"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:22.389" endtime="20200407 17:51:23.460"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:23.461" endtime="20200407 17:51:23.462"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:23.464" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:23.463" endtime="20200407 17:51:24.532"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:23.460" endtime="20200407 17:51:24.532"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:24.533" endtime="20200407 17:51:24.535"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:24.536" level="INFO">Clicking element 'xpath://div[@name='rotateRight']'.</msg>
<status status="PASS" starttime="20200407 17:51:24.535" endtime="20200407 17:51:25.599"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:24.533" endtime="20200407 17:51:25.599"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:15.869" endtime="20200407 17:51:25.599"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:15.869" endtime="20200407 17:51:25.599"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:25.599" endtime="20200407 17:51:26.676"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:25.599" endtime="20200407 17:51:26.676"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:51:26.677" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:51:26.676" endtime="20200407 17:51:27.795"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:25.599" endtime="20200407 17:51:27.795"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:27.798" endtime="20200407 17:51:28.846"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:27.797" endtime="20200407 17:51:28.846"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:51:28.846" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:51:28.846" endtime="20200407 17:51:29.949"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:27.796" endtime="20200407 17:51:29.949"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>23</arg>
<arg>-90</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:29.952" endtime="20200407 17:51:31.503"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:29.952" endtime="20200407 17:51:31.503"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:51:31.503" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=23, y=-90.</msg>
<status status="PASS" starttime="20200407 17:51:31.503" endtime="20200407 17:51:33.117"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:29.952" endtime="20200407 17:51:33.117"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:29.949" endtime="20200407 17:51:33.117"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:33.117" endtime="20200407 17:51:34.183"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:33.117" endtime="20200407 17:51:34.183"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200407 17:51:35.254" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:51:34.183" endtime="20200407 17:51:35.254"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:34.183" endtime="20200407 17:51:35.255"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:33.117" endtime="20200407 17:51:35.255"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:35.260" endtime="20200407 17:51:36.311"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:35.259" endtime="20200407 17:51:36.312"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:51:36.314" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:51:36.313" endtime="20200407 17:51:37.410"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:35.257" endtime="20200407 17:51:37.411"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:37.414" endtime="20200407 17:51:38.941"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:37.411" endtime="20200407 17:51:38.942"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:38.947" endtime="20200407 17:51:40.527"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:51:40.527" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:51:40.527" endtime="20200407 17:51:41.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:51:42.680" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:51:41.674" endtime="20200407 17:51:42.680"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:38.944" endtime="20200407 17:51:42.681"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:42.681" endtime="20200407 17:51:44.284"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:51:44.286" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:51:44.286" endtime="20200407 17:51:45.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:51:47.567" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:51:45.561" endtime="20200407 17:51:47.567"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:38.944" endtime="20200407 17:51:47.567"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:51:47.567" endtime="20200407 17:51:50.167"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:51:50.168" level="INFO">${tc_end} = 1586296310.167643</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:51:50.168" level="INFO">${tc_duration} = 93.20508217811584</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:51:50.168" level="INFO">${tc_duration} = 1.5534180363019308</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<msg timestamp="20200407 17:51:50.168" level="INFO">${duration} = 1.5534180363019308</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:51:50.168" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<msg timestamp="20200407 17:51:50.168" level="INFO">${ElapsedTime} = 1.5534180363019308</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:50.168" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:51:50.168" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:51:50.168" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:51:50.168" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:51:50.168" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:51:50.168" endtime="20200407 17:51:50.168"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:51:50.183" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:50.183" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:51:50.183" level="INFO">JM70-900:Modify a rectangle annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">@{listeTestName} = [ JM70-900 | Modify a rectangle annotation with the right rotation ]</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:51:50.183" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:51:50.183" level="INFO">${tesCaseName} = Modify a rectangle annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:51:50.183" level="INFO">Modify a rectangle annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:50.183" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:51:50.183" endtime="20200407 17:51:50.183"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:50.200" endtime="20200407 17:51:52.263"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:52.264" endtime="20200407 17:51:52.264"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:52.264" endtime="20200407 17:51:52.335"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:51:52.399" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1612507337, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:51:52.335" endtime="20200407 17:51:52.399"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:51:52.399" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1612507337, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:51:52.399" endtime="20200407 17:51:52.399"></status>
</kw>
<msg timestamp="20200407 17:51:52.399" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1612507337, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:51:50.200" endtime="20200407 17:51:52.399"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:51:52.399" level="INFO">${getSessionID} = 1612507337</msg>
<status status="PASS" starttime="20200407 17:51:52.399" endtime="20200407 17:51:52.399"></status>
</kw>
<msg timestamp="20200407 17:51:52.399" level="INFO">${SESSIONID} = 1612507337</msg>
<status status="PASS" starttime="20200407 17:51:52.399" endtime="20200407 17:51:52.399"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:51:52.399" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:52.399" endtime="20200407 17:51:52.399"></status>
</kw>
<msg timestamp="20200407 17:51:52.414" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:52.399" endtime="20200407 17:51:52.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:51:52.414" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:52.414" endtime="20200407 17:51:52.414"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:52.414" endtime="20200407 17:51:54.468"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:54.468" endtime="20200407 17:51:54.520"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:54.520" endtime="20200407 17:51:54.568"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:52.414" endtime="20200407 17:51:54.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:54.568" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:54.568" endtime="20200407 17:51:54.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:51:54.584" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:51:54.584" endtime="20200407 17:51:54.584"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:51:55.458" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:51:54.586" endtime="20200407 17:51:55.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:55.458" endtime="20200407 17:51:56.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:51:56.025" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:51:56.024" endtime="20200407 17:51:56.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:56.025" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:56.025" endtime="20200407 17:51:56.025"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:54.568" endtime="20200407 17:51:56.025"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:51:56.510" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:51:56.025" endtime="20200407 17:51:56.510"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:51:56.511" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:51:56.511" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:51:56.511" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:51:56.511" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:51:56.511" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:51:56.511" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:56.511" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.511"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:51:56.895" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:51:56.511" endtime="20200407 17:51:56.895"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:51:56.896" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:51:56.896" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:51:56.896" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:51:56.896" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:51:56.896" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:51:56.896" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:56.896" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:56.896"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:51:57.240" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:51:56.896" endtime="20200407 17:51:57.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.241" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:51:57.241" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:51:57.241" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:51:57.241" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:51:57.241" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<msg timestamp="20200407 17:51:57.241" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.241" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:51:57.241" endtime="20200407 17:51:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:57.257" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:57.257" endtime="20200407 17:51:57.258"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:51:57.656" level="INFO">@{testCases} = [ {'id': '8541', 'name': 'Modify a rectangle annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '900'} ]</msg>
<status status="PASS" starttime="20200407 17:51:57.258" endtime="20200407 17:51:57.656"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:51:57.657" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:51:57.657" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.657" level="INFO">{'id': '8541', 'name': 'Modify a rectangle annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '900'}</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<msg timestamp="20200407 17:51:57.657" level="INFO">${testCase} = {'id': '8541', 'name': 'Modify a rectangle annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '900'}</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:51:57.657" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.657" level="INFO">{'id': '8541', 'name': 'Modify a rectangle annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '900'}</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:51:57.657" level="INFO">${testCaseNAME} = Modify a rectangle annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:51:57.657" level="INFO">${testCaseID} = 8541</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:51:57.657" level="INFO">${testCaseExternalID} = 900</msg>
<status status="PASS" starttime="20200407 17:51:57.657" endtime="20200407 17:51:57.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:51:57.673" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.673"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:51:57.673" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.673"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:51:57.673" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.673"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.982"></status>
</kw>
<msg timestamp="20200407 17:51:57.982" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.982" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:51:57.982" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:51:57.982" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<msg timestamp="20200407 17:51:57.982" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:51:57.982" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:51:57.982" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:51:57.982" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<msg timestamp="20200407 17:51:57.982" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:51:57.982" endtime="20200407 17:51:57.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:51:57.997" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:51:57.997" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:51:57.997" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:51:57.997" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<msg timestamp="20200407 17:51:57.997" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:57.997"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:57.997"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:58.333"></status>
</kw>
<msg timestamp="20200407 17:51:58.334" level="INFO">@{getExecution} = [ PASS | [{'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:58.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.335" level="INFO">---- &gt; ['PASS', [{'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.38', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:51:58.335" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:51:58.335" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<msg timestamp="20200407 17:51:58.335" level="INFO">@{getExecution} = [ PASS | [{'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:51:58.335" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:51:58.335" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:51:58.335" level="INFO">${lastExecution} = [{'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<msg timestamp="20200407 17:51:58.335" level="INFO">${idBuild} = 332623</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.335" level="INFO">----- &gt; ID of Build(137) : 332623</msg>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.335" endtime="20200407 17:51:58.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:51:58.350" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:51:58.350" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:51:58.350" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<msg timestamp="20200407 17:51:58.350" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:51:58.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.997" endtime="20200407 17:51:58.350"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:57.673" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:51:58.350" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:51:58.350" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:51:58.350" level="INFO">${lastExecution} = {'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:51:58.350" level="INFO">-----&gt; Last execution : {'id': '332623', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:54:28', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8542', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.38', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:51:58.350" endtime="20200407 17:51:58.366"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">${lastExecutionID} = 332623</msg>
<status status="PASS" starttime="20200407 17:51:58.367" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:51:58.368" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:51:58.368" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.368" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<msg timestamp="20200407 17:51:58.368" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.368"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:51:58.383" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.383" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<msg timestamp="20200407 17:51:58.383" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:51:58.383" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.383" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:51:58.383" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<msg timestamp="20200407 17:51:58.383" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<msg timestamp="20200407 17:51:58.383" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:51:58.383" endtime="20200407 17:51:58.383"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<msg timestamp="20200407 17:51:58.399" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:51:58.399" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<msg timestamp="20200407 17:51:58.399" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:51:58.399" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.399" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.368" endtime="20200407 17:51:58.699"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:54.568" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:54.568" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:47.567" endtime="20200407 17:51:58.699"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:38.943" endtime="20200407 17:51:58.699"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:50:16.956" endtime="20200407 17:51:58.699" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t10" name="JM70-901:Modify a polygon annotation with the right rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:51:58.699" level="INFO">${tc_start} = 1586296318.699017</msg>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:51:58.699"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:51:58.715" level="INFO">${tc_start} = 1586296318.699017</msg>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:51:58.715"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:51:58.715"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:51:58.715" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:51:58.715" endtime="20200407 17:52:05.312"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:05.313" endtime="20200407 17:52:09.935"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:52:09.935" endtime="20200407 17:52:10.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:52:10.549"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:10.550" endtime="20200407 17:52:11.584"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:11.584" endtime="20200407 17:52:12.613"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:12.614" endtime="20200407 17:52:13.720"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:13.722" endtime="20200407 17:52:14.227"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:14.230" endtime="20200407 17:52:15.796"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:14.229" endtime="20200407 17:52:15.796"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:15.797" endtime="20200407 17:52:16.833"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:52:16.835" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:52:16.834" endtime="20200407 17:52:18.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:52:19.493" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:52:18.492" endtime="20200407 17:52:19.494"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:13.722" endtime="20200407 17:52:19.494"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:19.497" endtime="20200407 17:52:20.001"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:20.004" endtime="20200407 17:52:21.571"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:20.002" endtime="20200407 17:52:21.571"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:21.572" endtime="20200407 17:52:22.639"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:52:22.641" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:52:22.640" endtime="20200407 17:52:24.296"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:52:25.300" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:52:24.297" endtime="20200407 17:52:25.300"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:19.495" endtime="20200407 17:52:25.301"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:52:25.303" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:52:25.302" endtime="20200407 17:52:32.097"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:52:33.100" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:52:32.097" endtime="20200407 17:52:33.101"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:10.549" endtime="20200407 17:52:33.102"></status>
</kw>
<status status="PASS" starttime="20200407 17:51:58.699" endtime="20200407 17:52:33.103"></status>
</kw>
<kw name="Draw a Polygon annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a polygon annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:33.106" endtime="20200407 17:52:33.610"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:52:34.144" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:52:33.612" endtime="20200407 17:52:34.144"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:33.610" endtime="20200407 17:52:34.144"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:33.105" endtime="20200407 17:52:34.145"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:33.105" endtime="20200407 17:52:34.146"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:34.149" endtime="20200407 17:52:35.726"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:34.148" endtime="20200407 17:52:35.727"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:52:35.729" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:52:35.728" endtime="20200407 17:52:41.887"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:34.148" endtime="20200407 17:52:41.888"></status>
</kw>
<kw name="Click On Polygon Annotation" library="CommonAnnotationWeb">
<doc>Click on polygon annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200407 17:52:45.410" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200407 17:52:44.417" endtime="20200407 17:52:45.412"></status>
</kw>
<msg timestamp="20200407 17:52:45.413" level="FAIL">Element 'xpath://div[@id='polygon_FreeDrawingTrigger']' not visible after 2 seconds.</msg>
<status status="FAIL" starttime="20200407 17:52:41.893" endtime="20200407 17:52:45.414"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200407 17:52:50.058" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200407 17:52:48.887" endtime="20200407 17:52:50.058"></status>
</kw>
<msg timestamp="20200407 17:52:50.060" level="FAIL">Element 'xpath://div[@id='polygon_FreeDrawingTrigger']' not visible after 2 seconds.</msg>
<status status="FAIL" starttime="20200407 17:52:46.416" endtime="20200407 17:52:50.060"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='polygon_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200407 17:52:54.571" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200407 17:52:53.541" endtime="20200407 17:52:54.572"></status>
</kw>
<msg timestamp="20200407 17:52:54.574" level="FAIL">Element 'xpath://div[@id='polygon_FreeDrawingTrigger']' not visible after 2 seconds.</msg>
<status status="FAIL" starttime="20200407 17:52:51.060" endtime="20200407 17:52:54.574"></status>
</kw>
<msg timestamp="20200407 17:52:54.575" level="FAIL">Keyword 'Wait Until Element Is Visible' failed after retrying for 10 seconds. The last error was: Element 'xpath://div[@id='polygon_FreeDrawingTrigger']' not visible after 2 seconds.</msg>
<status status="FAIL" starttime="20200407 17:52:41.891" endtime="20200407 17:52:54.575"></status>
</kw>
<status status="FAIL" starttime="20200407 17:52:41.889" endtime="20200407 17:52:54.576"></status>
</kw>
<status status="FAIL" starttime="20200407 17:52:33.104" endtime="20200407 17:52:54.576"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:52:54.580" endtime="20200407 17:52:56.186"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:52:56.187" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:52:56.187" endtime="20200407 17:53:02.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:53:03.358" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:53:02.356" endtime="20200407 17:53:03.358"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:54.579" endtime="20200407 17:53:03.358"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:03.360" endtime="20200407 17:53:04.931"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:53:04.934" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:53:04.932" endtime="20200407 17:53:11.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:53:13.437" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:53:11.436" endtime="20200407 17:53:13.437"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:54.578" endtime="20200407 17:53:13.439"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:53:13.442" endtime="20200407 17:53:15.998"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:53:16.004" level="INFO">${tc_end} = 1586296396.00382</msg>
<status status="PASS" starttime="20200407 17:53:16.003" endtime="20200407 17:53:16.004"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:53:16.007" level="INFO">${tc_duration} = 77.30480289459229</msg>
<status status="PASS" starttime="20200407 17:53:16.005" endtime="20200407 17:53:16.007"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:53:16.009" level="INFO">${tc_duration} = 1.2884133815765382</msg>
<status status="PASS" starttime="20200407 17:53:16.008" endtime="20200407 17:53:16.010"></status>
</kw>
<msg timestamp="20200407 17:53:16.010" level="INFO">${duration} = 1.2884133815765382</msg>
<status status="PASS" starttime="20200407 17:53:16.001" endtime="20200407 17:53:16.011"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:53:16.013" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:53:16.012" endtime="20200407 17:53:16.013"></status>
</kw>
<msg timestamp="20200407 17:53:16.014" level="INFO">${ElapsedTime} = 1.2884133815765382</msg>
<status status="PASS" starttime="20200407 17:53:15.999" endtime="20200407 17:53:16.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:16.016" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:53:16.015" endtime="20200407 17:53:16.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:53:16.018" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:53:16.017" endtime="20200407 17:53:16.019"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:53:16.021" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:53:16.019" endtime="20200407 17:53:16.021"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:53:16.023" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:53:16.023" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:53:16.022" endtime="20200407 17:53:16.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:53:16.026" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:53:16.024" endtime="20200407 17:53:16.026"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:53:16.028" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:53:16.027" endtime="20200407 17:53:16.028"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:53:16.029" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:53:16.029" endtime="20200407 17:53:16.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:53:16.031" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:53:16.030" endtime="20200407 17:53:16.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:16.032" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:53:16.032" endtime="20200407 17:53:16.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:53:16.034" level="INFO">JM70-901:Modify a polygon annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:53:16.033" endtime="20200407 17:53:16.034"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:53:16.035" level="INFO">@{listeTestName} = [ JM70-901 | Modify a polygon annotation with the right rotation ]</msg>
<status status="PASS" starttime="20200407 17:53:16.034" endtime="20200407 17:53:16.035"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:53:16.036" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:53:16.036" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:53:16.036" endtime="20200407 17:53:16.037"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:53:16.038" level="INFO">${tesCaseName} = Modify a polygon annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:53:16.037" endtime="20200407 17:53:16.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:53:16.039" level="INFO">Modify a polygon annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:53:16.039" endtime="20200407 17:53:16.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:16.040" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:53:16.040" endtime="20200407 17:53:16.041"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:16.044" endtime="20200407 17:53:18.068"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:18.068" endtime="20200407 17:53:18.069"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:18.069" endtime="20200407 17:53:18.095"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:53:18.119" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 359129291, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:53:18.095" endtime="20200407 17:53:18.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:53:18.119" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 359129291, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:53:18.119" endtime="20200407 17:53:18.120"></status>
</kw>
<msg timestamp="20200407 17:53:18.120" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 359129291, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:53:16.043" endtime="20200407 17:53:18.120"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:53:18.121" level="INFO">${getSessionID} = 359129291</msg>
<status status="PASS" starttime="20200407 17:53:18.121" endtime="20200407 17:53:18.121"></status>
</kw>
<msg timestamp="20200407 17:53:18.121" level="INFO">${SESSIONID} = 359129291</msg>
<status status="PASS" starttime="20200407 17:53:18.120" endtime="20200407 17:53:18.121"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:53:18.122" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:18.122" endtime="20200407 17:53:18.123"></status>
</kw>
<msg timestamp="20200407 17:53:18.123" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:18.122" endtime="20200407 17:53:18.123"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:53:18.123" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:18.123" endtime="20200407 17:53:18.123"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:18.124" endtime="20200407 17:53:20.144"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:20.145" endtime="20200407 17:53:20.206"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:20.206" endtime="20200407 17:53:20.254"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:18.124" endtime="20200407 17:53:20.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:20.256" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:20.255" endtime="20200407 17:53:20.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:53:20.260" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:53:20.260" endtime="20200407 17:53:20.260"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:53:22.055" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:53:20.261" endtime="20200407 17:53:22.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:22.056" endtime="20200407 17:53:22.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:53:22.692" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:53:22.690" endtime="20200407 17:53:22.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:22.694" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:22.694" endtime="20200407 17:53:22.695"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:20.259" endtime="20200407 17:53:22.696"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:53:23.170" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:53:22.697" endtime="20200407 17:53:23.170"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:53:23.171" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:53:23.172" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:53:23.171" endtime="20200407 17:53:23.172"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:53:23.173" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:53:23.172" endtime="20200407 17:53:23.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:53:23.175" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:53:23.174" endtime="20200407 17:53:23.175"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:53:23.176" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:53:23.175" endtime="20200407 17:53:23.176"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:53:23.178" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:53:23.177" endtime="20200407 17:53:23.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:23.179" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:23.178" endtime="20200407 17:53:23.179"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:53:23.530" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:53:23.180" endtime="20200407 17:53:23.531"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:53:23.532" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:53:23.533" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:53:23.531" endtime="20200407 17:53:23.533"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:53:23.535" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:53:23.534" endtime="20200407 17:53:23.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:53:23.537" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:53:23.537" endtime="20200407 17:53:23.538"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:53:23.540" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:53:23.539" endtime="20200407 17:53:23.540"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:53:23.542" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:53:23.541" endtime="20200407 17:53:23.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:23.544" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:23.543" endtime="20200407 17:53:23.545"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:53:23.867" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:53:23.545" endtime="20200407 17:53:23.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:53:23.869" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:53:23.868" endtime="20200407 17:53:23.870"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:53:23.872" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:53:23.873" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:53:23.871" endtime="20200407 17:53:23.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:53:23.875" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:53:23.874" endtime="20200407 17:53:23.875"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:53:23.877" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:23.876" endtime="20200407 17:53:23.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:23.880" endtime="20200407 17:53:23.881"></status>
</kw>
<msg timestamp="20200407 17:53:23.882" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:23.879" endtime="20200407 17:53:23.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:53:23.884" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:53:23.883" endtime="20200407 17:53:23.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:23.886" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:23.885" endtime="20200407 17:53:23.886"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:53:24.653" level="INFO">@{testCases} = [ {'id': '8543', 'name': 'Modify a polygon annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '901'} ]</msg>
<status status="PASS" starttime="20200407 17:53:23.887" endtime="20200407 17:53:24.654"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:53:24.656" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:53:24.657" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:53:24.655" endtime="20200407 17:53:24.657"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:53:24.660" level="INFO">{'id': '8543', 'name': 'Modify a polygon annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '901'}</msg>
<status status="PASS" starttime="20200407 17:53:24.658" endtime="20200407 17:53:24.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:24.663" endtime="20200407 17:53:24.664"></status>
</kw>
<msg timestamp="20200407 17:53:24.665" level="INFO">${testCase} = {'id': '8543', 'name': 'Modify a polygon annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '901'}</msg>
<status status="PASS" starttime="20200407 17:53:24.661" endtime="20200407 17:53:24.665"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:53:24.668" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:53:24.666" endtime="20200407 17:53:24.668"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:24.658" endtime="20200407 17:53:24.669"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:24.657" endtime="20200407 17:53:24.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:53:24.671" level="INFO">{'id': '8543', 'name': 'Modify a polygon annotation with the right rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '901'}</msg>
<status status="PASS" starttime="20200407 17:53:24.670" endtime="20200407 17:53:24.672"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:53:24.674" level="INFO">${testCaseNAME} = Modify a polygon annotation with the right rotation</msg>
<status status="PASS" starttime="20200407 17:53:24.672" endtime="20200407 17:53:24.674"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:53:24.676" level="INFO">${testCaseID} = 8543</msg>
<status status="PASS" starttime="20200407 17:53:24.675" endtime="20200407 17:53:24.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:53:24.679" level="INFO">${testCaseExternalID} = 901</msg>
<status status="PASS" starttime="20200407 17:53:24.677" endtime="20200407 17:53:24.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:53:24.680" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:53:24.679" endtime="20200407 17:53:24.681"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:53:24.682" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:53:24.681" endtime="20200407 17:53:24.683"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:53:24.684" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:53:24.683" endtime="20200407 17:53:24.684"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:24.686" endtime="20200407 17:53:25.061"></status>
</kw>
<msg timestamp="20200407 17:53:25.062" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:53:24.686" endtime="20200407 17:53:25.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.064" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:53:25.062" endtime="20200407 17:53:25.064"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:53:25.065" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:53:25.064" endtime="20200407 17:53:25.065"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:53:25.067" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:53:25.066" endtime="20200407 17:53:25.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.069" endtime="20200407 17:53:25.070"></status>
</kw>
<msg timestamp="20200407 17:53:25.070" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:53:25.068" endtime="20200407 17:53:25.070"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:53:25.071" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:53:25.072" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:53:25.070" endtime="20200407 17:53:25.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:53:25.073" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:53:25.073" endtime="20200407 17:53:25.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.075" endtime="20200407 17:53:25.076"></status>
</kw>
<msg timestamp="20200407 17:53:25.076" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:53:25.074" endtime="20200407 17:53:25.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.079" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:53:25.078" endtime="20200407 17:53:25.079"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.077" endtime="20200407 17:53:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:53:25.081" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:53:25.080" endtime="20200407 17:53:25.081"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:53:25.082" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:53:25.081" endtime="20200407 17:53:25.082"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:53:25.084" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:53:25.083" endtime="20200407 17:53:25.084"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.087" endtime="20200407 17:53:25.088"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.086" endtime="20200407 17:53:25.088"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.085" endtime="20200407 17:53:25.089"></status>
</kw>
<msg timestamp="20200407 17:53:25.089" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:53:25.084" endtime="20200407 17:53:25.089"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.089" endtime="20200407 17:53:25.090"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:24.685" endtime="20200407 17:53:25.090"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.092" endtime="20200407 17:53:25.399"></status>
</kw>
<msg timestamp="20200407 17:53:25.400" level="INFO">@{getExecution} = [ PASS | [{'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:53:25.091" endtime="20200407 17:53:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.402" level="INFO">---- &gt; ['PASS', [{'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:53:25.401" endtime="20200407 17:53:25.403"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:53:25.405" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:53:25.403" endtime="20200407 17:53:25.405"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:53:25.407" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:53:25.406" endtime="20200407 17:53:25.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.410" endtime="20200407 17:53:25.411"></status>
</kw>
<msg timestamp="20200407 17:53:25.411" level="INFO">@{getExecution} = [ PASS | [{'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:53:25.408" endtime="20200407 17:53:25.412"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:53:25.413" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:53:25.414" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:53:25.413" endtime="20200407 17:53:25.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:53:25.417" level="INFO">${lastExecution} = [{'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:53:25.415" endtime="20200407 17:53:25.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.419" endtime="20200407 17:53:25.421"></status>
</kw>
<msg timestamp="20200407 17:53:25.421" level="INFO">${idBuild} = 332626</msg>
<status status="PASS" starttime="20200407 17:53:25.418" endtime="20200407 17:53:25.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.425" level="INFO">----- &gt; ID of Build(137) : 332626</msg>
<status status="PASS" starttime="20200407 17:53:25.424" endtime="20200407 17:53:25.425"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.422" endtime="20200407 17:53:25.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:53:25.427" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:53:25.427" endtime="20200407 17:53:25.428"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:53:25.430" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:53:25.429" endtime="20200407 17:53:25.430"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:53:25.431" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:53:25.430" endtime="20200407 17:53:25.432"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.435" endtime="20200407 17:53:25.436"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.434" endtime="20200407 17:53:25.437"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.433" endtime="20200407 17:53:25.437"></status>
</kw>
<msg timestamp="20200407 17:53:25.437" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:53:25.432" endtime="20200407 17:53:25.437"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:53:25.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:53:25.438" endtime="20200407 17:53:25.439"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.091" endtime="20200407 17:53:25.440"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:24.684" endtime="20200407 17:53:25.440"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:53:25.441" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:53:25.441" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:53:25.440" endtime="20200407 17:53:25.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:53:25.443" level="INFO">${lastExecution} = {'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:53:25.442" endtime="20200407 17:53:25.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:53:25.444" level="INFO">-----&gt; Last execution : {'id': '332626', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:55:59', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8544', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:53:25.443" endtime="20200407 17:53:25.444"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:53:25.446" level="INFO">${lastExecutionID} = 332626</msg>
<status status="PASS" starttime="20200407 17:53:25.445" endtime="20200407 17:53:25.446"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.446" endtime="20200407 17:53:25.447"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Failed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Failed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.449" endtime="20200407 17:53:25.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Failed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Failed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:53:25.453" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:53:25.453" endtime="20200407 17:53:25.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:53:25.455" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:53:25.454" endtime="20200407 17:53:25.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:53:25.456" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:53:25.455" endtime="20200407 17:53:25.456"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:53:25.457" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:53:25.458" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:53:25.457" endtime="20200407 17:53:25.458"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:53:25.459" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:53:25.458" endtime="20200407 17:53:25.459"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.462" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:53:25.461" endtime="20200407 17:53:25.462"></status>
</kw>
<msg timestamp="20200407 17:53:25.463" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:53:25.460" endtime="20200407 17:53:25.463"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:53:25.464" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:53:25.463" endtime="20200407 17:53:25.464"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.465" endtime="20200407 17:53:25.465"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.460" endtime="20200407 17:53:25.465"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.468" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:53:25.467" endtime="20200407 17:53:25.468"></status>
</kw>
<msg timestamp="20200407 17:53:25.469" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:53:25.466" endtime="20200407 17:53:25.469"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:53:25.470" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:53:25.469" endtime="20200407 17:53:25.470"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.471" endtime="20200407 17:53:25.471"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.466" endtime="20200407 17:53:25.472"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.459" endtime="20200407 17:53:25.472"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.472" endtime="20200407 17:53:25.473"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:53:25.475" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:53:25.474" endtime="20200407 17:53:25.475"></status>
</kw>
<msg timestamp="20200407 17:53:25.476" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:53:25.474" endtime="20200407 17:53:25.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.478" endtime="20200407 17:53:25.478"></status>
</kw>
<msg timestamp="20200407 17:53:25.478" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:53:25.477" endtime="20200407 17:53:25.479"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.480" endtime="20200407 17:53:25.481"></status>
</kw>
<msg timestamp="20200407 17:53:25.481" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:53:25.479" endtime="20200407 17:53:25.481"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST FAILED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:53:25.482" level="INFO">${notesFinal} = AUTOMATED TEST FAILED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:53:25.482" endtime="20200407 17:53:25.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.484" endtime="20200407 17:53:25.485"></status>
</kw>
<msg timestamp="20200407 17:53:25.485" level="INFO">${notesFinal} = AUTOMATED TEST FAILED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:53:25.483" endtime="20200407 17:53:25.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:53:25.487" level="INFO">${notesFinal} = AUTOMATED TEST FAILED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:53:25.486" endtime="20200407 17:53:25.487"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:25.487" endtime="20200407 17:53:25.770"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.451" endtime="20200407 17:53:25.770"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.451" endtime="20200407 17:53:25.771"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.448" endtime="20200407 17:53:25.772"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.447" endtime="20200407 17:53:25.772"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:20.257" endtime="20200407 17:53:25.773"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:20.257" endtime="20200407 17:53:25.774"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:13.440" endtime="20200407 17:53:25.774"></status>
</kw>
<status status="PASS" starttime="20200407 17:52:54.577" endtime="20200407 17:53:25.775"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="FAIL" starttime="20200407 17:51:58.699" endtime="20200407 17:53:25.776" critical="yes">Keyword 'Wait Until Element Is Visible' failed after retrying for 10 seconds. The last error was: Element 'xpath://div[@id='polygon_FreeDrawingTrigger']' not visible after 2 seconds.</status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t11" name="JM70-902:Modify a freehand annotation with the left rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:53:25.784" level="INFO">${tc_start} = 1586296405.784278</msg>
<status status="PASS" starttime="20200407 17:53:25.784" endtime="20200407 17:53:25.785"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:53:25.786" level="INFO">${tc_start} = 1586296405.784278</msg>
<status status="PASS" starttime="20200407 17:53:25.785" endtime="20200407 17:53:25.787"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.783" endtime="20200407 17:53:25.787"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:53:25.788" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:53:25.787" endtime="20200407 17:53:32.110"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:32.111" endtime="20200407 17:53:36.756"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:53:36.757" endtime="20200407 17:53:37.393"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.782" endtime="20200407 17:53:37.394"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:37.397" endtime="20200407 17:53:38.447"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:38.448" endtime="20200407 17:53:39.507"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:39.507" endtime="20200407 17:53:40.579"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:40.582" endtime="20200407 17:53:41.085"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:41.087" endtime="20200407 17:53:42.648"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:41.086" endtime="20200407 17:53:42.649"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:42.650" endtime="20200407 17:53:43.701"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:53:43.702" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:53:43.702" endtime="20200407 17:53:45.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:53:46.396" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:53:45.395" endtime="20200407 17:53:46.397"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:40.580" endtime="20200407 17:53:46.398"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:46.400" endtime="20200407 17:53:46.905"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:46.908" endtime="20200407 17:53:48.470"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:46.906" endtime="20200407 17:53:48.471"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:48.472" endtime="20200407 17:53:49.538"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:53:49.540" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:53:49.539" endtime="20200407 17:53:51.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:53:52.251" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:53:51.248" endtime="20200407 17:53:52.252"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:46.398" endtime="20200407 17:53:52.253"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:53:52.254" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:53:52.254" endtime="20200407 17:53:53.964"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:53:54.967" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:53:53.965" endtime="20200407 17:53:54.967"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:37.395" endtime="20200407 17:53:54.967"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:25.781" endtime="20200407 17:53:54.967"></status>
</kw>
<kw name="Draw a Freehand Annotation With Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a freehand annotation</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:54.969" endtime="20200407 17:53:55.470"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:53:55.996" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:53:55.473" endtime="20200407 17:53:55.996"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:55.471" endtime="20200407 17:53:55.996"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:54.968" endtime="20200407 17:53:55.997"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:54.968" endtime="20200407 17:53:55.998"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:56.002" endtime="20200407 17:53:57.553"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:56.001" endtime="20200407 17:53:57.554"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:53:57.556" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:53:57.555" endtime="20200407 17:53:58.678"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:55.999" endtime="20200407 17:53:58.679"></status>
</kw>
<kw name="Click On Freehand Annotation" library="CommonAnnotationWeb">
<doc>Click on freehand annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:53:58.684" endtime="20200407 17:54:00.255"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:58.682" endtime="20200407 17:54:00.256"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:54:00.258" level="INFO">Clicking element 'xpath://div[@id='dropdownPanel_freehandSet']//div[@class='freelinestringDrawing CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:54:00.257" endtime="20200407 17:54:01.386"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:58.680" endtime="20200407 17:54:01.387"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Freehand</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:01.392" endtime="20200407 17:54:02.964"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:01.390" endtime="20200407 17:54:02.965"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:54:04.003" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Freehand'.</msg>
<status status="PASS" starttime="20200407 17:54:02.967" endtime="20200407 17:54:04.003"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:02.966" endtime="20200407 17:54:04.004"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:01.388" endtime="20200407 17:54:04.005"></status>
</kw>
<kw name="Draw With Freehand Annotation" library="CommonAnnotationWeb">
<doc>Draw a Freehand Annotation</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:04.010" endtime="20200407 17:54:05.573"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:04.008" endtime="20200407 17:54:05.574"></status>
</kw>
<kw name="Drag And Drop By Offset" library="SeleniumLibrary">
<doc>Drags the element identified with ``locator`` by ``xoffset/yoffset``.</doc>
<arguments>
<arg>//div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:05.575" endtime="20200407 17:54:07.205"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:54:08.209" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:54:07.206" endtime="20200407 17:54:08.209"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:04.006" endtime="20200407 17:54:08.210"></status>
</kw>
<status status="PASS" starttime="20200407 17:53:54.968" endtime="20200407 17:54:08.210"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:08.214" endtime="20200407 17:54:09.282"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:08.212" endtime="20200407 17:54:09.283"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:54:09.285" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:54:09.284" endtime="20200407 17:54:10.406"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:08.210" endtime="20200407 17:54:10.407"></status>
</kw>
<kw name="Select The Drawing Tool Freehand Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Freehand Annotation clicking over</doc>
<arguments>
<arg>-125</arg>
<arg>93</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:10.412" endtime="20200407 17:54:11.970"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:10.411" endtime="20200407 17:54:11.970"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:54:11.972" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-125, y=93.</msg>
<status status="PASS" starttime="20200407 17:54:11.971" endtime="20200407 17:54:13.528"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:10.409" endtime="20200407 17:54:13.528"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:10.408" endtime="20200407 17:54:13.528"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:13.529" endtime="20200407 17:54:14.549"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:13.529" endtime="20200407 17:54:14.549"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:15.579" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:54:14.550" endtime="20200407 17:54:15.579"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:14.549" endtime="20200407 17:54:15.580"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:13.529" endtime="20200407 17:54:15.580"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Left">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:15.583" endtime="20200407 17:54:15.583"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:15.584" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:15.584" endtime="20200407 17:54:16.687"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:15.582" endtime="20200407 17:54:16.687"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:16.688" endtime="20200407 17:54:16.689"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:16.689" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:16.689" endtime="20200407 17:54:17.757"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:16.687" endtime="20200407 17:54:17.757"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:17.758" endtime="20200407 17:54:17.759"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:17.760" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:17.760" endtime="20200407 17:54:18.827"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:17.758" endtime="20200407 17:54:18.827"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:18.829" endtime="20200407 17:54:18.829"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:18.830" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:18.830" endtime="20200407 17:54:19.913"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:18.828" endtime="20200407 17:54:19.913"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:19.914" endtime="20200407 17:54:19.915"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:19.916" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:19.916" endtime="20200407 17:54:21.008"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:19.914" endtime="20200407 17:54:21.008"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:21.009" endtime="20200407 17:54:21.009"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:21.009" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:21.009" endtime="20200407 17:54:22.080"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:21.008" endtime="20200407 17:54:22.080"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:22.081" endtime="20200407 17:54:22.082"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:22.083" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:22.082" endtime="20200407 17:54:23.151"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:22.081" endtime="20200407 17:54:23.151"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:23.152" endtime="20200407 17:54:23.152"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:23.152" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:23.152" endtime="20200407 17:54:24.223"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:23.151" endtime="20200407 17:54:24.223"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:24.224" endtime="20200407 17:54:24.224"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:24.225" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:54:24.224" endtime="20200407 17:54:25.293"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:24.224" endtime="20200407 17:54:25.293"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:15.582" endtime="20200407 17:54:25.294"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:15.581" endtime="20200407 17:54:25.294"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:25.297" endtime="20200407 17:54:26.331"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:25.296" endtime="20200407 17:54:26.331"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:54:26.332" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:54:26.332" endtime="20200407 17:54:27.440"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:25.295" endtime="20200407 17:54:27.441"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:27.443" endtime="20200407 17:54:28.475"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:27.442" endtime="20200407 17:54:28.475"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:54:28.476" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:54:28.475" endtime="20200407 17:54:29.537"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:27.441" endtime="20200407 17:54:29.538"></status>
</kw>
<kw name="Select The Drawing Tool Freehand Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Freehand Annotation clicking over</doc>
<arguments>
<arg>-133</arg>
<arg>157</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:29.546" endtime="20200407 17:54:31.087"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:29.544" endtime="20200407 17:54:31.087"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:54:31.090" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-133, y=157.</msg>
<status status="PASS" starttime="20200407 17:54:31.089" endtime="20200407 17:54:32.661"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:29.541" endtime="20200407 17:54:32.662"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:29.539" endtime="20200407 17:54:32.662"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:32.666" endtime="20200407 17:54:33.711"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:32.664" endtime="20200407 17:54:33.712"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:54:34.753" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:54:33.713" endtime="20200407 17:54:34.753"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:33.712" endtime="20200407 17:54:34.754"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:32.663" endtime="20200407 17:54:34.754"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:34.757" endtime="20200407 17:54:35.815"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:34.756" endtime="20200407 17:54:35.816"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200407 17:54:35.818" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200407 17:54:35.817" endtime="20200407 17:54:36.957"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:34.755" endtime="20200407 17:54:36.958"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:36.960" endtime="20200407 17:54:38.472"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:36.958" endtime="20200407 17:54:38.473"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:38.478" endtime="20200407 17:54:40.042"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200407 17:54:40.044" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200407 17:54:40.043" endtime="20200407 17:54:41.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:54:42.198" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:54:41.195" endtime="20200407 17:54:42.199"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:38.477" endtime="20200407 17:54:42.199"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:42.200" endtime="20200407 17:54:43.772"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200407 17:54:43.774" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200407 17:54:43.773" endtime="20200407 17:54:45.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200407 17:54:47.169" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200407 17:54:45.167" endtime="20200407 17:54:47.170"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:38.476" endtime="20200407 17:54:47.171"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200407 17:54:47.173" endtime="20200407 17:54:49.745"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200407 17:54:49.750" level="INFO">${tc_end} = 1586296489.750342</msg>
<status status="PASS" starttime="20200407 17:54:49.749" endtime="20200407 17:54:49.751"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:54:49.753" level="INFO">${tc_duration} = 83.96606397628784</msg>
<status status="PASS" starttime="20200407 17:54:49.752" endtime="20200407 17:54:49.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200407 17:54:49.755" level="INFO">${tc_duration} = 1.3994343996047973</msg>
<status status="PASS" starttime="20200407 17:54:49.754" endtime="20200407 17:54:49.756"></status>
</kw>
<msg timestamp="20200407 17:54:49.757" level="INFO">${duration} = 1.3994343996047973</msg>
<status status="PASS" starttime="20200407 17:54:49.747" endtime="20200407 17:54:49.757"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200407 17:54:49.759" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200407 17:54:49.758" endtime="20200407 17:54:49.760"></status>
</kw>
<msg timestamp="20200407 17:54:49.761" level="INFO">${ElapsedTime} = 1.3994343996047973</msg>
<status status="PASS" starttime="20200407 17:54:49.746" endtime="20200407 17:54:49.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:49.763" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:54:49.762" endtime="20200407 17:54:49.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:54:49.765" level="INFO">JMapRobotTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:54:49.764" endtime="20200407 17:54:49.765"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200407 17:54:49.767" level="INFO">@{listeSuiteName} = [ JMapRobotTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200407 17:54:49.766" endtime="20200407 17:54:49.768"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200407 17:54:49.769" level="INFO">Length is 7</msg>
<msg timestamp="20200407 17:54:49.770" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200407 17:54:49.769" endtime="20200407 17:54:49.770"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:54:49.772" level="INFO">${suiteName} = EditAnAnnotationTests</msg>
<status status="PASS" starttime="20200407 17:54:49.771" endtime="20200407 17:54:49.773"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200407 17:54:49.774" level="INFO">@{suiteName} = [ EditAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200407 17:54:49.774" endtime="20200407 17:54:49.775"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200407 17:54:49.777" level="INFO">${suiteName} = EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:54:49.775" endtime="20200407 17:54:49.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200407 17:54:49.778" level="INFO">EditAnAnnotation</msg>
<status status="PASS" starttime="20200407 17:54:49.777" endtime="20200407 17:54:49.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:49.779" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:54:49.779" endtime="20200407 17:54:49.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200407 17:54:49.781" level="INFO">JM70-902:Modify a freehand annotation with the left rotation</msg>
<status status="PASS" starttime="20200407 17:54:49.780" endtime="20200407 17:54:49.781"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200407 17:54:49.782" level="INFO">@{listeTestName} = [ JM70-902 | Modify a freehand annotation with the left rotation ]</msg>
<status status="PASS" starttime="20200407 17:54:49.781" endtime="20200407 17:54:49.782"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200407 17:54:49.783" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:54:49.784" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200407 17:54:49.783" endtime="20200407 17:54:49.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200407 17:54:49.785" level="INFO">${tesCaseName} = Modify a freehand annotation with the left rotation</msg>
<status status="PASS" starttime="20200407 17:54:49.784" endtime="20200407 17:54:49.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200407 17:54:49.786" level="INFO">Modify a freehand annotation with the left rotation</msg>
<status status="PASS" starttime="20200407 17:54:49.786" endtime="20200407 17:54:49.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:49.788" level="INFO">================================================</msg>
<status status="PASS" starttime="20200407 17:54:49.787" endtime="20200407 17:54:49.788"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:49.791" endtime="20200407 17:54:51.806"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:51.807" endtime="20200407 17:54:51.808"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:51.808" endtime="20200407 17:54:51.858"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:54:51.936" level="INFO">${RESULT} = [{'userFullName': 'userTest1', 'sessionId': 1751615804, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200407 17:54:51.858" endtime="20200407 17:54:51.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200407 17:54:51.937" level="INFO">${RESULT} = {'userFullName': 'userTest1', 'sessionId': 1751615804, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:54:51.937" endtime="20200407 17:54:51.938"></status>
</kw>
<msg timestamp="20200407 17:54:51.938" level="INFO">${BODY} = {'userFullName': 'userTest1', 'sessionId': 1751615804, 'serverVersion': '7.0 Istanbul build 138', 'userEmailAddress': '', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200407 17:54:49.790" endtime="20200407 17:54:51.938"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200407 17:54:51.941" level="INFO">${getSessionID} = 1751615804</msg>
<status status="PASS" starttime="20200407 17:54:51.940" endtime="20200407 17:54:51.941"></status>
</kw>
<msg timestamp="20200407 17:54:51.941" level="INFO">${SESSIONID} = 1751615804</msg>
<status status="PASS" starttime="20200407 17:54:51.939" endtime="20200407 17:54:51.941"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200407 17:54:51.944" level="INFO">${getBuild} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:51.943" endtime="20200407 17:54:51.944"></status>
</kw>
<msg timestamp="20200407 17:54:51.944" level="INFO">${buildName} = 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:51.942" endtime="20200407 17:54:51.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200407 17:54:51.946" level="INFO">${buildName} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:51.945" endtime="20200407 17:54:51.946"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:51.947" endtime="20200407 17:54:53.970"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:53.971" endtime="20200407 17:54:54.030"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:54.031" endtime="20200407 17:54:54.079"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:51.946" endtime="20200407 17:54:54.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:54.080" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:54.080" endtime="20200407 17:54:54.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:54:54.085" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200407 17:54:54.084" endtime="20200407 17:54:54.085"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200407 17:54:54.633" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200407 17:54:54.086" endtime="20200407 17:54:54.634"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:54.634" endtime="20200407 17:54:55.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:54:55.481" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200407 17:54:55.480" endtime="20200407 17:54:55.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:55.483" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:55.482" endtime="20200407 17:54:55.483"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:54.083" endtime="20200407 17:54:55.484"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200407 17:54:55.966" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200407 17:54:55.485" endtime="20200407 17:54:55.967"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:54:55.969" level="INFO">Length is 13</msg>
<msg timestamp="20200407 17:54:55.969" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200407 17:54:55.968" endtime="20200407 17:54:55.970"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200407 17:54:55.971" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200407 17:54:55.970" endtime="20200407 17:54:55.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200407 17:54:55.973" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200407 17:54:55.972" endtime="20200407 17:54:55.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200407 17:54:55.974" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200407 17:54:55.974" endtime="20200407 17:54:55.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200407 17:54:55.975" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200407 17:54:55.975" endtime="20200407 17:54:55.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:55.976" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:55.976" endtime="20200407 17:54:55.976"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200407 17:54:56.407" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200407 17:54:55.976" endtime="20200407 17:54:56.408"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:54:56.410" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:54:56.410" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:54:56.409" endtime="20200407 17:54:56.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200407 17:54:56.412" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200407 17:54:56.411" endtime="20200407 17:54:56.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200407 17:54:56.413" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200407 17:54:56.413" endtime="20200407 17:54:56.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200407 17:54:56.415" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200407 17:54:56.414" endtime="20200407 17:54:56.415"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200407 17:54:56.416" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200407 17:54:56.415" endtime="20200407 17:54:56.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:56.418" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:56.417" endtime="20200407 17:54:56.418"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200407 17:54:56.737" level="INFO">${latestBuild} = {'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Ad...</msg>
<status status="PASS" starttime="20200407 17:54:56.418" endtime="20200407 17:54:56.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200407 17:54:56.739" level="INFO">{'id': '844', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 138', 'notes': "TFIFT-9741 JMap Admin : Imposible to create a GML 3.X SDS with compound curves and/or rings&lt;/br&gt;TFIFT-9736 JMap Admin : Impossible to create a GML SDS when an entity doesn\\'t have a geometry&lt;/br&gt;TFIFT-9700 JMap Admin : Forms: Cannot add photo stored in External Database with large database&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-04-07 16:32:24'}</msg>
<status status="PASS" starttime="20200407 17:54:56.738" endtime="20200407 17:54:56.740"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:54:56.741" level="INFO">Length is 9</msg>
<msg timestamp="20200407 17:54:56.742" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200407 17:54:56.740" endtime="20200407 17:54:56.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200407 17:54:56.744" level="INFO">${latestBuildID} = 844</msg>
<status status="PASS" starttime="20200407 17:54:56.743" endtime="20200407 17:54:56.745"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200407 17:54:56.747" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:56.745" endtime="20200407 17:54:56.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:56.749" endtime="20200407 17:54:56.749"></status>
</kw>
<msg timestamp="20200407 17:54:56.750" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:56.748" endtime="20200407 17:54:56.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200407 17:54:56.751" level="INFO">JMap 7.0 Istanbul build 138</msg>
<status status="PASS" starttime="20200407 17:54:56.751" endtime="20200407 17:54:56.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:56.753" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:56.752" endtime="20200407 17:54:56.753"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200407 17:54:57.138" level="INFO">@{testCases} = [ {'id': '8545', 'name': 'Modify a freehand annotation with the left rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '902'} ]</msg>
<status status="PASS" starttime="20200407 17:54:56.753" endtime="20200407 17:54:57.138"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200407 17:54:57.140" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:54:57.141" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200407 17:54:57.139" endtime="20200407 17:54:57.141"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200407 17:54:57.144" level="INFO">{'id': '8545', 'name': 'Modify a freehand annotation with the left rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '902'}</msg>
<status status="PASS" starttime="20200407 17:54:57.143" endtime="20200407 17:54:57.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.147" endtime="20200407 17:54:57.148"></status>
</kw>
<msg timestamp="20200407 17:54:57.149" level="INFO">${testCase} = {'id': '8545', 'name': 'Modify a freehand annotation with the left rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '902'}</msg>
<status status="PASS" starttime="20200407 17:54:57.145" endtime="20200407 17:54:57.149"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200407 17:54:57.151" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:54:57.150" endtime="20200407 17:54:57.152"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.142" endtime="20200407 17:54:57.153"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.141" endtime="20200407 17:54:57.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200407 17:54:57.155" level="INFO">{'id': '8545', 'name': 'Modify a freehand annotation with the left rotation', 'parent_id': '8524', 'tsuite_name': 'EditAnAnnotation', 'tc_external_id': '902'}</msg>
<status status="PASS" starttime="20200407 17:54:57.154" endtime="20200407 17:54:57.155"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200407 17:54:57.157" level="INFO">${testCaseNAME} = Modify a freehand annotation with the left rotation</msg>
<status status="PASS" starttime="20200407 17:54:57.156" endtime="20200407 17:54:57.158"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200407 17:54:57.160" level="INFO">${testCaseID} = 8545</msg>
<status status="PASS" starttime="20200407 17:54:57.158" endtime="20200407 17:54:57.160"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200407 17:54:57.162" level="INFO">${testCaseExternalID} = 902</msg>
<status status="PASS" starttime="20200407 17:54:57.161" endtime="20200407 17:54:57.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200407 17:54:57.164" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200407 17:54:57.163" endtime="20200407 17:54:57.164"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:54:57.166" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:54:57.165" endtime="20200407 17:54:57.167"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200407 17:54:57.168" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200407 17:54:57.167" endtime="20200407 17:54:57.169"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.172" endtime="20200407 17:54:57.445"></status>
</kw>
<msg timestamp="20200407 17:54:57.445" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:54:57.171" endtime="20200407 17:54:57.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:54:57.448" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200407 17:54:57.447" endtime="20200407 17:54:57.448"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:54:57.450" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:54:57.449" endtime="20200407 17:54:57.450"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:54:57.452" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:54:57.451" endtime="20200407 17:54:57.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.456" endtime="20200407 17:54:57.457"></status>
</kw>
<msg timestamp="20200407 17:54:57.457" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200407 17:54:57.453" endtime="20200407 17:54:57.458"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:54:57.459" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:54:57.460" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:54:57.458" endtime="20200407 17:54:57.460"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:54:57.462" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200407 17:54:57.461" endtime="20200407 17:54:57.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.465" endtime="20200407 17:54:57.466"></status>
</kw>
<msg timestamp="20200407 17:54:57.467" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200407 17:54:57.463" endtime="20200407 17:54:57.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:54:57.471" level="INFO">----- &gt; ID of Build(138) : -1</msg>
<status status="PASS" starttime="20200407 17:54:57.470" endtime="20200407 17:54:57.471"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.468" endtime="20200407 17:54:57.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:54:57.473" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:54:57.472" endtime="20200407 17:54:57.473"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:54:57.475" level="INFO">${numVersion} = 138</msg>
<status status="PASS" starttime="20200407 17:54:57.474" endtime="20200407 17:54:57.475"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:54:57.476" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:54:57.476" endtime="20200407 17:54:57.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.480" endtime="20200407 17:54:57.481"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.479" endtime="20200407 17:54:57.481"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.478" endtime="20200407 17:54:57.482"></status>
</kw>
<msg timestamp="20200407 17:54:57.482" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:54:57.477" endtime="20200407 17:54:57.482"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.483" endtime="20200407 17:54:57.484"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.170" endtime="20200407 17:54:57.484"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:57.485" endtime="20200407 17:54:58.125"></status>
</kw>
<msg timestamp="20200407 17:54:58.126" level="INFO">@{getExecution} = [ PASS | [{'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:54:57.485" endtime="20200407 17:54:58.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.128" level="INFO">---- &gt; ['PASS', [{'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.26', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200407 17:54:58.127" endtime="20200407 17:54:58.128"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200407 17:54:58.129" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200407 17:54:58.128" endtime="20200407 17:54:58.129"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200407 17:54:58.131" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200407 17:54:58.130" endtime="20200407 17:54:58.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.133" endtime="20200407 17:54:58.133"></status>
</kw>
<msg timestamp="20200407 17:54:58.134" level="INFO">@{getExecution} = [ PASS | [{'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200407 17:54:58.131" endtime="20200407 17:54:58.134"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:54:58.135" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:54:58.135" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200407 17:54:58.134" endtime="20200407 17:54:58.135"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:54:58.137" level="INFO">${lastExecution} = [{'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200407 17:54:58.136" endtime="20200407 17:54:58.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.138" endtime="20200407 17:54:58.139"></status>
</kw>
<msg timestamp="20200407 17:54:58.139" level="INFO">${idBuild} = 332628</msg>
<status status="PASS" starttime="20200407 17:54:58.138" endtime="20200407 17:54:58.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.141" level="INFO">----- &gt; ID of Build(137) : 332628</msg>
<status status="PASS" starttime="20200407 17:54:58.140" endtime="20200407 17:54:58.141"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.139" endtime="20200407 17:54:58.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200407 17:54:58.142" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200407 17:54:58.142" endtime="20200407 17:54:58.143"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:54:58.144" level="INFO">${numVersion} = 137</msg>
<status status="PASS" starttime="20200407 17:54:58.143" endtime="20200407 17:54:58.144"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200407 17:54:58.145" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:54:58.145" endtime="20200407 17:54:58.146"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.150" endtime="20200407 17:54:58.151"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.149" endtime="20200407 17:54:58.151"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.148" endtime="20200407 17:54:58.151"></status>
</kw>
<msg timestamp="20200407 17:54:58.152" level="INFO">${numVersion} = 136</msg>
<status status="PASS" starttime="20200407 17:54:58.146" endtime="20200407 17:54:58.152"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200407 17:54:58.153" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200407 17:54:58.152" endtime="20200407 17:54:58.155"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.484" endtime="20200407 17:54:58.155"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:57.169" endtime="20200407 17:54:58.155"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200407 17:54:58.156" level="INFO">Length is 1</msg>
<msg timestamp="20200407 17:54:58.156" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200407 17:54:58.155" endtime="20200407 17:54:58.156"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200407 17:54:58.157" level="INFO">${lastExecution} = {'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200407 17:54:58.157" endtime="20200407 17:54:58.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200407 17:54:58.159" level="INFO">-----&gt; Last execution : {'id': '332628', 'build_id': '841', 'tester_id': '9', 'execution_ts': '2020-03-05 18:57:17', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8546', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '1.26', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200407 17:54:58.158" endtime="20200407 17:54:58.159"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200407 17:54:58.161" level="INFO">${lastExecutionID} = 332628</msg>
<status status="PASS" starttime="20200407 17:54:58.160" endtime="20200407 17:54:58.161"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.163" endtime="20200407 17:54:58.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200407 17:54:58.167" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:54:58.166" endtime="20200407 17:54:58.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200407 17:54:58.169" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200407 17:54:58.168" endtime="20200407 17:54:58.169"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200407 17:54:58.170" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200407 17:54:58.169" endtime="20200407 17:54:58.170"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:54:58.171" level="INFO">Length is 2</msg>
<msg timestamp="20200407 17:54:58.172" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200407 17:54:58.171" endtime="20200407 17:54:58.172"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200407 17:54:58.173" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200407 17:54:58.172" endtime="20200407 17:54:58.173"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.176" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200407 17:54:58.175" endtime="20200407 17:54:58.176"></status>
</kw>
<msg timestamp="20200407 17:54:58.177" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:54:58.174" endtime="20200407 17:54:58.177"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:54:58.178" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:54:58.177" endtime="20200407 17:54:58.178"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.179" endtime="20200407 17:54:58.179"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.174" endtime="20200407 17:54:58.180"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.182" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200407 17:54:58.182" endtime="20200407 17:54:58.183"></status>
</kw>
<msg timestamp="20200407 17:54:58.183" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:54:58.181" endtime="20200407 17:54:58.183"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200407 17:54:58.185" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200407 17:54:58.184" endtime="20200407 17:54:58.185"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.185" endtime="20200407 17:54:58.186"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.180" endtime="20200407 17:54:58.186"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.174" endtime="20200407 17:54:58.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.187" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200407 17:54:58.187" endtime="20200407 17:54:58.188"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200407 17:54:58.190" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200407 17:54:58.189" endtime="20200407 17:54:58.190"></status>
</kw>
<msg timestamp="20200407 17:54:58.191" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200407 17:54:58.188" endtime="20200407 17:54:58.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.192" endtime="20200407 17:54:58.193"></status>
</kw>
<msg timestamp="20200407 17:54:58.193" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200407 17:54:58.191" endtime="20200407 17:54:58.194"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.195" endtime="20200407 17:54:58.196"></status>
</kw>
<msg timestamp="20200407 17:54:58.196" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200407 17:54:58.194" endtime="20200407 17:54:58.196"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:54:58.197" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200407 17:54:58.197" endtime="20200407 17:54:58.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.199" endtime="20200407 17:54:58.199"></status>
</kw>
<msg timestamp="20200407 17:54:58.200" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:54:58.198" endtime="20200407 17:54:58.200"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200407 17:54:58.201" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200407 17:54:58.200" endtime="20200407 17:54:58.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.203" endtime="20200407 17:54:58.610"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.202" endtime="20200407 17:54:58.611"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.165" endtime="20200407 17:54:58.611"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.164" endtime="20200407 17:54:58.611"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.162" endtime="20200407 17:54:58.611"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.161" endtime="20200407 17:54:58.611"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:54:58.612" endtime="20200407 17:54:58.612"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:54.082" endtime="20200407 17:54:58.612"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:54.081" endtime="20200407 17:54:58.613"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:47.171" endtime="20200407 17:54:58.613"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:38.475" endtime="20200407 17:54:58.613"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200407 17:53:25.778" endtime="20200407 17:54:58.613" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-s1-s1-t12" name="JM70-903:Modify a text annotation with the left rotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200407 17:54:58.616" level="INFO">${tc_start} = 1586296498.616187</msg>
<status status="PASS" starttime="20200407 17:54:58.616" endtime="20200407 17:54:58.617"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200407 17:54:58.617" level="INFO">${tc_start} = 1586296498.616187</msg>
<status status="PASS" starttime="20200407 17:54:58.617" endtime="20200407 17:54:58.617"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.616" endtime="20200407 17:54:58.618"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
</arguments>
<msg timestamp="20200407 17:54:58.618" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:54:58.618" endtime="20200407 17:55:05.405"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:05.407" endtime="20200407 17:55:10.100"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200407 17:55:10.101" endtime="20200407 17:55:10.739"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.615" endtime="20200407 17:55:10.739"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:10.739" endtime="20200407 17:55:11.784"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:11.784" endtime="20200407 17:55:12.853"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:12.853" endtime="20200407 17:55:13.916"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:13.916" endtime="20200407 17:55:14.423"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:14.423" endtime="20200407 17:55:15.969"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:14.423" endtime="20200407 17:55:15.969"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:15.969" endtime="20200407 17:55:17.044"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:55:17.046" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200407 17:55:17.045" endtime="20200407 17:55:18.746"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:19.756" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:18.746" endtime="20200407 17:55:19.756"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:13.916" endtime="20200407 17:55:19.757"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:19.760" endtime="20200407 17:55:20.278"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:20.281" endtime="20200407 17:55:21.856"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:20.278" endtime="20200407 17:55:21.857"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:21.857" endtime="20200407 17:55:22.931"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:55:22.932" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200407 17:55:22.931" endtime="20200407 17:55:24.615"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:25.629" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:24.616" endtime="20200407 17:55:25.629"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:19.757" endtime="20200407 17:55:25.629"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200407 17:55:25.629" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200407 17:55:25.629" endtime="20200407 17:55:27.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:28.389" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:27.386" endtime="20200407 17:55:28.389"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:10.739" endtime="20200407 17:55:28.389"></status>
</kw>
<status status="PASS" starttime="20200407 17:54:58.615" endtime="20200407 17:55:28.389"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:28.391" endtime="20200407 17:55:28.904"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:55:29.407" level="INFO">Page title is 'JMap_Web_WorldTest'.</msg>
<status status="PASS" starttime="20200407 17:55:28.905" endtime="20200407 17:55:29.407"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:28.905" endtime="20200407 17:55:29.407"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:28.390" endtime="20200407 17:55:29.407"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:28.390" endtime="20200407 17:55:29.407"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:29.407" endtime="20200407 17:55:30.986"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:29.407" endtime="20200407 17:55:30.987"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200407 17:55:30.987" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200407 17:55:30.987" endtime="20200407 17:55:32.128"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:29.407" endtime="20200407 17:55:32.129"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:32.132" endtime="20200407 17:55:33.722"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:32.131" endtime="20200407 17:55:33.723"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:55:33.723" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:55:33.723" endtime="20200407 17:55:34.845"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:32.129" endtime="20200407 17:55:34.845"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:34.848" endtime="20200407 17:55:36.426"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:34.848" endtime="20200407 17:55:36.426"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200407 17:55:37.496" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200407 17:55:36.426" endtime="20200407 17:55:37.497"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:36.426" endtime="20200407 17:55:37.497"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:34.845" endtime="20200407 17:55:37.498"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:39.106"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:39.107"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:55:39.109" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:55:39.108" endtime="20200407 17:55:40.754"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:40.755"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:40.755"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:40.760" endtime="20200407 17:55:42.332"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:40.756" endtime="20200407 17:55:42.332"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:55:42.332" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:55:42.332" endtime="20200407 17:55:43.940"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:40.756" endtime="20200407 17:55:43.941"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:40.756" endtime="20200407 17:55:43.941"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:43.941"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:44.942" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:43.941" endtime="20200407 17:55:44.942"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:37.498" endtime="20200407 17:55:44.943"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:44.944" endtime="20200407 17:55:46.015"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:44.944" endtime="20200407 17:55:46.015"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200407 17:55:47.044" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200407 17:55:46.015" endtime="20200407 17:55:47.044"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:46.015" endtime="20200407 17:55:47.045"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:44.943" endtime="20200407 17:55:47.045"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:47.046" endtime="20200407 17:55:47.561"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:47.562" endtime="20200407 17:55:49.152"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:47.562" endtime="20200407 17:55:49.152"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:49.152" endtime="20200407 17:55:50.248"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:55:50.250" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200407 17:55:50.249" endtime="20200407 17:55:52.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:53.044" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:52.026" endtime="20200407 17:55:53.044"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:47.046" endtime="20200407 17:55:53.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:55:54.058" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:53.044" endtime="20200407 17:55:54.058"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:47.046" endtime="20200407 17:55:54.058"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:54.058" endtime="20200407 17:55:55.608"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:54.058" endtime="20200407 17:55:55.609"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200407 17:55:56.652" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200407 17:55:55.609" endtime="20200407 17:55:56.652"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:55.609" endtime="20200407 17:55:56.652"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:54.058" endtime="20200407 17:55:56.652"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:54.058" endtime="20200407 17:55:56.652"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200407 17:55:56.652" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200407 17:55:56.652" endtime="20200407 17:55:57.796"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200407 17:55:58.798" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:57.796" endtime="20200407 17:55:58.798"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:56.652" endtime="20200407 17:55:58.798"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200407 17:55:59.805" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200407 17:55:58.798" endtime="20200407 17:55:59.806"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:47.046" endtime="20200407 17:55:59.806"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:28.389" endtime="20200407 17:55:59.806"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:55:59.806" endtime="20200407 17:56:00.870"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:59.806" endtime="20200407 17:56:00.871"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200407 17:56:00.873" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200407 17:56:00.872" endtime="20200407 17:56:02.016"></status>
</kw>
<status status="PASS" starttime="20200407 17:55:59.806" endtime="20200407 17:56:02.017"></status>
</kw>
<kw name="Select The Text Annotation On The Map" library="CommonAnnotationWeb">
<doc>Select The Text Annotation On The Map clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:02.022" endtime="20200407 17:56:03.566"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:02.021" endtime="20200407 17:56:03.567"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200407 17:56:03.569" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200407 17:56:03.568" endtime="20200407 17:56:05.144"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:02.019" endtime="20200407 17:56:05.145"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:02.018" endtime="20200407 17:56:05.145"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:05.149" endtime="20200407 17:56:06.212"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:05.147" endtime="20200407 17:56:06.213"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:07.261" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200407 17:56:06.215" endtime="20200407 17:56:07.262"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:06.214" endtime="20200407 17:56:07.262"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:05.146" endtime="20200407 17:56:07.263"></status>
</kw>
<kw name="Click 10 Times On The Icone Rotate Left">
<kw name="${count} IN RANGE [ 1 | 10 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:07.267" endtime="20200407 17:56:07.267"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:07.269" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:07.268" endtime="20200407 17:56:08.405"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:07.266" endtime="20200407 17:56:08.406"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:08.408" endtime="20200407 17:56:08.409"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:08.410" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:08.410" endtime="20200407 17:56:09.472"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:08.407" endtime="20200407 17:56:09.473"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:09.474" endtime="20200407 17:56:09.476"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:09.478" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:09.476" endtime="20200407 17:56:10.535"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:09.474" endtime="20200407 17:56:10.536"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:10.537" endtime="20200407 17:56:10.538"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:10.539" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:10.538" endtime="20200407 17:56:11.594"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:10.536" endtime="20200407 17:56:11.595"></status>
</kw>
<kw name="${count} = 5" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:11.596" endtime="20200407 17:56:11.597"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:11.597" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:11.597" endtime="20200407 17:56:12.673"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:11.595" endtime="20200407 17:56:12.673"></status>
</kw>
<kw name="${count} = 6" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:12.675" endtime="20200407 17:56:12.675"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:12.676" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:12.676" endtime="20200407 17:56:13.733"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:12.674" endtime="20200407 17:56:13.733"></status>
</kw>
<kw name="${count} = 7" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:13.735" endtime="20200407 17:56:13.736"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:13.738" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:13.737" endtime="20200407 17:56:14.805"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:13.734" endtime="20200407 17:56:14.806"></status>
</kw>
<kw name="${count} = 8" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:14.808" endtime="20200407 17:56:14.809"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:14.811" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:14.810" endtime="20200407 17:56:15.864"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:14.807" endtime="20200407 17:56:15.865"></status>
</kw>
<kw name="${count} = 9" type="foritem">
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<status status="PASS" starttime="20200407 17:56:15.866" endtime="20200407 17:56:15.867"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200407 17:56:15.868" level="INFO">Clicking element 'xpath://div[@name='rotateLeft']'.</msg>
<status status="PASS" starttime="20200407 17:56:15.868" endtime="20200407 17:56:16.915"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:15.865" endtime="20200407 17:56:16.916"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:07.265" endtime="20200407 17:56:16.916"></status>
</kw>
<status status="PASS" starttime="20200407 17:56:07.264" endtime="20200407 17:56:16.917"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool