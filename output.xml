<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200629 21:09:25.715" rpa="false">
<suite id="s1" name="JMapJenkinsTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-974:Modify the text color of the text annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200629 21:09:26.475" level="INFO">${tc_start} = 1593479366.474658</msg>
<status status="PASS" starttime="20200629 21:09:26.475" endtime="20200629 21:09:26.475"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200629 21:09:26.476" level="INFO">${tc_start} = 1593479366.474658</msg>
<status status="PASS" starttime="20200629 21:09:26.476" endtime="20200629 21:09:26.476"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:26.474" endtime="20200629 21:09:26.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Browser}'=='Chrome'</arg>
<arg>Open Chrome</arg>
<arg>ELSE IF</arg>
<arg>'${Browser}'=='Firefox'</arg>
<arg>Open Firefox</arg>
<arg>ELSE</arg>
<arg>Open Edge</arg>
</arguments>
<kw name="Open Chrome" library="CommonLogin">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
</arguments>
<assign>
<var>${chrome_options}</var>
</assign>
<msg timestamp="20200629 21:09:26.477" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001FDA10F0DA0&gt;</msg>
<status status="PASS" starttime="20200629 21:09:26.477" endtime="20200629 21:09:26.477"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:26.478" endtime="20200629 21:09:26.478"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
<arg>chrome_options=${chrome_options}</arg>
</arguments>
<msg timestamp="20200629 21:09:26.478" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20200629 21:09:26.478" endtime="20200629 21:09:30.238"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:26.477" endtime="20200629 21:09:30.239"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:26.476" endtime="20200629 21:09:30.239"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
</arguments>
<msg timestamp="20200629 21:09:30.250" level="INFO">Opening url 'https://localhost:8443/JMap_WorldTest_HTTPS'</msg>
<status status="PASS" starttime="20200629 21:09:30.240" endtime="20200629 21:09:30.739"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:30.739" endtime="20200629 21:09:32.889"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200629 21:09:32.890" endtime="20200629 21:09:33.017"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:26.474" endtime="20200629 21:09:33.017"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.018" endtime="20200629 21:09:33.047"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.047" endtime="20200629 21:09:33.084"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.085" endtime="20200629 21:09:33.128"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.130" endtime="20200629 21:09:33.131"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.132" endtime="20200629 21:09:33.153"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:33.131" endtime="20200629 21:09:33.153"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:33.153" endtime="20200629 21:09:33.173"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 21:09:33.174" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200629 21:09:33.174" endtime="20200629 21:09:33.237"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:34.239" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:33.238" endtime="20200629 21:09:34.240"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:33.128" endtime="20200629 21:09:34.241"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:34.244" endtime="20200629 21:09:34.249"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:34.252" endtime="20200629 21:09:34.286"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:34.250" endtime="20200629 21:09:34.286"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:34.287" endtime="20200629 21:09:34.314"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 21:09:34.315" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200629 21:09:34.314" endtime="20200629 21:09:34.495"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:35.496" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:34.495" endtime="20200629 21:09:35.497"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:34.242" endtime="20200629 21:09:35.497"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200629 21:09:35.498" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200629 21:09:35.497" endtime="20200629 21:09:38.013"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:39.017" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:38.014" endtime="20200629 21:09:39.017"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:33.017" endtime="20200629 21:09:39.017"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:26.474" endtime="20200629 21:09:39.017"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.019" endtime="20200629 21:09:39.020"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200629 21:09:39.030" level="INFO">Page title is 'JMap_WorldTest_HTTPS'.</msg>
<status status="PASS" starttime="20200629 21:09:39.021" endtime="20200629 21:09:39.030"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.020" endtime="20200629 21:09:39.030"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.018" endtime="20200629 21:09:39.030"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.018" endtime="20200629 21:09:39.031"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.032" endtime="20200629 21:09:39.056"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.031" endtime="20200629 21:09:39.057"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200629 21:09:39.057" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200629 21:09:39.057" endtime="20200629 21:09:39.098"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.031" endtime="20200629 21:09:39.098"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.100" endtime="20200629 21:09:39.126"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.099" endtime="20200629 21:09:39.127"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200629 21:09:39.127" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200629 21:09:39.127" endtime="20200629 21:09:39.175"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.099" endtime="20200629 21:09:39.175"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.176" endtime="20200629 21:09:39.215"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.176" endtime="20200629 21:09:39.215"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200629 21:09:39.229" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200629 21:09:39.216" endtime="20200629 21:09:39.229"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.215" endtime="20200629 21:09:39.229"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.176" endtime="20200629 21:09:39.229"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.230" endtime="20200629 21:09:39.255"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.230" endtime="20200629 21:09:39.255"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 21:09:39.257" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 21:09:39.255" endtime="20200629 21:09:39.829"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.229" endtime="20200629 21:09:39.830"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.229" endtime="20200629 21:09:39.830"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:39.833" endtime="20200629 21:09:39.855"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.832" endtime="20200629 21:09:39.856"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 21:09:39.857" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 21:09:39.856" endtime="20200629 21:09:40.395"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.831" endtime="20200629 21:09:40.396"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.830" endtime="20200629 21:09:40.397"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.229" endtime="20200629 21:09:40.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:41.402" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:40.398" endtime="20200629 21:09:41.402"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.229" endtime="20200629 21:09:41.402"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:41.403" endtime="20200629 21:09:41.448"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.403" endtime="20200629 21:09:41.448"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200629 21:09:41.481" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200629 21:09:41.449" endtime="20200629 21:09:41.482"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.449" endtime="20200629 21:09:41.482"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.402" endtime="20200629 21:09:41.483"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:41.486" endtime="20200629 21:09:41.489"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:41.490" endtime="20200629 21:09:41.523"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.489" endtime="20200629 21:09:41.524"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:41.524" endtime="20200629 21:09:41.565"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 21:09:41.566" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200629 21:09:41.565" endtime="20200629 21:09:41.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:42.776" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:41.774" endtime="20200629 21:09:42.777"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.485" endtime="20200629 21:09:42.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 21:09:43.782" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:42.779" endtime="20200629 21:09:43.782"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.485" endtime="20200629 21:09:43.783"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:43.785" endtime="20200629 21:09:43.814"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:43.784" endtime="20200629 21:09:43.815"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 21:09:43.842" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200629 21:09:43.816" endtime="20200629 21:09:43.842"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:43.816" endtime="20200629 21:09:43.843"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:43.784" endtime="20200629 21:09:43.843"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:43.783" endtime="20200629 21:09:43.844"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200629 21:09:43.844" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200629 21:09:43.844" endtime="20200629 21:09:43.936"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:44.937" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:43.936" endtime="20200629 21:09:44.938"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:43.844" endtime="20200629 21:09:44.939"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 21:09:45.943" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:44.940" endtime="20200629 21:09:45.944"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:41.483" endtime="20200629 21:09:45.945"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:39.018" endtime="20200629 21:09:45.945"></status>
</kw>
<kw name="Verify The Background Color Of The Text Field" library="CommonAnnotationWeb">
<doc>Check annotation text background color by the given text background color value</doc>
<arguments>
<arg>${blackColorField}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:45.951" endtime="20200629 21:09:46.020"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:45.948" endtime="20200629 21:09:46.021"></status>
</kw>
<kw name="Verify Background Color" library="CommonWeb">
<doc>Check for the css backgroud color of the web element located in locator</doc>
<arguments>
<arg>//div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>${color}</arg>
</arguments>
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>${Locator}</arg>
</arguments>
<assign>
<var>${elem}</var>
</assign>
<msg timestamp="20200629 21:09:46.038" level="INFO">${elem} = &lt;selenium.webdriver.remote.webelement.WebElement (session="85899832fc51cd0ffffe7f500d1d68cf", element="c8dbef45-1e60-4628-831b-584639a5a255")&gt;</msg>
<status status="PASS" starttime="20200629 21:09:46.023" endtime="20200629 21:09:46.038"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${elem}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
</arguments>
<assign>
<var>${getBgColor}</var>
</assign>
<msg timestamp="20200629 21:09:46.060" level="INFO">${getBgColor} = rgba(0, 0, 0, 1)</msg>
<status status="PASS" starttime="20200629 21:09:46.039" endtime="20200629 21:09:46.060"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:46.061" endtime="20200629 21:09:46.062"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.060" endtime="20200629 21:09:46.062"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.021" endtime="20200629 21:09:46.063"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:45.947" endtime="20200629 21:09:46.063"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:46.067" endtime="20200629 21:09:46.110"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.065" endtime="20200629 21:09:46.110"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200629 21:09:46.112" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200629 21:09:46.111" endtime="20200629 21:09:46.194"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.064" endtime="20200629 21:09:46.194"></status>
</kw>
<kw name="Select The Drawing Tool Text Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Text Annotation clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:46.198" endtime="20200629 21:09:46.241"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.197" endtime="20200629 21:09:46.241"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 21:09:46.242" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 21:09:46.242" endtime="20200629 21:09:46.888"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.196" endtime="20200629 21:09:46.888"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.195" endtime="20200629 21:09:46.889"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:46.891" endtime="20200629 21:09:46.921"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.890" endtime="20200629 21:09:46.922"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200629 21:09:46.923" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200629 21:09:46.922" endtime="20200629 21:09:47.013"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:46.889" endtime="20200629 21:09:47.014"></status>
</kw>
<kw name="Choose The Color Via The Text Field" library="CommonAnnotationWeb">
<doc>Choose text color for annotations</doc>
<arguments>
<arg>${greenColorElement}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:47.017" endtime="20200629 21:09:47.046"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.016" endtime="20200629 21:09:47.046"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
</arguments>
<msg timestamp="20200629 21:09:47.047" level="INFO">Clicking element 'xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]'.</msg>
<status status="PASS" starttime="20200629 21:09:47.047" endtime="20200629 21:09:47.363"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:47.365" endtime="20200629 21:09:47.415"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.364" endtime="20200629 21:09:47.415"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
</arguments>
<msg timestamp="20200629 21:09:47.416" level="INFO">Clicking element 'xpath://div[@class='sp-container sp-light sp-alpha-enabled sp-buttons-disabled sp-palette-buttons-disabled sp-initial-disabled']//div[@class='sp-cf sp-palette-row sp-palette-row-1']//span[4]'.</msg>
<status status="PASS" starttime="20200629 21:09:47.416" endtime="20200629 21:09:47.518"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.014" endtime="20200629 21:09:47.519"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:47.522" endtime="20200629 21:09:47.556"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.522" endtime="20200629 21:09:47.557"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200629 21:09:47.558" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200629 21:09:47.557" endtime="20200629 21:09:47.622"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.520" endtime="20200629 21:09:47.623"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:47.626" endtime="20200629 21:09:47.662"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.625" endtime="20200629 21:09:47.663"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 21:09:47.664" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=30.</msg>
<status status="PASS" starttime="20200629 21:09:47.663" endtime="20200629 21:09:48.240"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:47.624" endtime="20200629 21:09:48.242"></status>
</kw>
<kw name="Verify That The Annotation Type Is" library="CommonAnnotationWeb">
<doc>Check annotation type by the given type value</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>annotationType</arg>
</arguments>
<assign>
<var>${getAnnotationType}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:48.246" endtime="20200629 21:09:48.247"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200629 21:09:48.250" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].annotationType
Without any arguments.</msg>
<msg timestamp="20200629 21:09:48.365" level="INFO">${getAttribute} = Text</msg>
<status status="PASS" starttime="20200629 21:09:48.248" endtime="20200629 21:09:48.366"></status>
</kw>
<msg timestamp="20200629 21:09:48.367" level="INFO">${getAnnotationType} = Text</msg>
<status status="PASS" starttime="20200629 21:09:48.244" endtime="20200629 21:09:48.367"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:48.370" endtime="20200629 21:09:48.371"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:48.369" endtime="20200629 21:09:48.372"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:48.243" endtime="20200629 21:09:48.373"></status>
</kw>
<kw name="Verify That The Annotation Text Color Is" library="CommonAnnotationWeb">
<doc>Check annotation text color by the given text color value</doc>
<arguments>
<arg>${greenColorDrawing}</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>textColor</arg>
</arguments>
<assign>
<var>${getAnnotation}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:48.376" endtime="20200629 21:09:48.378"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200629 21:09:48.380" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].textColor
Without any arguments.</msg>
<msg timestamp="20200629 21:09:48.497" level="INFO">${getAttribute} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 21:09:48.379" endtime="20200629 21:09:48.497"></status>
</kw>
<msg timestamp="20200629 21:09:48.498" level="INFO">${getAnnotation} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 21:09:48.375" endtime="20200629 21:09:48.499"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${getAnnotation}</arg>
</arguments>
<assign>
<var>${getTextColor}</var>
</assign>
<msg timestamp="20200629 21:09:48.500" level="INFO">${getTextColor} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 21:09:48.499" endtime="20200629 21:09:48.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:48.502" endtime="20200629 21:09:48.502"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:48.501" endtime="20200629 21:09:48.503"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 21:09:49.505" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:48.503" endtime="20200629 21:09:49.506"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:48.374" endtime="20200629 21:09:49.507"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:49.511" endtime="20200629 21:09:49.784"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:49.510" endtime="20200629 21:09:49.785"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200629 21:09:49.787" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200629 21:09:49.786" endtime="20200629 21:09:50.108"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:49.508" endtime="20200629 21:09:50.109"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:50.112" endtime="20200629 21:09:50.424"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:50.110" endtime="20200629 21:09:50.425"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:50.430" endtime="20200629 21:09:50.805"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200629 21:09:50.807" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200629 21:09:50.806" endtime="20200629 21:09:51.125"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 21:09:52.127" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 21:09:51.126" endtime="20200629 21:09:52.128"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:50.429" endtime="20200629 21:09:52.129"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:52.130" endtime="20200629 21:09:52.500"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200629 21:09:52.503" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200629 21:09:52.502" endtime="20200629 21:09:53.023"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200629 21:09:55.026" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200629 21:09:53.024" endtime="20200629 21:09:55.026"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:50.427" endtime="20200629 21:09:55.027"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200629 21:09:55.052" endtime="20200629 21:09:57.221"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200629 21:09:57.227" level="INFO">${tc_end} = 1593479397.226901</msg>
<status status="PASS" starttime="20200629 21:09:57.226" endtime="20200629 21:09:57.227"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200629 21:09:57.229" level="INFO">${tc_duration} = 30.752243041992188</msg>
<status status="PASS" starttime="20200629 21:09:57.228" endtime="20200629 21:09:57.230"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200629 21:09:57.232" level="INFO">${tc_duration} = 0.5125373840332031</msg>
<status status="PASS" starttime="20200629 21:09:57.231" endtime="20200629 21:09:57.232"></status>
</kw>
<msg timestamp="20200629 21:09:57.233" level="INFO">${duration} = 0.5125373840332031</msg>
<status status="PASS" starttime="20200629 21:09:57.224" endtime="20200629 21:09:57.234"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200629 21:09:57.236" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200629 21:09:57.234" endtime="20200629 21:09:57.236"></status>
</kw>
<msg timestamp="20200629 21:09:57.237" level="INFO">${ElapsedTime} = 0.5125373840332031</msg>
<status status="PASS" starttime="20200629 21:09:57.222" endtime="20200629 21:09:57.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 21:09:57.239" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 21:09:57.238" endtime="20200629 21:09:57.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200629 21:09:57.241" level="INFO">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200629 21:09:57.241" endtime="20200629 21:09:57.242"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200629 21:09:57.244" level="INFO">@{listeSuiteName} = [ JMapJenkinsTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditStyleOfAnnotationTests ]</msg>
<status status="PASS" starttime="20200629 21:09:57.243" endtime="20200629 21:09:57.244"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200629 21:09:57.246" level="INFO">Length is 7</msg>
<msg timestamp="20200629 21:09:57.247" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200629 21:09:57.245" endtime="20200629 21:09:57.247"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200629 21:09:57.250" level="INFO">${suiteName} = EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200629 21:09:57.249" endtime="20200629 21:09:57.251"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200629 21:09:57.252" level="INFO">@{suiteName} = [ EditStyleOfAnnotation |  ]</msg>
<status status="PASS" starttime="20200629 21:09:57.251" endtime="20200629 21:09:57.253"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200629 21:09:57.254" level="INFO">${suiteName} = EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200629 21:09:57.253" endtime="20200629 21:09:57.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200629 21:09:57.255" level="INFO">EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200629 21:09:57.255" endtime="20200629 21:09:57.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 21:09:57.257" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 21:09:57.256" endtime="20200629 21:09:57.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200629 21:09:57.258" level="INFO">JM70-974:Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 21:09:57.258" endtime="20200629 21:09:57.259"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200629 21:09:57.260" level="INFO">@{listeTestName} = [ JM70-974 | Modify the text color of the text annotation ]</msg>
<status status="PASS" starttime="20200629 21:09:57.259" endtime="20200629 21:09:57.260"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200629 21:09:57.261" level="INFO">Length is 2</msg>
<msg timestamp="20200629 21:09:57.261" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200629 21:09:57.260" endtime="20200629 21:09:57.262"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200629 21:09:57.263" level="INFO">${tesCaseName} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 21:09:57.262" endtime="20200629 21:09:57.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200629 21:09:57.264" level="INFO">Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 21:09:57.264" endtime="20200629 21:09:57.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 21:09:57.266" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 21:09:57.265" endtime="20200629 21:09:57.266"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:57.269" endtime="20200629 21:09:59.532"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:59.532" endtime="20200629 21:09:59.534"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:59.535" endtime="20200629 21:09:59.623"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200629 21:09:59.675" level="INFO">${RESULT} = [{'sessionId': 580587272, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200629 21:09:59.624" endtime="20200629 21:09:59.676"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200629 21:09:59.677" level="INFO">${RESULT} = {'sessionId': 580587272, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200629 21:09:59.676" endtime="20200629 21:09:59.677"></status>
</kw>
<msg timestamp="20200629 21:09:59.678" level="INFO">${BODY} = {'sessionId': 580587272, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200629 21:09:57.268" endtime="20200629 21:09:59.678"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200629 21:09:59.680" level="INFO">${getSessionID} = 580587272</msg>
<status status="PASS" starttime="20200629 21:09:59.680" endtime="20200629 21:09:59.681"></status>
</kw>
<msg timestamp="20200629 21:09:59.681" level="INFO">${SESSIONID} = 580587272</msg>
<status status="PASS" starttime="20200629 21:09:59.679" endtime="20200629 21:09:59.681"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200629 21:09:59.683" level="INFO">${getBuild} = 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 21:09:59.682" endtime="20200629 21:09:59.683"></status>
</kw>
<msg timestamp="20200629 21:09:59.684" level="INFO">${buildName} = 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 21:09:59.681" endtime="20200629 21:09:59.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200629 21:09:59.685" level="INFO">${buildName} = JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 21:09:59.684" endtime="20200629 21:09:59.685"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:09:59.687" endtime="20200629 21:10:01.720"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:01.721" endtime="20200629 21:10:01.783"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:01.783" endtime="20200629 21:10:01.834"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:59.686" endtime="20200629 21:10:01.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:01.838" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:01.838" endtime="20200629 21:10:01.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 21:10:01.841" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200629 21:10:01.841" endtime="20200629 21:10:01.841"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200629 21:10:02.642" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200629 21:10:01.845" endtime="20200629 21:10:02.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:02.645" endtime="20200629 21:10:03.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 21:10:03.457" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200629 21:10:03.456" endtime="20200629 21:10:03.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:03.457" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:03.457" endtime="20200629 21:10:03.457"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:01.841" endtime="20200629 21:10:03.461"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200629 21:10:03.978" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200629 21:10:03.461" endtime="20200629 21:10:03.980"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 21:10:03.983" level="INFO">Length is 13</msg>
<msg timestamp="20200629 21:10:03.983" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200629 21:10:03.981" endtime="20200629 21:10:03.984"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200629 21:10:03.986" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200629 21:10:03.984" endtime="20200629 21:10:03.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200629 21:10:03.987" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200629 21:10:03.987" endtime="20200629 21:10:03.987"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200629 21:10:03.991" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200629 21:10:03.987" endtime="20200629 21:10:03.991"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200629 21:10:03.994" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200629 21:10:03.992" endtime="20200629 21:10:03.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:03.994" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:03.994" endtime="20200629 21:10:03.994"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200629 21:10:04.349" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200629 21:10:03.996" endtime="20200629 21:10:04.349"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 21:10:04.353" level="INFO">Length is 1</msg>
<msg timestamp="20200629 21:10:04.353" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200629 21:10:04.349" endtime="20200629 21:10:04.353"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200629 21:10:04.356" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200629 21:10:04.355" endtime="20200629 21:10:04.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200629 21:10:04.356" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200629 21:10:04.356" endtime="20200629 21:10:04.356"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200629 21:10:04.360" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200629 21:10:04.360" endtime="20200629 21:10:04.362"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200629 21:10:04.364" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200629 21:10:04.363" endtime="20200629 21:10:04.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:04.366" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:04.365" endtime="20200629 21:10:04.367"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200629 21:10:04.828" level="INFO">${latestBuild} = {'id': '887', 'testplan_id': '6381', 'name': 'JMap 7.0 Jakarta build 069', 'notes': "TFIFT-9817 JMap REST API : Get layers endpoints doesn\\'t work in proxy when layer have thematics&lt;/br&gt;TFIFT-9823 JM...</msg>
<status status="PASS" starttime="20200629 21:10:04.368" endtime="20200629 21:10:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200629 21:10:04.831" level="INFO">{'id': '887', 'testplan_id': '6381', 'name': 'JMap 7.0 Jakarta build 069', 'notes': "TFIFT-9817 JMap REST API : Get layers endpoints doesn\\'t work in proxy when layer have thematics&lt;/br&gt;TFIFT-9823 JMap Server : Mapbox URLs are truncated when using a reverse proxy&lt;/br&gt;TFIFT-9813 JMap Web : Unable to select complex elements from AutoCad if blocks have MTEXT&lt;/br&gt;TFIFT-9822 JMap Web : Unable to select a complex (Autocad block)&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-06-29 17:12:21'}</msg>
<status status="PASS" starttime="20200629 21:10:04.830" endtime="20200629 21:10:04.832"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 21:10:04.834" level="INFO">Length is 9</msg>
<msg timestamp="20200629 21:10:04.834" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200629 21:10:04.833" endtime="20200629 21:10:04.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200629 21:10:04.835" level="INFO">${latestBuildID} = 887</msg>
<status status="PASS" starttime="20200629 21:10:04.835" endtime="20200629 21:10:04.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200629 21:10:04.839" level="INFO">${latestBuildNAME} = JMap 7.0 Jakarta build 069</msg>
<status status="PASS" starttime="20200629 21:10:04.835" endtime="20200629 21:10:04.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${CurrentBuildName}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:04.839" endtime="20200629 21:10:04.843"></status>
</kw>
<msg timestamp="20200629 21:10:04.843" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 21:10:04.839" endtime="20200629 21:10:04.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200629 21:10:04.843" level="INFO">JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 21:10:04.843" endtime="20200629 21:10:04.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:04.847" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:04.846" endtime="20200629 21:10:04.848"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200629 21:10:05.310" level="INFO">@{testCases} = [ {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'} ]</msg>
<status status="PASS" starttime="20200629 21:10:04.849" endtime="20200629 21:10:05.310"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 21:10:05.311" level="INFO">Length is 1</msg>
<msg timestamp="20200629 21:10:05.313" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200629 21:10:05.311" endtime="20200629 21:10:05.314"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.318" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 21:10:05.316" endtime="20200629 21:10:05.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.319" endtime="20200629 21:10:05.319"></status>
</kw>
<msg timestamp="20200629 21:10:05.323" level="INFO">${testCase} = {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 21:10:05.319" endtime="20200629 21:10:05.323"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200629 21:10:05.323" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200629 21:10:05.323" endtime="20200629 21:10:05.323"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.316" endtime="20200629 21:10:05.327"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.315" endtime="20200629 21:10:05.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.327" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 21:10:05.327" endtime="20200629 21:10:05.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200629 21:10:05.332" level="INFO">${testCaseNAME} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 21:10:05.330" endtime="20200629 21:10:05.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200629 21:10:05.334" level="INFO">${testCaseID} = 8694</msg>
<status status="PASS" starttime="20200629 21:10:05.333" endtime="20200629 21:10:05.334"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200629 21:10:05.334" level="INFO">${testCaseExternalID} = 974</msg>
<status status="PASS" starttime="20200629 21:10:05.334" endtime="20200629 21:10:05.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 21:10:05.338" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 21:10:05.334" endtime="20200629 21:10:05.339"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 21:10:05.339" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200629 21:10:05.339" endtime="20200629 21:10:05.339"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200629 21:10:05.339" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200629 21:10:05.339" endtime="20200629 21:10:05.343"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.343" endtime="20200629 21:10:05.701"></status>
</kw>
<msg timestamp="20200629 21:10:05.702" level="INFO">@{getExecution} = [ PASS | [{'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200629 21:10:05.343" endtime="20200629 21:10:05.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.702" level="INFO">---- &gt; ['PASS', [{'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200629 21:10:05.702" endtime="20200629 21:10:05.702"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200629 21:10:05.706" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200629 21:10:05.706" endtime="20200629 21:10:05.706"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200629 21:10:05.710" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200629 21:10:05.706" endtime="20200629 21:10:05.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.713" endtime="20200629 21:10:05.714"></status>
</kw>
<msg timestamp="20200629 21:10:05.715" level="INFO">@{getExecution} = [ PASS | [{'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200629 21:10:05.710" endtime="20200629 21:10:05.715"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 21:10:05.717" level="INFO">Length is 2</msg>
<msg timestamp="20200629 21:10:05.717" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200629 21:10:05.716" endtime="20200629 21:10:05.717"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 21:10:05.717" level="INFO">${lastExecution} = [{'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200629 21:10:05.717" endtime="20200629 21:10:05.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.721" endtime="20200629 21:10:05.725"></status>
</kw>
<msg timestamp="20200629 21:10:05.725" level="INFO">${idBuild} = 348399</msg>
<status status="PASS" starttime="20200629 21:10:05.721" endtime="20200629 21:10:05.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.725" level="INFO">----- &gt; ID of Build(159) : 348399</msg>
<status status="PASS" starttime="20200629 21:10:05.725" endtime="20200629 21:10:05.729"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.725" endtime="20200629 21:10:05.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200629 21:10:05.731" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200629 21:10:05.731" endtime="20200629 21:10:05.731"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 21:10:05.733" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200629 21:10:05.732" endtime="20200629 21:10:05.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 21:10:05.734" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200629 21:10:05.733" endtime="20200629 21:10:05.734"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.738" endtime="20200629 21:10:05.738"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.734" endtime="20200629 21:10:05.738"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.734" endtime="20200629 21:10:05.738"></status>
</kw>
<msg timestamp="20200629 21:10:05.738" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200629 21:10:05.734" endtime="20200629 21:10:05.738"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200629 21:10:05.738" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200629 21:10:05.738" endtime="20200629 21:10:05.742"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.343" endtime="20200629 21:10:05.742"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.343" endtime="20200629 21:10:05.742"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 21:10:05.742" level="INFO">Length is 1</msg>
<msg timestamp="20200629 21:10:05.742" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200629 21:10:05.742" endtime="20200629 21:10:05.742"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 21:10:05.742" level="INFO">${lastExecution} = {'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200629 21:10:05.742" endtime="20200629 21:10:05.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 21:10:05.746" level="INFO">-----&gt; Last execution : {'id': '348399', 'build_id': '886', 'tester_id': '9', 'execution_ts': '2020-06-29 22:01:36', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.48', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200629 21:10:05.746" endtime="20200629 21:10:05.747"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200629 21:10:05.748" level="INFO">${lastExecutionID} = 348399</msg>
<status status="PASS" starttime="20200629 21:10:05.748" endtime="20200629 21:10:05.748"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.750" endtime="20200629 21:10:05.750"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200629 21:10:05.755" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 21:10:05.755" endtime="20200629 21:10:05.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200629 21:10:05.755" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200629 21:10:05.755" endtime="20200629 21:10:05.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200629 21:10:05.755" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200629 21:10:05.755" endtime="20200629 21:10:05.759"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200629 21:10:05.759" level="INFO">Length is 2</msg>
<msg timestamp="20200629 21:10:05.759" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200629 21:10:05.759" endtime="20200629 21:10:05.759"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200629 21:10:05.759" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200629 21:10:05.759" endtime="20200629 21:10:05.759"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.765" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200629 21:10:05.764" endtime="20200629 21:10:05.765"></status>
</kw>
<msg timestamp="20200629 21:10:05.765" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 21:10:05.763" endtime="20200629 21:10:05.765"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200629 21:10:05.766" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 21:10:05.766" endtime="20200629 21:10:05.767"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.767" endtime="20200629 21:10:05.767"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.759" endtime="20200629 21:10:05.767"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.769" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200629 21:10:05.768" endtime="20200629 21:10:05.769"></status>
</kw>
<msg timestamp="20200629 21:10:05.769" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 21:10:05.768" endtime="20200629 21:10:05.769"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200629 21:10:05.770" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 21:10:05.769" endtime="20200629 21:10:05.770"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.770" endtime="20200629 21:10:05.770"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.768" endtime="20200629 21:10:05.770"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.759" endtime="20200629 21:10:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200629 21:10:05.771" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200629 21:10:05.771" endtime="20200629 21:10:05.771"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200629 21:10:05.772" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200629 21:10:05.772" endtime="20200629 21:10:05.772"></status>
</kw>
<msg timestamp="20200629 21:10:05.773" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200629 21:10:05.771" endtime="20200629 21:10:05.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.773" endtime="20200629 21:10:05.774"></status>
</kw>
<msg timestamp="20200629 21:10:05.774" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200629 21:10:05.773" endtime="20200629 21:10:05.774"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.775" endtime="20200629 21:10:05.775"></status>
</kw>
<msg timestamp="20200629 21:10:05.775" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200629 21:10:05.774" endtime="20200629 21:10:05.775"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200629 21:10:05.776" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200629 21:10:05.775" endtime="20200629 21:10:05.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.777" endtime="20200629 21:10:05.777"></status>
</kw>
<msg timestamp="20200629 21:10:05.777" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 21:10:05.776" endtime="20200629 21:10:05.777"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200629 21:10:05.777" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 21:10:05.777" endtime="20200629 21:10:05.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:05.780" endtime="20200629 21:10:06.230"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.780" endtime="20200629 21:10:06.231"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.754" endtime="20200629 21:10:06.231"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.750" endtime="20200629 21:10:06.233"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.750" endtime="20200629 21:10:06.233"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:05.748" endtime="20200629 21:10:06.233"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 21:10:06.233" endtime="20200629 21:10:06.237"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:01.841" endtime="20200629 21:10:06.237"></status>
</kw>
<status status="PASS" starttime="20200629 21:10:01.840" endtime="20200629 21:10:06.237"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:55.028" endtime="20200629 21:10:06.237"></status>
</kw>
<status status="PASS" starttime="20200629 21:09:50.426" endtime="20200629 21:10:06.241"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200629 21:09:26.473" endtime="20200629 21:10:06.241" critical="yes"></status>
</test>
<doc>Edit Style Annotation Test cases</doc>
<metadata>
<item name="author">Mordjane Boussad</item>
</metadata>
<status status="PASS" starttime="20200629 21:09:25.812" endtime="20200629 21:10:06.241"></status>
</suite>
<status status="PASS" starttime="20200629 21:09:25.810" endtime="20200629 21:10:06.250"></status>
</suite>
<status status="PASS" starttime="20200629 21:09:25.808" endtime="20200629 21:10:06.254"></status>
</suite>
<status status="PASS" starttime="20200629 21:09:25.806" endtime="20200629 21:10:06.258"></status>
</suite>
<status status="PASS" starttime="20200629 21:09:25.805" endtime="20200629 21:10:06.266"></status>
</suite>
<status status="PASS" starttime="20200629 21:09:25.785" endtime="20200629 21:10:06.268"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Time Out</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="JMapJenkinsTests">JMapJenkinsTests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">JMapJenkinsTests.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Jmap 7.0">JMapJenkinsTests.Tests.Jmap 7.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="jmapWeb">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="Manage Annotations">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200629 21:09:25.690" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-974:Modify the text color of the text annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 120.</msg>
<msg timestamp="20200629 21:09:25.690" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-975:Modify the font size of the text annotation with valid data' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 136.</msg>
<msg timestamp="20200629 21:09:25.692" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-979:Modify the line color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 215.</msg>
<msg timestamp="20200629 21:09:25.694" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-980:Modify the fill color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 231.</msg>
<msg timestamp="20200629 21:09:26.027" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 21:09:26.027" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 21:09:26.027" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 21:09:43.844" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
</errors>
</robot>
