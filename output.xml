<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200713 18:58:41.207" rpa="false">
<suite id="s1" name="JMapJenkinsTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="DeleteAnAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\DeleteAnAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-918:Delete a Rectangle annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200713 18:58:41.815" level="INFO">${tc_start} = 1594681121.814756</msg>
<status status="PASS" starttime="20200713 18:58:41.815" endtime="20200713 18:58:41.815"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200713 18:58:41.816" level="INFO">${tc_start} = 1594681121.814756</msg>
<status status="PASS" starttime="20200713 18:58:41.815" endtime="20200713 18:58:41.816"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:41.814" endtime="20200713 18:58:41.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Browser}'=='Chrome'</arg>
<arg>Open Chrome</arg>
<arg>ELSE IF</arg>
<arg>'${Browser}'=='Firefox'</arg>
<arg>Open Firefox</arg>
<arg>ELSE</arg>
<arg>Open Edge</arg>
</arguments>
<kw name="Open Chrome" library="CommonLogin">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
</arguments>
<assign>
<var>${chrome_options}</var>
</assign>
<msg timestamp="20200713 18:58:41.817" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002423D716F98&gt;</msg>
<status status="PASS" starttime="20200713 18:58:41.817" endtime="20200713 18:58:41.817"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:41.818" endtime="20200713 18:58:41.818"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
<arg>chrome_options=${chrome_options}</arg>
</arguments>
<msg timestamp="20200713 18:58:41.818" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20200713 18:58:41.818" endtime="20200713 18:58:44.882"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:41.817" endtime="20200713 18:58:44.883"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:41.816" endtime="20200713 18:58:44.884"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
</arguments>
<msg timestamp="20200713 18:58:44.886" level="INFO">Opening url 'http://localhost:8081/JMap_Web_WorldTest_HTTP'</msg>
<status status="PASS" starttime="20200713 18:58:44.885" endtime="20200713 18:58:45.276"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:45.276" endtime="20200713 18:58:47.410"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200713 18:58:47.411" endtime="20200713 18:58:47.576"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:41.814" endtime="20200713 18:58:47.576"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.577" endtime="20200713 18:58:47.600"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.600" endtime="20200713 18:58:47.630"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.630" endtime="20200713 18:58:47.661"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.662" endtime="20200713 18:58:47.663"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.664" endtime="20200713 18:58:47.682"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:47.663" endtime="20200713 18:58:47.682"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:47.682" endtime="20200713 18:58:47.701"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200713 18:58:47.701" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200713 18:58:47.701" endtime="20200713 18:58:47.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:58:48.756" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:47.754" endtime="20200713 18:58:48.757"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:47.662" endtime="20200713 18:58:48.757"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:48.761" endtime="20200713 18:58:48.762"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:48.763" endtime="20200713 18:58:48.781"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:48.762" endtime="20200713 18:58:48.781"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:48.781" endtime="20200713 18:58:48.800"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200713 18:58:48.800" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200713 18:58:48.800" endtime="20200713 18:58:48.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:58:49.876" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:48.875" endtime="20200713 18:58:49.877"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:48.758" endtime="20200713 18:58:49.877"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200713 18:58:49.880" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200713 18:58:49.878" endtime="20200713 18:58:50.259"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:58:51.261" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:50.260" endtime="20200713 18:58:51.261"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:47.576" endtime="20200713 18:58:51.261"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:41.814" endtime="20200713 18:58:51.261"></status>
</kw>
<kw name="Draw a Rectangle annotation" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a line annotation</doc>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:51.262" endtime="20200713 18:58:51.264"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200713 18:58:51.272" level="INFO">Page title is 'JMap_Web_WorldTest_HTTP'.</msg>
<status status="PASS" starttime="20200713 18:58:51.264" endtime="20200713 18:58:51.272"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.264" endtime="20200713 18:58:51.272"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.262" endtime="20200713 18:58:51.273"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.262" endtime="20200713 18:58:51.273"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:51.274" endtime="20200713 18:58:51.297"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.273" endtime="20200713 18:58:51.297"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200713 18:58:51.297" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200713 18:58:51.297" endtime="20200713 18:58:51.330"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.273" endtime="20200713 18:58:51.331"></status>
</kw>
<kw name="Click On Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Click on rectangle annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:51.331" endtime="20200713 18:58:51.566"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.331" endtime="20200713 18:58:51.567"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='rectangle_FreeDrawingTrigger']</arg>
</arguments>
<msg timestamp="20200713 18:58:51.567" level="INFO">Clicking element 'xpath://div[@id='rectangle_FreeDrawingTrigger']'.</msg>
<status status="PASS" starttime="20200713 18:58:51.567" endtime="20200713 18:58:51.618"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.331" endtime="20200713 18:58:51.619"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Rectangle</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:51.620" endtime="20200713 18:58:51.650"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.619" endtime="20200713 18:58:51.650"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200713 18:58:51.663" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Rectangle'.</msg>
<status status="PASS" starttime="20200713 18:58:51.651" endtime="20200713 18:58:51.663"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.651" endtime="20200713 18:58:51.663"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.619" endtime="20200713 18:58:51.664"></status>
</kw>
<kw name="Draw With Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Draw a Rectangle Annotation</doc>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:51.665" endtime="20200713 18:58:51.687"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.664" endtime="20200713 18:58:51.687"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:51.687" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200713 18:58:51.687" endtime="20200713 18:58:52.284"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.664" endtime="20200713 18:58:52.284"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:52.285" endtime="20200713 18:58:52.319"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.285" endtime="20200713 18:58:52.319"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:52.319" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200713 18:58:52.319" endtime="20200713 18:58:52.844"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.285" endtime="20200713 18:58:52.844"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>0</arg>
<arg>0</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:52.846" endtime="20200713 18:58:52.861"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.845" endtime="20200713 18:58:52.861"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:52.862" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200713 18:58:52.861" endtime="20200713 18:58:53.381"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.845" endtime="20200713 18:58:53.382"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.845" endtime="20200713 18:58:53.382"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:53.383" endtime="20200713 18:58:53.399"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:53.382" endtime="20200713 18:58:53.399"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:53.400" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=0, y=0.</msg>
<status status="PASS" starttime="20200713 18:58:53.400" endtime="20200713 18:58:53.922"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:53.382" endtime="20200713 18:58:53.922"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:53.382" endtime="20200713 18:58:53.922"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.845" endtime="20200713 18:58:53.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:58:54.923" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:53.923" endtime="20200713 18:58:54.923"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:52.844" endtime="20200713 18:58:54.923"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.664" endtime="20200713 18:58:54.923"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:51.261" endtime="20200713 18:58:54.923"></status>
</kw>
<kw name="Click On Modification Icon" library="CommonAnnotationWeb">
<doc>Click on annotation modification tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:54.925" endtime="20200713 18:58:54.944"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:54.924" endtime="20200713 18:58:54.945"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ModifyTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200713 18:58:54.945" level="INFO">Clicking element 'xpath://div[@class='ModifyTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200713 18:58:54.945" endtime="20200713 18:58:54.984"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:54.924" endtime="20200713 18:58:54.984"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:54.985" endtime="20200713 18:58:55.005"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:54.985" endtime="20200713 18:58:55.005"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:55.006" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200713 18:58:55.005" endtime="20200713 18:58:55.537"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:54.985" endtime="20200713 18:58:55.538"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:54.984" endtime="20200713 18:58:55.538"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:55.539" endtime="20200713 18:58:55.990"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:55.539" endtime="20200713 18:58:55.990"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200713 18:58:56.003" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200713 18:58:55.991" endtime="20200713 18:58:56.003"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:55.991" endtime="20200713 18:58:56.003"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:55.538" endtime="20200713 18:58:56.003"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:56.004" endtime="20200713 18:58:56.019"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.004" endtime="20200713 18:58:56.019"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200713 18:58:56.033" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200713 18:58:56.020" endtime="20200713 18:58:56.033"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.020" endtime="20200713 18:58:56.033"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.003" endtime="20200713 18:58:56.033"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>100</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:56.034" endtime="20200713 18:58:56.049"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.034" endtime="20200713 18:58:56.049"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:56.050" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=100.</msg>
<status status="PASS" starttime="20200713 18:58:56.050" endtime="20200713 18:58:56.578"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.033" endtime="20200713 18:58:56.578"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:56.579" endtime="20200713 18:58:56.599"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.579" endtime="20200713 18:58:56.599"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200713 18:58:56.600" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200713 18:58:56.599" endtime="20200713 18:58:56.645"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.579" endtime="20200713 18:58:56.646"></status>
</kw>
<kw name="Verify Alert Text And Cancel" library="CommonWeb">
<doc>Check for the Alert message and Cancel the popup</doc>
<arguments>
<arg>Erase all annotations?</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Alert Should Be Present</arg>
<arg>text=${text}</arg>
<arg>action=DISMISS</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="Alert Should Be Present" library="SeleniumLibrary">
<doc>Verifies that an alert is present and by default, accepts it.</doc>
<arguments>
<arg>text=${text}</arg>
<arg>action=DISMISS</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:56.646" endtime="20200713 18:58:56.650"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.646" endtime="20200713 18:58:56.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:58:57.652" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:56.650" endtime="20200713 18:58:57.652"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:56.646" endtime="20200713 18:58:57.652"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:57.654" endtime="20200713 18:58:57.670"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:57.654" endtime="20200713 18:58:57.670"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:57.670" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200713 18:58:57.670" endtime="20200713 18:58:58.206"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:57.653" endtime="20200713 18:58:58.207"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:57.653" endtime="20200713 18:58:58.207"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:58.208" endtime="20200713 18:58:58.461"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.208" endtime="20200713 18:58:58.461"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200713 18:58:58.476" level="INFO">Element '//div[@name='rotateRight']' is displayed.</msg>
<status status="PASS" starttime="20200713 18:58:58.462" endtime="20200713 18:58:58.476"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.461" endtime="20200713 18:58:58.476"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.207" endtime="20200713 18:58:58.476"></status>
</kw>
<kw name="The Icone Rotate left Should be Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon to be present</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:58.477" endtime="20200713 18:58:58.490"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.477" endtime="20200713 18:58:58.490"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200713 18:58:58.503" level="INFO">Element '//div[@name='rotateLeft']' is displayed.</msg>
<status status="PASS" starttime="20200713 18:58:58.491" endtime="20200713 18:58:58.503"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.491" endtime="20200713 18:58:58.503"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.477" endtime="20200713 18:58:58.504"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>100</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:58.504" endtime="20200713 18:58:58.518"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.504" endtime="20200713 18:58:58.518"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:58:58.518" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=100.</msg>
<status status="PASS" starttime="20200713 18:58:58.518" endtime="20200713 18:58:59.044"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:58.504" endtime="20200713 18:58:59.044"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:59.045" endtime="20200713 18:58:59.060"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:59.045" endtime="20200713 18:58:59.060"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200713 18:58:59.060" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200713 18:58:59.060" endtime="20200713 18:58:59.085"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:59.045" endtime="20200713 18:58:59.086"></status>
</kw>
<kw name="Verify Alert Text And Accept" library="CommonWeb">
<doc>Check for the Alert message and Accept the popup</doc>
<arguments>
<arg>Erase all annotations?</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Alert Should Be Present</arg>
<arg>text=${AlertMsg}</arg>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="Alert Should Be Present" library="SeleniumLibrary">
<doc>Verifies that an alert is present and by default, accepts it.</doc>
<arguments>
<arg>text=${AlertMsg}</arg>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:58:59.087" endtime="20200713 18:58:59.091"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:59.086" endtime="20200713 18:58:59.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; The Alert message is REALLY: ${AlertMsg}</arg>
</arguments>
<msg timestamp="20200713 18:58:59.092" level="INFO">-----&gt; The Alert message is REALLY: Erase all annotations?</msg>
<status status="PASS" starttime="20200713 18:58:59.092" endtime="20200713 18:58:59.092"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:59:00.093" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:58:59.092" endtime="20200713 18:59:00.094"></status>
</kw>
<status status="PASS" starttime="20200713 18:58:59.086" endtime="20200713 18:59:00.095"></status>
</kw>
<kw name="Select The Drawing Tool Rectangle Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Rectangle Annotation clicking over</doc>
<arguments>
<arg>115</arg>
<arg>-70</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:00.101" endtime="20200713 18:59:00.117"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:00.099" endtime="20200713 18:59:00.118"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200713 18:59:00.118" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=115, y=-70.</msg>
<status status="PASS" starttime="20200713 18:59:00.118" endtime="20200713 18:59:00.653"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:00.097" endtime="20200713 18:59:00.653"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:00.095" endtime="20200713 18:59:00.653"></status>
</kw>
<kw name="The Icone Rotate Right Should Be Not Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate right icon not to be present</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateRight']</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20200713 18:59:03.811" endtime="20200713 18:59:03.813"></status>
</kw>
<msg timestamp="20200713 18:59:03.823" level="FAIL">Element 'xpath://div[@name='rotateRight']' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20200713 18:59:00.654" endtime="20200713 18:59:03.824"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:00.654" endtime="20200713 18:59:03.825"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>//div[@name='rotateRight']</arg>
</arguments>
<msg timestamp="20200713 18:59:03.841" level="INFO">Element '//div[@name='rotateRight']' exists but is not displayed.</msg>
<status status="PASS" starttime="20200713 18:59:03.827" endtime="20200713 18:59:03.841"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:03.826" endtime="20200713 18:59:03.842"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:00.654" endtime="20200713 18:59:03.842"></status>
</kw>
<kw name="The Icone Rotate left Should be Not Exist" library="CommonAnnotationWeb">
<doc>Check for the Rotate left icon not to be present</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@name='rotateLeft']</arg>
<arg>timeout=3s</arg>
</arguments>
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<status status="PASS" starttime="20200713 18:59:06.964" endtime="20200713 18:59:06.964"></status>
</kw>
<msg timestamp="20200713 18:59:06.965" level="FAIL">Element 'xpath://div[@name='rotateLeft']' not visible after 3 seconds.</msg>
<status status="FAIL" starttime="20200713 18:59:03.843" endtime="20200713 18:59:06.965"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:03.842" endtime="20200713 18:59:06.965"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>//div[@name='rotateLeft']</arg>
</arguments>
<msg timestamp="20200713 18:59:06.978" level="INFO">Element '//div[@name='rotateLeft']' exists but is not displayed.</msg>
<status status="PASS" starttime="20200713 18:59:06.966" endtime="20200713 18:59:06.979"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:06.965" endtime="20200713 18:59:06.979"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:03.842" endtime="20200713 18:59:06.979"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:06.980" endtime="20200713 18:59:07.000"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200713 18:59:07.000" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200713 18:59:07.000" endtime="20200713 18:59:07.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200713 18:59:08.053" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200713 18:59:07.053" endtime="20200713 18:59:08.053"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:06.980" endtime="20200713 18:59:08.054"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:08.054" endtime="20200713 18:59:08.100"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200713 18:59:08.101" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200713 18:59:08.100" endtime="20200713 18:59:08.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200713 18:59:10.275" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200713 18:59:08.274" endtime="20200713 18:59:10.275"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:06.979" endtime="20200713 18:59:10.275"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200713 18:59:10.276" endtime="20200713 18:59:12.377"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200713 18:59:12.383" level="INFO">${tc_end} = 1594681152.382603</msg>
<status status="PASS" starttime="20200713 18:59:12.382" endtime="20200713 18:59:12.383"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200713 18:59:12.385" level="INFO">${tc_duration} = 30.56784701347351</msg>
<status status="PASS" starttime="20200713 18:59:12.384" endtime="20200713 18:59:12.385"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200713 18:59:12.385" level="INFO">${tc_duration} = 0.5094641168912252</msg>
<status status="PASS" starttime="20200713 18:59:12.385" endtime="20200713 18:59:12.385"></status>
</kw>
<msg timestamp="20200713 18:59:12.386" level="INFO">${duration} = 0.5094641168912252</msg>
<status status="PASS" starttime="20200713 18:59:12.380" endtime="20200713 18:59:12.386"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200713 18:59:12.386" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200713 18:59:12.386" endtime="20200713 18:59:12.386"></status>
</kw>
<msg timestamp="20200713 18:59:12.387" level="INFO">${ElapsedTime} = 0.5094641168912252</msg>
<status status="PASS" starttime="20200713 18:59:12.378" endtime="20200713 18:59:12.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:12.387" level="INFO">================================================</msg>
<status status="PASS" starttime="20200713 18:59:12.387" endtime="20200713 18:59:12.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200713 18:59:12.388" level="INFO">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.DeleteAnAnnotationTests</msg>
<status status="PASS" starttime="20200713 18:59:12.387" endtime="20200713 18:59:12.388"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200713 18:59:12.389" level="INFO">@{listeSuiteName} = [ JMapJenkinsTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | DeleteAnAnnotationTests ]</msg>
<status status="PASS" starttime="20200713 18:59:12.388" endtime="20200713 18:59:12.389"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200713 18:59:12.389" level="INFO">Length is 7</msg>
<msg timestamp="20200713 18:59:12.389" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200713 18:59:12.389" endtime="20200713 18:59:12.389"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200713 18:59:12.390" level="INFO">${suiteName} = DeleteAnAnnotationTests</msg>
<status status="PASS" starttime="20200713 18:59:12.390" endtime="20200713 18:59:12.390"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200713 18:59:12.391" level="INFO">@{suiteName} = [ DeleteAnAnnotation |  ]</msg>
<status status="PASS" starttime="20200713 18:59:12.390" endtime="20200713 18:59:12.391"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200713 18:59:12.391" level="INFO">${suiteName} = DeleteAnAnnotation</msg>
<status status="PASS" starttime="20200713 18:59:12.391" endtime="20200713 18:59:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200713 18:59:12.392" level="INFO">DeleteAnAnnotation</msg>
<status status="PASS" starttime="20200713 18:59:12.391" endtime="20200713 18:59:12.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:12.392" level="INFO">================================================</msg>
<status status="PASS" starttime="20200713 18:59:12.392" endtime="20200713 18:59:12.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200713 18:59:12.393" level="INFO">JM70-918:Delete a Rectangle annotation</msg>
<status status="PASS" starttime="20200713 18:59:12.392" endtime="20200713 18:59:12.393"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200713 18:59:12.393" level="INFO">@{listeTestName} = [ JM70-918 | Delete a Rectangle annotation ]</msg>
<status status="PASS" starttime="20200713 18:59:12.393" endtime="20200713 18:59:12.393"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200713 18:59:12.394" level="INFO">Length is 2</msg>
<msg timestamp="20200713 18:59:12.394" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200713 18:59:12.393" endtime="20200713 18:59:12.394"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200713 18:59:12.394" level="INFO">${tesCaseName} = Delete a Rectangle annotation</msg>
<status status="PASS" starttime="20200713 18:59:12.394" endtime="20200713 18:59:12.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200713 18:59:12.395" level="INFO">Delete a Rectangle annotation</msg>
<status status="PASS" starttime="20200713 18:59:12.394" endtime="20200713 18:59:12.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:12.395" level="INFO">================================================</msg>
<status status="PASS" starttime="20200713 18:59:12.395" endtime="20200713 18:59:12.395"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:12.396" endtime="20200713 18:59:14.494"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:14.494" endtime="20200713 18:59:14.495"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:14.495" endtime="20200713 18:59:14.516"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200713 18:59:14.534" level="INFO">${RESULT} = [{'sessionId': 2124175193, 'serverVersion': '7.0 Istanbul build 166', 'userFullName': 'userTest1', 'sessionExceed': False, 'userEmailAddress': ''}]</msg>
<status status="PASS" starttime="20200713 18:59:14.516" endtime="20200713 18:59:14.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200713 18:59:14.534" level="INFO">${RESULT} = {'sessionId': 2124175193, 'serverVersion': '7.0 Istanbul build 166', 'userFullName': 'userTest1', 'sessionExceed': False, 'userEmailAddress': ''}</msg>
<status status="PASS" starttime="20200713 18:59:14.534" endtime="20200713 18:59:14.534"></status>
</kw>
<msg timestamp="20200713 18:59:14.534" level="INFO">${BODY} = {'sessionId': 2124175193, 'serverVersion': '7.0 Istanbul build 166', 'userFullName': 'userTest1', 'sessionExceed': False, 'userEmailAddress': ''}</msg>
<status status="PASS" starttime="20200713 18:59:12.396" endtime="20200713 18:59:14.534"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200713 18:59:14.535" level="INFO">${getSessionID} = 2124175193</msg>
<status status="PASS" starttime="20200713 18:59:14.535" endtime="20200713 18:59:14.535"></status>
</kw>
<msg timestamp="20200713 18:59:14.535" level="INFO">${SESSIONID} = 2124175193</msg>
<status status="PASS" starttime="20200713 18:59:14.534" endtime="20200713 18:59:14.535"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200713 18:59:14.536" level="INFO">${getBuild} = 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:14.536" endtime="20200713 18:59:14.536"></status>
</kw>
<msg timestamp="20200713 18:59:14.536" level="INFO">${buildName} = 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:14.536" endtime="20200713 18:59:14.536"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200713 18:59:14.537" level="INFO">${buildName} = JMap 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:14.537" endtime="20200713 18:59:14.537"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:14.537" endtime="20200713 18:59:16.556"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:16.557" endtime="20200713 18:59:16.594"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:16.594" endtime="20200713 18:59:16.611"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:14.537" endtime="20200713 18:59:16.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:16.612" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:16.612" endtime="20200713 18:59:16.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200713 18:59:16.614" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200713 18:59:16.613" endtime="20200713 18:59:16.614"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200713 18:59:17.199" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200713 18:59:16.614" endtime="20200713 18:59:17.200"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:17.201" endtime="20200713 18:59:17.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200713 18:59:17.851" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200713 18:59:17.850" endtime="20200713 18:59:17.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:17.852" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:17.852" endtime="20200713 18:59:17.852"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:16.613" endtime="20200713 18:59:17.852"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200713 18:59:18.401" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200713 18:59:17.852" endtime="20200713 18:59:18.402"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200713 18:59:18.404" level="INFO">Length is 13</msg>
<msg timestamp="20200713 18:59:18.404" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200713 18:59:18.403" endtime="20200713 18:59:18.405"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200713 18:59:18.407" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200713 18:59:18.405" endtime="20200713 18:59:18.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200713 18:59:18.409" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200713 18:59:18.408" endtime="20200713 18:59:18.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200713 18:59:18.411" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200713 18:59:18.410" endtime="20200713 18:59:18.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200713 18:59:18.414" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200713 18:59:18.412" endtime="20200713 18:59:18.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:18.416" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:18.415" endtime="20200713 18:59:18.416"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200713 18:59:18.730" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200713 18:59:18.417" endtime="20200713 18:59:18.730"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200713 18:59:18.732" level="INFO">Length is 1</msg>
<msg timestamp="20200713 18:59:18.733" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200713 18:59:18.731" endtime="20200713 18:59:18.733"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200713 18:59:18.733" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200713 18:59:18.733" endtime="20200713 18:59:18.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200713 18:59:18.734" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200713 18:59:18.734" endtime="20200713 18:59:18.734"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200713 18:59:18.734" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200713 18:59:18.734" endtime="20200713 18:59:18.735"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200713 18:59:18.735" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200713 18:59:18.735" endtime="20200713 18:59:18.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:18.736" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:18.735" endtime="20200713 18:59:18.736"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200713 18:59:19.126" level="INFO">${latestBuild} = {'id': '898', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 166', 'notes': '&lt;div&gt;\n\t[TFIFT-9820] JMap Web : An error occurred when edit an element that contains a Calendar component and the...</msg>
<status status="PASS" starttime="20200713 18:59:18.736" endtime="20200713 18:59:19.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.129" level="INFO">{'id': '898', 'testplan_id': '6381', 'name': 'JMap 7.0 Istanbul build 166', 'notes': '&lt;div&gt;\n\t[TFIFT-9820] JMap Web : An error occurred when edit an element that contains a Calendar component and the date value becomes null&lt;/div&gt;\n&lt;div&gt;\n\t[TFIFT-9804] JMap Server : Get layer elements by passing a filter parameter returns all elements with only one filter&lt;/div&gt;\n', 'active': '1', 'is_open': '1', 'release_date': '2020-07-13', 'closed_on_date': '', 'creation_ts': '2020-07-13 15:53:11'}</msg>
<status status="PASS" starttime="20200713 18:59:19.127" endtime="20200713 18:59:19.129"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200713 18:59:19.131" level="INFO">Length is 9</msg>
<msg timestamp="20200713 18:59:19.131" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200713 18:59:19.130" endtime="20200713 18:59:19.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200713 18:59:19.134" level="INFO">${latestBuildID} = 898</msg>
<status status="PASS" starttime="20200713 18:59:19.133" endtime="20200713 18:59:19.134"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200713 18:59:19.136" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:19.135" endtime="20200713 18:59:19.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.140" endtime="20200713 18:59:19.140"></status>
</kw>
<msg timestamp="20200713 18:59:19.140" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:19.138" endtime="20200713 18:59:19.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.141" level="INFO">JMap 7.0 Istanbul build 166</msg>
<status status="PASS" starttime="20200713 18:59:19.141" endtime="20200713 18:59:19.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:19.141" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:19.141" endtime="20200713 18:59:19.141"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200713 18:59:19.507" level="INFO">@{testCases} = [ {'id': '8578', 'name': 'Delete a Rectangle annotation', 'parent_id': '8555', 'tsuite_name': 'DeleteAnAnnotation', 'tc_external_id': '918'} ]</msg>
<status status="PASS" starttime="20200713 18:59:19.141" endtime="20200713 18:59:19.507"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200713 18:59:19.508" level="INFO">Length is 1</msg>
<msg timestamp="20200713 18:59:19.508" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200713 18:59:19.507" endtime="20200713 18:59:19.508"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.510" level="INFO">{'id': '8578', 'name': 'Delete a Rectangle annotation', 'parent_id': '8555', 'tsuite_name': 'DeleteAnAnnotation', 'tc_external_id': '918'}</msg>
<status status="PASS" starttime="20200713 18:59:19.509" endtime="20200713 18:59:19.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.511" endtime="20200713 18:59:19.512"></status>
</kw>
<msg timestamp="20200713 18:59:19.512" level="INFO">${testCase} = {'id': '8578', 'name': 'Delete a Rectangle annotation', 'parent_id': '8555', 'tsuite_name': 'DeleteAnAnnotation', 'tc_external_id': '918'}</msg>
<status status="PASS" starttime="20200713 18:59:19.510" endtime="20200713 18:59:19.512"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200713 18:59:19.514" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200713 18:59:19.513" endtime="20200713 18:59:19.514"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.509" endtime="20200713 18:59:19.514"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.508" endtime="20200713 18:59:19.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.515" level="INFO">{'id': '8578', 'name': 'Delete a Rectangle annotation', 'parent_id': '8555', 'tsuite_name': 'DeleteAnAnnotation', 'tc_external_id': '918'}</msg>
<status status="PASS" starttime="20200713 18:59:19.515" endtime="20200713 18:59:19.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200713 18:59:19.517" level="INFO">${testCaseNAME} = Delete a Rectangle annotation</msg>
<status status="PASS" starttime="20200713 18:59:19.516" endtime="20200713 18:59:19.517"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200713 18:59:19.518" level="INFO">${testCaseID} = 8578</msg>
<status status="PASS" starttime="20200713 18:59:19.517" endtime="20200713 18:59:19.518"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200713 18:59:19.519" level="INFO">${testCaseExternalID} = 918</msg>
<status status="PASS" starttime="20200713 18:59:19.518" endtime="20200713 18:59:19.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200713 18:59:19.520" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200713 18:59:19.520" endtime="20200713 18:59:19.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200713 18:59:19.521" level="INFO">${numVersion} = 166</msg>
<status status="PASS" starttime="20200713 18:59:19.521" endtime="20200713 18:59:19.522"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200713 18:59:19.523" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200713 18:59:19.522" endtime="20200713 18:59:19.523"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.524" endtime="20200713 18:59:19.846"></status>
</kw>
<msg timestamp="20200713 18:59:19.847" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200713 18:59:19.524" endtime="20200713 18:59:19.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.849" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200713 18:59:19.848" endtime="20200713 18:59:19.849"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200713 18:59:19.850" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200713 18:59:19.850" endtime="20200713 18:59:19.850"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200713 18:59:19.851" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200713 18:59:19.851" endtime="20200713 18:59:19.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.852" endtime="20200713 18:59:19.852"></status>
</kw>
<msg timestamp="20200713 18:59:19.852" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200713 18:59:19.851" endtime="20200713 18:59:19.852"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200713 18:59:19.852" level="INFO">Length is 2</msg>
<msg timestamp="20200713 18:59:19.853" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200713 18:59:19.852" endtime="20200713 18:59:19.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200713 18:59:19.853" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200713 18:59:19.853" endtime="20200713 18:59:19.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.854" endtime="20200713 18:59:19.854"></status>
</kw>
<msg timestamp="20200713 18:59:19.854" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200713 18:59:19.853" endtime="20200713 18:59:19.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200713 18:59:19.855" level="INFO">----- &gt; ID of Build(166) : -1</msg>
<status status="PASS" starttime="20200713 18:59:19.855" endtime="20200713 18:59:19.855"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.854" endtime="20200713 18:59:19.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200713 18:59:19.856" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200713 18:59:19.855" endtime="20200713 18:59:19.856"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200713 18:59:19.856" level="INFO">${numVersion} = 166</msg>
<status status="PASS" starttime="20200713 18:59:19.856" endtime="20200713 18:59:19.856"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200713 18:59:19.857" level="INFO">${numVersion} = 165</msg>
<status status="PASS" starttime="20200713 18:59:19.856" endtime="20200713 18:59:19.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.858" endtime="20200713 18:59:19.858"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.858" endtime="20200713 18:59:19.858"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.857" endtime="20200713 18:59:19.858"></status>
</kw>
<msg timestamp="20200713 18:59:19.859" level="INFO">${numVersion} = 165</msg>
<status status="PASS" starttime="20200713 18:59:19.857" endtime="20200713 18:59:19.859"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.859" endtime="20200713 18:59:19.859"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.523" endtime="20200713 18:59:19.859"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:19.860" endtime="20200713 18:59:20.208"></status>
</kw>
<msg timestamp="20200713 18:59:20.209" level="INFO">@{getExecution} = [ PASS | [{'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200713 18:59:19.860" endtime="20200713 18:59:20.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200713 18:59:20.210" level="INFO">---- &gt; ['PASS', [{'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.55', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200713 18:59:20.210" endtime="20200713 18:59:20.211"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200713 18:59:20.211" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200713 18:59:20.211" endtime="20200713 18:59:20.211"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200713 18:59:20.212" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200713 18:59:20.211" endtime="20200713 18:59:20.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.212" endtime="20200713 18:59:20.213"></status>
</kw>
<msg timestamp="20200713 18:59:20.213" level="INFO">@{getExecution} = [ PASS | [{'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200713 18:59:20.212" endtime="20200713 18:59:20.213"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200713 18:59:20.213" level="INFO">Length is 2</msg>
<msg timestamp="20200713 18:59:20.213" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200713 18:59:20.213" endtime="20200713 18:59:20.213"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200713 18:59:20.214" level="INFO">${lastExecution} = [{'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200713 18:59:20.214" endtime="20200713 18:59:20.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.215" endtime="20200713 18:59:20.215"></status>
</kw>
<msg timestamp="20200713 18:59:20.215" level="INFO">${idBuild} = 350973</msg>
<status status="PASS" starttime="20200713 18:59:20.214" endtime="20200713 18:59:20.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200713 18:59:20.216" level="INFO">----- &gt; ID of Build(165) : 350973</msg>
<status status="PASS" starttime="20200713 18:59:20.216" endtime="20200713 18:59:20.216"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.215" endtime="20200713 18:59:20.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200713 18:59:20.216" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200713 18:59:20.216" endtime="20200713 18:59:20.217"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200713 18:59:20.217" level="INFO">${numVersion} = 165</msg>
<status status="PASS" starttime="20200713 18:59:20.217" endtime="20200713 18:59:20.217"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200713 18:59:20.218" level="INFO">${numVersion} = 164</msg>
<status status="PASS" starttime="20200713 18:59:20.217" endtime="20200713 18:59:20.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.219" endtime="20200713 18:59:20.219"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.219" endtime="20200713 18:59:20.219"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.218" endtime="20200713 18:59:20.220"></status>
</kw>
<msg timestamp="20200713 18:59:20.220" level="INFO">${numVersion} = 164</msg>
<status status="PASS" starttime="20200713 18:59:20.218" endtime="20200713 18:59:20.220"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200713 18:59:20.220" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200713 18:59:20.220" endtime="20200713 18:59:20.220"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.859" endtime="20200713 18:59:20.220"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:19.523" endtime="20200713 18:59:20.221"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200713 18:59:20.221" level="INFO">Length is 1</msg>
<msg timestamp="20200713 18:59:20.221" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200713 18:59:20.221" endtime="20200713 18:59:20.221"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200713 18:59:20.222" level="INFO">${lastExecution} = {'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200713 18:59:20.221" endtime="20200713 18:59:20.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200713 18:59:20.222" level="INFO">-----&gt; Last execution : {'id': '350973', 'build_id': '897', 'tester_id': '9', 'execution_ts': '2020-07-10 22:48:38', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8579', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.55', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200713 18:59:20.222" endtime="20200713 18:59:20.222"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200713 18:59:20.223" level="INFO">${lastExecutionID} = 350973</msg>
<status status="PASS" starttime="20200713 18:59:20.222" endtime="20200713 18:59:20.223"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.224" endtime="20200713 18:59:20.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200713 18:59:20.225" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200713 18:59:20.225" endtime="20200713 18:59:20.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200713 18:59:20.226" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200713 18:59:20.225" endtime="20200713 18:59:20.226"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200713 18:59:20.226" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200713 18:59:20.226" endtime="20200713 18:59:20.226"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200713 18:59:20.227" level="INFO">Length is 2</msg>
<msg timestamp="20200713 18:59:20.227" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200713 18:59:20.226" endtime="20200713 18:59:20.227"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200713 18:59:20.227" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200713 18:59:20.227" endtime="20200713 18:59:20.227"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200713 18:59:20.228" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200713 18:59:20.228" endtime="20200713 18:59:20.228"></status>
</kw>
<msg timestamp="20200713 18:59:20.228" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200713 18:59:20.228" endtime="20200713 18:59:20.228"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200713 18:59:20.229" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200713 18:59:20.229" endtime="20200713 18:59:20.229"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.229" endtime="20200713 18:59:20.229"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.227" endtime="20200713 18:59:20.229"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200713 18:59:20.230" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200713 18:59:20.230" endtime="20200713 18:59:20.230"></status>
</kw>
<msg timestamp="20200713 18:59:20.230" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200713 18:59:20.230" endtime="20200713 18:59:20.230"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200713 18:59:20.231" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200713 18:59:20.231" endtime="20200713 18:59:20.231"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.231" endtime="20200713 18:59:20.231"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.230" endtime="20200713 18:59:20.231"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.227" endtime="20200713 18:59:20.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200713 18:59:20.232" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200713 18:59:20.232" endtime="20200713 18:59:20.232"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200713 18:59:20.233" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200713 18:59:20.232" endtime="20200713 18:59:20.233"></status>
</kw>
<msg timestamp="20200713 18:59:20.233" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200713 18:59:20.232" endtime="20200713 18:59:20.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.234" endtime="20200713 18:59:20.234"></status>
</kw>
<msg timestamp="20200713 18:59:20.234" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200713 18:59:20.233" endtime="20200713 18:59:20.234"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.234" endtime="20200713 18:59:20.235"></status>
</kw>
<msg timestamp="20200713 18:59:20.235" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200713 18:59:20.234" endtime="20200713 18:59:20.235"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200713 18:59:20.235" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200713 18:59:20.235" endtime="20200713 18:59:20.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.236" endtime="20200713 18:59:20.236"></status>
</kw>
<msg timestamp="20200713 18:59:20.236" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200713 18:59:20.235" endtime="20200713 18:59:20.236"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200713 18:59:20.237" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200713 18:59:20.236" endtime="20200713 18:59:20.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.237" endtime="20200713 18:59:20.669"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.237" endtime="20200713 18:59:20.670"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.224" endtime="20200713 18:59:20.671"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.224" endtime="20200713 18:59:20.672"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.223" endtime="20200713 18:59:20.672"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:20.223" endtime="20200713 18:59:20.673"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200713 18:59:20.673" endtime="20200713 18:59:20.674"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:16.613" endtime="20200713 18:59:20.674"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:16.612" endtime="20200713 18:59:20.674"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:10.275" endtime="20200713 18:59:20.674"></status>
</kw>
<status status="PASS" starttime="20200713 18:59:06.979" endtime="20200713 18:59:20.674"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200713 18:58:41.813" endtime="20200713 18:59:20.675" critical="yes"></status>
</test>
<doc>Delete Annotation Test cases</doc>
<metadata>
<item name="author">Mordjane Boussad</item>
</metadata>
<status status="PASS" starttime="20200713 18:58:41.253" endtime="20200713 18:59:20.675"></status>
</suite>
<status status="PASS" starttime="20200713 18:58:41.251" endtime="20200713 18:59:20.677"></status>
</suite>
<status status="PASS" starttime="20200713 18:58:41.249" endtime="20200713 18:59:20.678"></status>
</suite>
<status status="PASS" starttime="20200713 18:58:41.248" endtime="20200713 18:59:20.679"></status>
</suite>
<status status="PASS" starttime="20200713 18:58:41.246" endtime="20200713 18:59:20.681"></status>
</suite>
<status status="PASS" starttime="20200713 18:58:41.230" endtime="20200713 18:59:20.682"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Time Out</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="JMapJenkinsTests">JMapJenkinsTests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">JMapJenkinsTests.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Jmap 7.0">JMapJenkinsTests.Tests.Jmap 7.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="jmapWeb">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="Manage Annotations">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="DeleteAnAnnotationTests">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.DeleteAnAnnotationTests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200713 18:58:41.418" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200713 18:58:41.419" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200713 18:58:41.419" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
</errors>
</robot>
