<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20200629 16:01:00.622" rpa="false">
<suite id="s1" name="JMapJenkinsTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests">
<suite id="s1-s1" name="Tests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests">
<suite id="s1-s1-s1" name="Jmap 7.0" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0">
<suite id="s1-s1-s1-s1" name="jmapWeb" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb">
<suite id="s1-s1-s1-s1-s1" name="Manage Annotations" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations">
<suite id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests" source="C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="JM70-974:Modify the text color of the text annotation">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open Browser On JMap Web</arg>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
<arg>AND</arg>
<arg>Login To JMap Web</arg>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Open Browser On JMap Web" library="CommonLogin">
<doc>Open Browser with the given URL and maximize the window to the resolution</doc>
<arguments>
<arg>${URLWebApp}</arg>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<kw name="Setup Metrics" library="CommonKeywords">
<doc>This Keyword give the start time when the execution of the test case starts.</doc>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_start}</var>
</assign>
<msg timestamp="20200629 16:01:01.370" level="INFO">${tc_start} = 1593460861.370442</msg>
<status status="PASS" starttime="20200629 16:01:01.369" endtime="20200629 16:01:01.370"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tc_start}</arg>
<arg>${tc_start}</arg>
</arguments>
<msg timestamp="20200629 16:01:01.371" level="INFO">${tc_start} = 1593460861.370442</msg>
<status status="PASS" starttime="20200629 16:01:01.370" endtime="20200629 16:01:01.371"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:01.369" endtime="20200629 16:01:01.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${Browser}'=='Chrome'</arg>
<arg>Open Chrome</arg>
<arg>ELSE IF</arg>
<arg>'${Browser}'=='Firefox'</arg>
<arg>Open Firefox</arg>
<arg>ELSE</arg>
<arg>Open Edge</arg>
</arguments>
<kw name="Open Chrome" library="CommonLogin">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
</arguments>
<assign>
<var>${chrome_options}</var>
</assign>
<msg timestamp="20200629 16:01:01.373" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001A84514FCC0&gt;</msg>
<status status="PASS" starttime="20200629 16:01:01.371" endtime="20200629 16:01:01.373"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>--ignore-certificate-errors</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:01.373" endtime="20200629 16:01:01.373"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>${Browser}</arg>
<arg>alias=JMap Web</arg>
<arg>chrome_options=${chrome_options}</arg>
</arguments>
<msg timestamp="20200629 16:01:01.373" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20200629 16:01:01.373" endtime="20200629 16:01:04.529"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:01.371" endtime="20200629 16:01:04.530"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:01.371" endtime="20200629 16:01:04.530"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${vURL}</arg>
</arguments>
<msg timestamp="20200629 16:01:04.532" level="INFO">Opening url 'http://localhost:8081/JMap_Web_SDK_HTTP'</msg>
<status status="PASS" starttime="20200629 16:01:04.531" endtime="20200629 16:01:05.460"></status>
</kw>
<kw name="Set Window Size" library="SeleniumLibrary">
<doc>Sets current windows size to given ``width`` and ``height``.</doc>
<arguments>
<arg>${RESOLUTION_X}</arg>
<arg>${RESOLUTION_Y}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:05.460" endtime="20200629 16:01:07.587"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200629 16:01:07.587" endtime="20200629 16:01:07.729"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:01.369" endtime="20200629 16:01:07.730"></status>
</kw>
<kw name="Login To JMap Web" library="CommonLogin">
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id=username</arg>
<arg>10s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.731" endtime="20200629 16:01:07.761"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=username</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.761" endtime="20200629 16:01:07.805"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>id=password</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.805" endtime="20200629 16:01:07.858"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=username</arg>
<arg>${pUsername}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.859" endtime="20200629 16:01:07.861"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.862" endtime="20200629 16:01:07.891"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:07.862" endtime="20200629 16:01:07.891"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:07.892" endtime="20200629 16:01:07.919"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 16:01:07.921" level="INFO">Typing text 'userTest1' into text field 'id=username'.</msg>
<status status="PASS" starttime="20200629 16:01:07.920" endtime="20200629 16:01:07.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:09.001" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:07.999" endtime="20200629 16:01:09.002"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:07.859" endtime="20200629 16:01:09.003"></status>
</kw>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>id=password</arg>
<arg>${pPassword}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:09.005" endtime="20200629 16:01:09.011"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:09.015" endtime="20200629 16:01:09.055"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:09.013" endtime="20200629 16:01:09.056"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:09.056" endtime="20200629 16:01:09.084"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 16:01:09.085" level="INFO">Typing text 'userTest1' into text field 'id=password'.</msg>
<status status="PASS" starttime="20200629 16:01:09.084" endtime="20200629 16:01:09.173"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:10.174" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:09.173" endtime="20200629 16:01:10.175"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:09.004" endtime="20200629 16:01:10.176"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id=submit</arg>
</arguments>
<msg timestamp="20200629 16:01:10.178" level="INFO">Clicking element 'id=submit'.</msg>
<status status="PASS" starttime="20200629 16:01:10.177" endtime="20200629 16:01:10.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:11.858" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:10.856" endtime="20200629 16:01:11.858"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:07.730" endtime="20200629 16:01:11.858"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:01.368" endtime="20200629 16:01:11.858"></status>
</kw>
<kw name="Draw a Text Annotation With Text And Coordinates" library="CommonAnnotationWeb">
<doc>This is a precondition for all test cases to "Select, Modify, Delete and Style" a text annotation</doc>
<arguments>
<arg>Argentina</arg>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Verify That Title Of The Cover Page Is" library="CommonWeb">
<doc>Check for the title of the cover page</doc>
<arguments>
<arg>${Title}</arg>
</arguments>
<kw name="Verify Title" library="CommonWeb">
<doc>Check for the title existence</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<kw name="Set Browser Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:11.860" endtime="20200629 16:01:11.861"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Title Should Be</arg>
<arg>${text}</arg>
</arguments>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200629 16:01:11.872" level="INFO">Page title is 'JMap_Web_SDK_HTTP'.</msg>
<status status="PASS" starttime="20200629 16:01:11.862" endtime="20200629 16:01:11.873"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.861" endtime="20200629 16:01:11.873"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.859" endtime="20200629 16:01:11.873"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.859" endtime="20200629 16:01:11.873"></status>
</kw>
<kw name="Click On Annotation Down List Arrow" library="CommonAnnotationWeb">
<doc>Click on annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:11.874" endtime="20200629 16:01:11.901"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.874" endtime="20200629 16:01:11.902"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='smallTrigger_freehandSet']</arg>
</arguments>
<msg timestamp="20200629 16:01:11.902" level="INFO">Clicking element 'xpath://div[@id='smallTrigger_freehandSet']'.</msg>
<status status="PASS" starttime="20200629 16:01:11.902" endtime="20200629 16:01:11.962"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.873" endtime="20200629 16:01:11.963"></status>
</kw>
<kw name="Click On Text Annotation" library="CommonAnnotationWeb">
<doc>Click on text annotation tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:11.964" endtime="20200629 16:01:11.989"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.963" endtime="20200629 16:01:11.990"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotation CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200629 16:01:11.990" level="INFO">Clicking element 'xpath://div[@class='textAnnotation CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200629 16:01:11.990" endtime="20200629 16:01:12.047"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.963" endtime="20200629 16:01:12.047"></status>
</kw>
<kw name="Element Annotation Should Be Selected" library="CommonAnnotationWeb">
<doc>Check that element annotation is selected</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='dropdownButton_freehandSet']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:12.048" endtime="20200629 16:01:12.084"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.048" endtime="20200629 16:01:12.084"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>//div[@id='dropdownButton_freehandSet']</arg>
<arg>data-original-title</arg>
<arg>${text}</arg>
</arguments>
<msg timestamp="20200629 16:01:12.098" level="INFO">Element '//div[@id='dropdownButton_freehandSet']' attribute 'data-original-title' contains value 'Text'.</msg>
<status status="PASS" starttime="20200629 16:01:12.085" endtime="20200629 16:01:12.098"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.084" endtime="20200629 16:01:12.098"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.047" endtime="20200629 16:01:12.099"></status>
</kw>
<kw name="Double Click On The Map At Coordinates" library="CommonWeb">
<doc>Double Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="${count} IN RANGE [ 1 | 3 ]" type="for">
<kw name="${count} = 1" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:12.100" endtime="20200629 16:01:12.125"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.100" endtime="20200629 16:01:12.125"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 16:01:12.126" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 16:01:12.126" endtime="20200629 16:01:12.686"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.100" endtime="20200629 16:01:12.687"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.099" endtime="20200629 16:01:12.687"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:12.689" endtime="20200629 16:01:12.705"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.688" endtime="20200629 16:01:12.705"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 16:01:12.706" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 16:01:12.706" endtime="20200629 16:01:13.442"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.688" endtime="20200629 16:01:13.442"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.687" endtime="20200629 16:01:13.443"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.099" endtime="20200629 16:01:13.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:14.444" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:13.444" endtime="20200629 16:01:14.444"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:12.099" endtime="20200629 16:01:14.445"></status>
</kw>
<kw name="Verify Text Annotation Field Is Exist" library="CommonAnnotationWeb">
<doc>Check text annotation exist</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='textAnnotationInputDiv']//input</arg>
<arg>5s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:14.446" endtime="20200629 16:01:14.480"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.445" endtime="20200629 16:01:14.481"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Be Visible</arg>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<msg timestamp="20200629 16:01:14.498" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' is displayed.</msg>
<status status="PASS" starttime="20200629 16:01:14.481" endtime="20200629 16:01:14.498"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.481" endtime="20200629 16:01:14.499"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.445" endtime="20200629 16:01:14.499"></status>
</kw>
<kw name="Create Annotation With Text" library="CommonAnnotationWeb">
<doc>Create Text Annotation with the given text</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type In Text Annotation Field" library="CommonAnnotationWeb">
<doc>Type given text to Text Annotation</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Type" library="CommonWeb">
<doc>Type the value in the locator after been clean</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${text}</arg>
</arguments>
<kw name="Set Selenium Timeout" library="SeleniumLibrary">
<doc>Sets the timeout that is used by various keywords.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:14.500" endtime="20200629 16:01:14.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
<arg>2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:14.502" endtime="20200629 16:01:14.523"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.501" endtime="20200629 16:01:14.523"></status>
</kw>
<kw name="Clear Element Text" library="SeleniumLibrary">
<doc>Clears the value of the text-input-element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:14.523" endtime="20200629 16:01:14.568"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 16:01:14.569" level="INFO">Typing text 'Argentina' into text field '//div[@class='textAnnotationInputDiv']//input'.</msg>
<status status="PASS" starttime="20200629 16:01:14.569" endtime="20200629 16:01:14.680"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:15.682" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:14.680" endtime="20200629 16:01:15.682"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.499" endtime="20200629 16:01:15.683"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 16:01:16.685" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:15.683" endtime="20200629 16:01:16.685"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.499" endtime="20200629 16:01:16.686"></status>
</kw>
<kw name="Verify value of Text Annotation Field" library="CommonAnnotationWeb">
<doc>Check text annotation value from the given value</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<kw name="Verify Value" library="CommonWeb">
<doc>Check for the value existence on the locator</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
<arg>${value}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>${locator}</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:16.690" endtime="20200629 16:01:16.722"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:16.689" endtime="20200629 16:01:16.722"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Attribute Value Should Be</arg>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<kw name="Element Attribute Value Should Be" library="SeleniumLibrary">
<doc>Verifies element identified by ``locator`` contains expected attribute value.</doc>
<arguments>
<arg>${locator}</arg>
<arg>value</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20200629 16:01:16.747" level="INFO">Element '//div[@class='textAnnotationInputDiv']//input' attribute 'value' contains value 'Argentina'.</msg>
<status status="PASS" starttime="20200629 16:01:16.724" endtime="20200629 16:01:16.748"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:16.723" endtime="20200629 16:01:16.748"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:16.688" endtime="20200629 16:01:16.748"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:16.687" endtime="20200629 16:01:16.749"></status>
</kw>
<kw name="Press Enter" library="CommonWeb">
<doc>Press Enter key</doc>
<arguments>
<arg>//div[@class='textAnnotationInputDiv']//input</arg>
</arguments>
<kw name="Press Key" library="SeleniumLibrary">
<doc>*DEPRECATED in SeleniumLibrary 4.0.* use `Press Keys` instead.</doc>
<arguments>
<arg>${locator}</arg>
<arg>\\13</arg>
</arguments>
<msg timestamp="20200629 16:01:16.750" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
<status status="PASS" starttime="20200629 16:01:16.750" endtime="20200629 16:01:16.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:17.848" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:16.846" endtime="20200629 16:01:17.848"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:16.749" endtime="20200629 16:01:17.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 16:01:18.850" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:17.849" endtime="20200629 16:01:18.850"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:14.499" endtime="20200629 16:01:18.851"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:11.859" endtime="20200629 16:01:18.851"></status>
</kw>
<kw name="Verify The Background Color Of The Text Field" library="CommonAnnotationWeb">
<doc>Check annotation text background color by the given text background color value</doc>
<arguments>
<arg>${blackColorField}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:18.854" endtime="20200629 16:01:18.909"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.853" endtime="20200629 16:01:18.910"></status>
</kw>
<kw name="Verify Background Color" library="CommonWeb">
<doc>Check for the css backgroud color of the web element located in locator</doc>
<arguments>
<arg>//div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>${color}</arg>
</arguments>
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>${Locator}</arg>
</arguments>
<assign>
<var>${elem}</var>
</assign>
<msg timestamp="20200629 16:01:18.925" level="INFO">${elem} = &lt;selenium.webdriver.remote.webelement.WebElement (session="6d95c6436e074cb374023ede7501712f", element="8ed80dbc-0145-46f0-9f30-4e54c14cf116")&gt;</msg>
<status status="PASS" starttime="20200629 16:01:18.911" endtime="20200629 16:01:18.926"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${elem}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
</arguments>
<assign>
<var>${getBgColor}</var>
</assign>
<msg timestamp="20200629 16:01:18.945" level="INFO">${getBgColor} = rgba(0, 0, 0, 1)</msg>
<status status="PASS" starttime="20200629 16:01:18.926" endtime="20200629 16:01:18.946"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getBgColor}</arg>
<arg>${color}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:18.947" endtime="20200629 16:01:18.948"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.946" endtime="20200629 16:01:18.948"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.910" endtime="20200629 16:01:18.949"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.852" endtime="20200629 16:01:18.950"></status>
</kw>
<kw name="Click On Selection Icon" library="CommonAnnotationWeb">
<doc>Click on annotation selection tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:18.951" endtime="20200629 16:01:18.985"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.951" endtime="20200629 16:01:18.986"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='SelectionTool CustomButtons btn btn-default']</arg>
</arguments>
<msg timestamp="20200629 16:01:18.987" level="INFO">Clicking element 'xpath://div[@class='SelectionTool CustomButtons btn btn-default']'.</msg>
<status status="PASS" starttime="20200629 16:01:18.987" endtime="20200629 16:01:19.068"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:18.950" endtime="20200629 16:01:19.068"></status>
</kw>
<kw name="Select The Drawing Tool Text Annotation" library="CommonAnnotationWeb">
<doc>Select The Drawing Tool Text Annotation clicking over</doc>
<arguments>
<arg>-175</arg>
<arg>130</arg>
</arguments>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:19.071" endtime="20200629 16:01:19.106"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.070" endtime="20200629 16:01:19.107"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 16:01:19.108" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=-175, y=130.</msg>
<status status="PASS" starttime="20200629 16:01:19.107" endtime="20200629 16:01:19.694"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.069" endtime="20200629 16:01:19.694"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.069" endtime="20200629 16:01:19.695"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:19.696" endtime="20200629 16:01:19.734"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.695" endtime="20200629 16:01:19.734"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200629 16:01:19.735" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200629 16:01:19.735" endtime="20200629 16:01:19.823"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.695" endtime="20200629 16:01:19.824"></status>
</kw>
<kw name="Choose The Color Via The Text Field" library="CommonAnnotationWeb">
<doc>Choose text color for annotations</doc>
<arguments>
<arg>${greenColorElement}</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:19.826" endtime="20200629 16:01:19.861"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.826" endtime="20200629 16:01:19.861"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]</arg>
</arguments>
<msg timestamp="20200629 16:01:19.863" level="INFO">Clicking element 'xpath://div[@class='AnnotationStylePanel']//div[5]//div[1]//div[1]//div[1]'.</msg>
<status status="PASS" starttime="20200629 16:01:19.862" endtime="20200629 16:01:20.202"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:20.205" endtime="20200629 16:01:20.263"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:20.203" endtime="20200629 16:01:20.264"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath:${colorElement}</arg>
</arguments>
<msg timestamp="20200629 16:01:20.264" level="INFO">Clicking element 'xpath://div[@class='sp-container sp-light sp-alpha-enabled sp-buttons-disabled sp-palette-buttons-disabled sp-initial-disabled']//div[@class='sp-cf sp-palette-row sp-palette-row-1']//span[4]'.</msg>
<status status="PASS" starttime="20200629 16:01:20.264" endtime="20200629 16:01:20.389"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:19.825" endtime="20200629 16:01:20.390"></status>
</kw>
<kw name="Click On Style Icon" library="CommonAnnotationWeb">
<doc>Click on annotation style tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:20.392" endtime="20200629 16:01:20.425"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:20.391" endtime="20200629 16:01:20.426"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@id='AnnotationStyleTrigger']</arg>
</arguments>
<msg timestamp="20200629 16:01:20.427" level="INFO">Clicking element 'xpath://div[@id='AnnotationStyleTrigger']'.</msg>
<status status="PASS" starttime="20200629 16:01:20.426" endtime="20200629 16:01:20.490"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:20.391" endtime="20200629 16:01:20.490"></status>
</kw>
<kw name="Click On The Map At Coordinates" library="CommonWeb">
<doc>Click on the map using xoffset and yoffset as displacement from the center of the map (0.0)</doc>
<arguments>
<arg>150</arg>
<arg>30</arg>
</arguments>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Enabled</arg>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:20.492" endtime="20200629 16:01:20.529"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:20.491" endtime="20200629 16:01:20.529"></status>
</kw>
<kw name="Click Element At Coordinates" library="SeleniumLibrary">
<doc>Click the element ``locator`` at ``xoffset/yoffset``.</doc>
<arguments>
<arg>xpath://div[@id='map']</arg>
<arg>${xoffset}</arg>
<arg>${yoffset}</arg>
</arguments>
<msg timestamp="20200629 16:01:20.531" level="INFO">Clicking element 'xpath://div[@id='map']' at coordinates x=150, y=30.</msg>
<status status="PASS" starttime="20200629 16:01:20.530" endtime="20200629 16:01:21.090"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:20.490" endtime="20200629 16:01:21.091"></status>
</kw>
<kw name="Verify That The Annotation Type Is" library="CommonAnnotationWeb">
<doc>Check annotation type by the given type value</doc>
<arguments>
<arg>Text</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>annotationType</arg>
</arguments>
<assign>
<var>${getAnnotationType}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:21.094" endtime="20200629 16:01:21.095"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200629 16:01:21.098" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].annotationType
Without any arguments.</msg>
<msg timestamp="20200629 16:01:21.216" level="INFO">${getAttribute} = Text</msg>
<status status="PASS" starttime="20200629 16:01:21.096" endtime="20200629 16:01:21.216"></status>
</kw>
<msg timestamp="20200629 16:01:21.217" level="INFO">${getAnnotationType} = Text</msg>
<status status="PASS" starttime="20200629 16:01:21.093" endtime="20200629 16:01:21.218"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getAnnotationType}</arg>
<arg>${annotationType}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:21.220" endtime="20200629 16:01:21.221"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:21.219" endtime="20200629 16:01:21.222"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:21.092" endtime="20200629 16:01:21.223"></status>
</kw>
<kw name="Verify That The Annotation Text Color Is" library="CommonAnnotationWeb">
<doc>Check annotation text color by the given text color value</doc>
<arguments>
<arg>${greenColorDrawing}</arg>
</arguments>
<kw name="Get Annotation Attribute" library="CommonAnnotationWeb">
<doc>Get annotation attributes</doc>
<arguments>
<arg>textColor</arg>
</arguments>
<assign>
<var>${getAnnotation}</var>
</assign>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:21.226" endtime="20200629 16:01:21.227"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>return window.JMap.Html5Core.Util.getAnnotationConfig()[0].${attribute}</arg>
</arguments>
<assign>
<var>${getAttribute}</var>
</assign>
<msg timestamp="20200629 16:01:21.229" level="INFO">Executing JavaScript:
return window.JMap.Html5Core.Util.getAnnotationConfig()[0].textColor
Without any arguments.</msg>
<msg timestamp="20200629 16:01:21.344" level="INFO">${getAttribute} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 16:01:21.228" endtime="20200629 16:01:21.344"></status>
</kw>
<msg timestamp="20200629 16:01:21.344" level="INFO">${getAnnotation} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 16:01:21.225" endtime="20200629 16:01:21.344"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${getAnnotation}</arg>
</arguments>
<assign>
<var>${getTextColor}</var>
</assign>
<msg timestamp="20200629 16:01:21.346" level="INFO">${getTextColor} = [0, 255, 0, 1]</msg>
<status status="PASS" starttime="20200629 16:01:21.345" endtime="20200629 16:01:21.346"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${getTextColor}</arg>
<arg>${annotationTextColor}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:21.346" endtime="20200629 16:01:21.347"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:21.346" endtime="20200629 16:01:21.347"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200629 16:01:22.348" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:21.347" endtime="20200629 16:01:22.349"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:21.223" endtime="20200629 16:01:22.350"></status>
</kw>
<kw name="Click On Delete Icon" library="CommonAnnotationWeb">
<doc>Click on annotation delete tool</doc>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>10s</arg>
<arg>1s</arg>
<arg>Wait Until Element Is Visible</arg>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
<arg>timeout=2s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:22.354" endtime="20200629 16:01:22.612"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:22.353" endtime="20200629 16:01:22.612"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='ClearTool CustomButtons btn btn-default']//i</arg>
</arguments>
<msg timestamp="20200629 16:01:22.614" level="INFO">Clicking element 'xpath://div[@class='ClearTool CustomButtons btn btn-default']//i'.</msg>
<status status="PASS" starttime="20200629 16:01:22.613" endtime="20200629 16:01:22.932"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:22.351" endtime="20200629 16:01:22.932"></status>
</kw>
<kw name="Confirm Message" library="CommonWeb">
<doc>Confirm the alert pop ups in JMap Web</doc>
<kw name="Handle Alert" library="SeleniumLibrary">
<doc>Handles the current alert and returns its message.</doc>
<arguments>
<arg>action=ACCEPT</arg>
<arg>timeout=3s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:22.933" endtime="20200629 16:01:23.245"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:22.932" endtime="20200629 16:01:23.246"></status>
</kw>
<kw name="LogOut" library="CommonLogin" type="teardown">
<doc>Log out from JMap Web</doc>
<kw name="Click On Logout" library="CommonLogin">
<doc>Click on Log out option in JMap Web</doc>
<kw name="Click On Options Icon" library="CommonWeb">
<doc>Go to Option menu</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:23.249" endtime="20200629 16:01:23.596"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://i[@class='configMenuIcon']</arg>
</arguments>
<msg timestamp="20200629 16:01:23.598" level="INFO">Clicking element 'xpath://i[@class='configMenuIcon']'.</msg>
<status status="PASS" starttime="20200629 16:01:23.597" endtime="20200629 16:01:23.938"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20200629 16:01:24.940" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200629 16:01:23.938" endtime="20200629 16:01:24.941"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:23.248" endtime="20200629 16:01:24.943"></status>
</kw>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is enabled.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
<arg>timeout=10s</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:24.943" endtime="20200629 16:01:25.307"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>xpath://div[@class='headerContainer']//li[4]</arg>
</arguments>
<msg timestamp="20200629 16:01:25.309" level="INFO">Clicking element 'xpath://div[@class='headerContainer']//li[4]'.</msg>
<status status="PASS" starttime="20200629 16:01:25.308" endtime="20200629 16:01:25.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20200629 16:01:27.824" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20200629 16:01:25.822" endtime="20200629 16:01:27.824"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:23.247" endtime="20200629 16:01:27.825"></status>
</kw>
<kw name="Close JMap Web" library="CommonKeywords">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200629 16:01:27.828" endtime="20200629 16:01:30.008"></status>
</kw>
<kw name="Check Metrics" library="CommonKeywords">
<doc>This Keyword used to check the elapsed time, and display it in the console.</doc>
<assign>
<var>${ElapsedTime}</var>
</assign>
<kw name="End Metrics" library="CommonKeywords">
<doc>This Keyword give the end time when the execution of the test case starts.
And it account elapsed time for the execution</doc>
<assign>
<var>${duration}</var>
</assign>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${tc_end}</var>
</assign>
<msg timestamp="20200629 16:01:30.013" level="INFO">${tc_end} = 1593460890.013015</msg>
<status status="PASS" starttime="20200629 16:01:30.012" endtime="20200629 16:01:30.014"></status>
</kw>
<kw name="Subtract Time From Time" library="DateTime">
<doc>Subtracts time from another time and returns the resulting time.</doc>
<arguments>
<arg>${tc_end}</arg>
<arg>${tc_start}</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200629 16:01:30.016" level="INFO">${tc_duration} = 28.64257311820984</msg>
<status status="PASS" starttime="20200629 16:01:30.015" endtime="20200629 16:01:30.017"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${tc_duration}/60</arg>
</arguments>
<assign>
<var>${tc_duration}</var>
</assign>
<msg timestamp="20200629 16:01:30.019" level="INFO">${tc_duration} = 0.47737621863683066</msg>
<status status="PASS" starttime="20200629 16:01:30.017" endtime="20200629 16:01:30.019"></status>
</kw>
<msg timestamp="20200629 16:01:30.020" level="INFO">${duration} = 0.47737621863683066</msg>
<status status="PASS" starttime="20200629 16:01:30.011" endtime="20200629 16:01:30.020"></status>
</kw>
<kw name="Set Tags" library="BuiltIn">
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<arguments>
<arg>Time Out</arg>
</arguments>
<msg timestamp="20200629 16:01:30.022" level="INFO">Set tag 'Time Out'.</msg>
<status status="PASS" starttime="20200629 16:01:30.021" endtime="20200629 16:01:30.023"></status>
</kw>
<msg timestamp="20200629 16:01:30.024" level="INFO">${ElapsedTime} = 0.47737621863683066</msg>
<status status="PASS" starttime="20200629 16:01:30.009" endtime="20200629 16:01:30.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:30.026" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 16:01:30.025" endtime="20200629 16:01:30.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
</arguments>
<msg timestamp="20200629 16:01:30.028" level="INFO">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200629 16:01:30.027" endtime="20200629 16:01:30.029"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${SUITE_NAME}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>@{listeSuiteName}</var>
</assign>
<msg timestamp="20200629 16:01:30.030" level="INFO">@{listeSuiteName} = [ JMapJenkinsTests | Tests | Jmap 7 | 0 | jmapWeb | Manage Annotations | EditStyleOfAnnotationTests ]</msg>
<status status="PASS" starttime="20200629 16:01:30.029" endtime="20200629 16:01:30.031"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeSuiteName}</arg>
</arguments>
<assign>
<var>${LengthSuiteName}</var>
</assign>
<msg timestamp="20200629 16:01:30.032" level="INFO">Length is 7</msg>
<msg timestamp="20200629 16:01:30.033" level="INFO">${LengthSuiteName} = 7</msg>
<status status="PASS" starttime="20200629 16:01:30.032" endtime="20200629 16:01:30.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeSuiteName[${LengthSuiteName}-1]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200629 16:01:30.036" level="INFO">${suiteName} = EditStyleOfAnnotationTests</msg>
<status status="PASS" starttime="20200629 16:01:30.034" endtime="20200629 16:01:30.036"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${suiteName}</arg>
<arg>Tests</arg>
</arguments>
<assign>
<var>@{suiteName}</var>
</assign>
<msg timestamp="20200629 16:01:30.038" level="INFO">@{suiteName} = [ EditStyleOfAnnotation |  ]</msg>
<status status="PASS" starttime="20200629 16:01:30.037" endtime="20200629 16:01:30.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${suiteName[0]}</arg>
</arguments>
<assign>
<var>${suiteName}</var>
</assign>
<msg timestamp="20200629 16:01:30.039" level="INFO">${suiteName} = EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200629 16:01:30.039" endtime="20200629 16:01:30.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${suiteName}</arg>
</arguments>
<msg timestamp="20200629 16:01:30.041" level="INFO">EditStyleOfAnnotation</msg>
<status status="PASS" starttime="20200629 16:01:30.040" endtime="20200629 16:01:30.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:30.042" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 16:01:30.042" endtime="20200629 16:01:30.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<msg timestamp="20200629 16:01:30.044" level="INFO">JM70-974:Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 16:01:30.043" endtime="20200629 16:01:30.044"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{listeTestName}</var>
</assign>
<msg timestamp="20200629 16:01:30.045" level="INFO">@{listeTestName} = [ JM70-974 | Modify the text color of the text annotation ]</msg>
<status status="PASS" starttime="20200629 16:01:30.045" endtime="20200629 16:01:30.046"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${listeTestName}</arg>
</arguments>
<assign>
<var>${LengthTest}</var>
</assign>
<msg timestamp="20200629 16:01:30.047" level="INFO">Length is 2</msg>
<msg timestamp="20200629 16:01:30.047" level="INFO">${LengthTest} = 2</msg>
<status status="PASS" starttime="20200629 16:01:30.046" endtime="20200629 16:01:30.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${listeTestName[${LengthTest}-1]}</arg>
</arguments>
<assign>
<var>${tesCaseName}</var>
</assign>
<msg timestamp="20200629 16:01:30.048" level="INFO">${tesCaseName} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 16:01:30.048" endtime="20200629 16:01:30.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${tesCaseName}</arg>
</arguments>
<msg timestamp="20200629 16:01:30.050" level="INFO">Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 16:01:30.049" endtime="20200629 16:01:30.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:30.051" level="INFO">================================================</msg>
<status status="PASS" starttime="20200629 16:01:30.050" endtime="20200629 16:01:30.051"></status>
</kw>
<kw name="Open New Session" library="CommonKeywords">
<doc>Open new session for the given username, password and application type
The session id generated is stored in a global variable called SESSIONID.
Use ${SESSIONID} wherever you want to access to the variable's value</doc>
<arguments>
<arg>${UserName}</arg>
<arg>${Password}</arg>
<arg>${TYPE}</arg>
</arguments>
<assign>
<var>${BODY}</var>
</assign>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session</arg>
<arg>body={"username": "${pUsername}","password": "${pPassword}","type": "${pType}"}</arg>
<arg>allow_redirects=true</arg>
<arg>headers={"Content-Type":"application/json"}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:30.054" endtime="20200629 16:01:32.265"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:32.266" endtime="20200629 16:01:32.267"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:32.268" endtime="20200629 16:01:32.352"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>$.result</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200629 16:01:32.403" level="INFO">${RESULT} = [{'sessionId': 1785850823, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}]</msg>
<status status="PASS" starttime="20200629 16:01:32.353" endtime="20200629 16:01:32.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${RESULT[0]}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20200629 16:01:32.404" level="INFO">${RESULT} = {'sessionId': 1785850823, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200629 16:01:32.404" endtime="20200629 16:01:32.405"></status>
</kw>
<msg timestamp="20200629 16:01:32.405" level="INFO">${BODY} = {'sessionId': 1785850823, 'serverVersion': '7.0 Istanbul build 159', 'userEmailAddress': '', 'userFullName': 'userTest1', 'sessionExceed': False}</msg>
<status status="PASS" starttime="20200629 16:01:30.053" endtime="20200629 16:01:32.405"></status>
</kw>
<kw name="GET Current Session ID" library="CommonKeywords">
<doc>Get the session ID for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${SESSIONID}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['sessionId']}</arg>
</arguments>
<assign>
<var>${getSessionID}</var>
</assign>
<msg timestamp="20200629 16:01:32.408" level="INFO">${getSessionID} = 1785850823</msg>
<status status="PASS" starttime="20200629 16:01:32.407" endtime="20200629 16:01:32.408"></status>
</kw>
<msg timestamp="20200629 16:01:32.408" level="INFO">${SESSIONID} = 1785850823</msg>
<status status="PASS" starttime="20200629 16:01:32.406" endtime="20200629 16:01:32.409"></status>
</kw>
<kw name="GET Current Server Version" library="CommonKeywords">
<doc>Get the server version (Build) for the current session</doc>
<arguments>
<arg>${BODY}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${pResult['serverVersion']}</arg>
</arguments>
<assign>
<var>${getBuild}</var>
</assign>
<msg timestamp="20200629 16:01:32.411" level="INFO">${getBuild} = 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 16:01:32.410" endtime="20200629 16:01:32.411"></status>
</kw>
<msg timestamp="20200629 16:01:32.411" level="INFO">${buildName} = 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 16:01:32.409" endtime="20200629 16:01:32.412"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>JMap ${buildName}</arg>
</arguments>
<assign>
<var>${buildName}</var>
</assign>
<msg timestamp="20200629 16:01:32.413" level="INFO">${buildName} = JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 16:01:32.412" endtime="20200629 16:01:32.413"></status>
</kw>
<kw name="Close The Current Session" library="CommonKeywords">
<doc>Close REST API session by given session id</doc>
<arguments>
<arg>${SESSIONID}</arg>
</arguments>
<kw name="Delete" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>http://${localhost}:${internPort}/services/rest/v2.0/session?sessionId=${SESSION}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:32.414" endtime="20200629 16:01:34.435"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.message</arg>
<arg>Session has been closed</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:34.436" endtime="20200629 16:01:34.499"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:34.500" endtime="20200629 16:01:34.549"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:32.413" endtime="20200629 16:01:34.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:34.551" level="INFO">================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:34.550" endtime="20200629 16:01:34.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${useTL}"=="true"</arg>
<arg>Go To Testlink To Update Test Case</arg>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Go To Testlink To Update Test Case" library="CommonKeywords">
<arguments>
<arg>${projectNum}</arg>
<arg>${testPlan}</arg>
<arg>${buildName}</arg>
<arg>${suiteName}</arg>
<arg>${tesCaseName}</arg>
<arg>${ElapsedTime}</arg>
</arguments>
<kw name="Init Api Class TestLinkAPIClient" library="CommonKeywords">
<arguments>
<arg>${TL_URL}</arg>
<arg>${DEV_KEY}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n=================== Go To Connect To Testlink ===================</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 16:01:34.555" level="INFO">
=================== Go To Connect To Testlink ===================</msg>
<status status="PASS" starttime="20200629 16:01:34.555" endtime="20200629 16:01:34.556"></status>
</kw>
<kw name="Create Api Client" library="TestlinkAPILibrary">
<doc>Creates a new TestLink-API-Python-client (XMLRPC), using Python class 
TestlinkAPIClient or TestlinkAPIGeneric.</doc>
<arguments>
<arg>TestlinkAPIClient</arg>
<arg>server_url=${URL}</arg>
<arg>devkey=${API_KEY}</arg>
</arguments>
<assign>
<var>${tlapi_client}</var>
</assign>
<msg timestamp="20200629 16:01:35.208" level="INFO">${tlapi_client} = 
TestLink API - class TestlinkAPIClient - version 0.8.1 (PY 3.7.3)
@authors: Luiko Czub, Olivier Renault, James Stock, TestLink-API-Python-client developers

Current connection settings
 Server URL: h...</msg>
<status status="PASS" starttime="20200629 16:01:34.556" endtime="20200629 16:01:35.209"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tlapi_client}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:35.210" endtime="20200629 16:01:36.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Testlink is connected successfully</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 16:01:36.032" level="INFO">-----&gt; Testlink is connected successfully</msg>
<status status="PASS" starttime="20200629 16:01:36.032" endtime="20200629 16:01:36.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:36.035" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:36.033" endtime="20200629 16:01:36.035"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:34.554" endtime="20200629 16:01:36.036"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getProjects</arg>
</arguments>
<assign>
<var>@{projects}</var>
</assign>
<msg timestamp="20200629 16:01:36.754" level="INFO">@{projects} = [ {'id': '1964', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:0;s:19:"testP...</msg>
<status status="PASS" starttime="20200629 16:01:36.037" endtime="20200629 16:01:36.755"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${projects}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 16:01:36.757" level="INFO">Length is 13</msg>
<msg timestamp="20200629 16:01:36.758" level="INFO">${length} = 13</msg>
<status status="PASS" starttime="20200629 16:01:36.756" endtime="20200629 16:01:36.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${projects[${projectNum}]}</arg>
</arguments>
<assign>
<var>${project}</var>
</assign>
<msg timestamp="20200629 16:01:36.760" level="INFO">${project} = {'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPri...</msg>
<status status="PASS" starttime="20200629 16:01:36.759" endtime="20200629 16:01:36.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${project}</arg>
</arguments>
<msg timestamp="20200629 16:01:36.762" level="INFO">{'id': '4960', 'notes': '', 'color': '', 'active': '1', 'option_reqs': '0', 'option_priority': '0', 'option_automation': '0', 'options': 'O:8:"stdClass":4:{s:19:"requirementsEnabled";i:1;s:19:"testPriorityEnabled";i:1;s:17:"automationEnabled";i:1;s:16:"inventoryEnabled";i:0;}', 'prefix': 'JM70', 'tc_counter': '1151', 'is_public': '1', 'issue_tracker_enabled': '0', 'reqmgr_integration_enabled': '0', 'api_key': '5bad96bc97c7a43833402dd65e468024f00370e7535d8438fa11163c66b2d0a9', 'name': 'Jmap 7.0', 'opt': {'requirementsEnabled': 1, 'testPriorityEnabled': 1, 'automationEnabled': 1, 'inventoryEnabled': 0}}</msg>
<status status="PASS" starttime="20200629 16:01:36.761" endtime="20200629 16:01:36.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['name']}</arg>
</arguments>
<assign>
<var>${projectNAME}</var>
</assign>
<msg timestamp="20200629 16:01:36.765" level="INFO">${projectNAME} = Jmap 7.0</msg>
<status status="PASS" starttime="20200629 16:01:36.764" endtime="20200629 16:01:36.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${project['id']}</arg>
</arguments>
<assign>
<var>${projectID}</var>
</assign>
<msg timestamp="20200629 16:01:36.767" level="INFO">${projectID} = 4960</msg>
<status status="PASS" starttime="20200629 16:01:36.766" endtime="20200629 16:01:36.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:36.769" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:36.769" endtime="20200629 16:01:36.770"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestPlanByName</arg>
<arg>testprojectname=${projectNAME}</arg>
<arg>testplanname=${CurrentTestPlan}</arg>
</arguments>
<assign>
<var>@{testPlans}</var>
</assign>
<msg timestamp="20200629 16:01:37.188" level="INFO">@{testPlans} = [ {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full te...</msg>
<status status="PASS" starttime="20200629 16:01:36.771" endtime="20200629 16:01:37.189"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testPlans}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 16:01:37.191" level="INFO">Length is 1</msg>
<msg timestamp="20200629 16:01:37.191" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200629 16:01:37.190" endtime="20200629 16:01:37.192"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlans}[${length-1}]</arg>
</arguments>
<assign>
<var>${testPlan}</var>
</assign>
<msg timestamp="20200629 16:01:37.194" level="INFO">${testPlan} = {'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test...</msg>
<status status="PASS" starttime="20200629 16:01:37.193" endtime="20200629 16:01:37.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testPlan}</arg>
</arguments>
<msg timestamp="20200629 16:01:37.196" level="INFO">{'id': '6381', 'testproject_id': '4960', 'notes': '', 'active': '1', 'is_open': '1', 'is_public': '1', 'api_key': 'd51e9fc5cf182e4821adcc1ef29ea5af29ca0bb64de6f11c3a6c82acfaea7002', 'name': 'Full test'}</msg>
<status status="PASS" starttime="20200629 16:01:37.195" endtime="20200629 16:01:37.197"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['name']}</arg>
</arguments>
<assign>
<var>${testPlanNAME}</var>
</assign>
<msg timestamp="20200629 16:01:37.199" level="INFO">${testPlanNAME} = Full test</msg>
<status status="PASS" starttime="20200629 16:01:37.198" endtime="20200629 16:01:37.199"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testPlan['id']}</arg>
</arguments>
<assign>
<var>${testPlanID}</var>
</assign>
<msg timestamp="20200629 16:01:37.201" level="INFO">${testPlanID} = 6381</msg>
<status status="PASS" starttime="20200629 16:01:37.200" endtime="20200629 16:01:37.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:37.203" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:37.202" endtime="20200629 16:01:37.204"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLatestBuildForTestPlan</arg>
<arg>${testPlanID}</arg>
</arguments>
<assign>
<var>${latestBuild}</var>
</assign>
<msg timestamp="20200629 16:01:37.583" level="INFO">${latestBuild} = {'id': '887', 'testplan_id': '6381', 'name': 'JMap 7.0 Jakarta build 069', 'notes': "TFIFT-9817 JMap REST API : Get layers endpoints doesn\\'t work in proxy when layer have thematics&lt;/br&gt;TFIFT-9823 JM...</msg>
<status status="PASS" starttime="20200629 16:01:37.204" endtime="20200629 16:01:37.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<msg timestamp="20200629 16:01:37.585" level="INFO">{'id': '887', 'testplan_id': '6381', 'name': 'JMap 7.0 Jakarta build 069', 'notes': "TFIFT-9817 JMap REST API : Get layers endpoints doesn\\'t work in proxy when layer have thematics&lt;/br&gt;TFIFT-9823 JMap Server : Mapbox URLs are truncated when using a reverse proxy&lt;/br&gt;TFIFT-9813 JMap Web : Unable to select complex elements from AutoCad if blocks have MTEXT&lt;/br&gt;TFIFT-9822 JMap Web : Unable to select a complex (Autocad block)&lt;/br&gt;", 'active': '1', 'is_open': '1', 'release_date': '', 'closed_on_date': '', 'creation_ts': '2020-06-29 17:12:21'}</msg>
<status status="PASS" starttime="20200629 16:01:37.584" endtime="20200629 16:01:37.586"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${latestBuild}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 16:01:37.588" level="INFO">Length is 9</msg>
<msg timestamp="20200629 16:01:37.588" level="INFO">${length} = 9</msg>
<status status="PASS" starttime="20200629 16:01:37.587" endtime="20200629 16:01:37.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['id']}</arg>
</arguments>
<assign>
<var>${latestBuildID}</var>
</assign>
<msg timestamp="20200629 16:01:37.591" level="INFO">${latestBuildID} = 887</msg>
<status status="PASS" starttime="20200629 16:01:37.589" endtime="20200629 16:01:37.591"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuild['name']}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<msg timestamp="20200629 16:01:37.593" level="INFO">${latestBuildNAME} = JMap 7.0 Jakarta build 069</msg>
<status status="PASS" starttime="20200629 16:01:37.592" endtime="20200629 16:01:37.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${latestBuildNAME}' != '${CurrentBuildName}'</arg>
<arg>Set Variable</arg>
<arg>${CurrentBuildName}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${latestBuildNAME}</arg>
</arguments>
<assign>
<var>${latestBuildNAME}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${CurrentBuildName}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:37.596" endtime="20200629 16:01:37.597"></status>
</kw>
<msg timestamp="20200629 16:01:37.597" level="INFO">${latestBuildNAME} = JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 16:01:37.594" endtime="20200629 16:01:37.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
</arguments>
<msg timestamp="20200629 16:01:37.599" level="INFO">JMap 7.0 Istanbul build 159</msg>
<status status="PASS" starttime="20200629 16:01:37.599" endtime="20200629 16:01:37.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:37.602" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:37.601" endtime="20200629 16:01:37.602"></status>
</kw>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getTestCaseIDByName</arg>
<arg>testcasename=${caseName}</arg>
<arg>testsuitname=${suitName}</arg>
<arg>testprojectname=${projectNAME}</arg>
</arguments>
<assign>
<var>@{testCases}</var>
</assign>
<msg timestamp="20200629 16:01:38.116" level="INFO">@{testCases} = [ {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'} ]</msg>
<status status="PASS" starttime="20200629 16:01:37.603" endtime="20200629 16:01:38.116"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${testCases}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200629 16:01:38.118" level="INFO">Length is 1</msg>
<msg timestamp="20200629 16:01:38.119" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20200629 16:01:38.117" endtime="20200629 16:01:38.119"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCases[${i}]}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.122" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 16:01:38.121" endtime="20200629 16:01:38.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
<arg>Set Variable</arg>
<arg>${testCases}[${i}]</arg>
</arguments>
<assign>
<var>${testCase}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCases}[${i}]</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.126" endtime="20200629 16:01:38.127"></status>
</kw>
<msg timestamp="20200629 16:01:38.127" level="INFO">${testCase} = {'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 16:01:38.124" endtime="20200629 16:01:38.128"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${testCases[${i}]['tsuite_name']}'=='${suitName}'</arg>
</arguments>
<msg timestamp="20200629 16:01:38.130" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200629 16:01:38.129" endtime="20200629 16:01:38.131"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.120" endtime="20200629 16:01:38.131"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.120" endtime="20200629 16:01:38.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testCase}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.134" level="INFO">{'id': '8694', 'name': 'Modify the text color of the text annotation', 'parent_id': '8685', 'tsuite_name': 'EditStyleOfAnnotation', 'tc_external_id': '974'}</msg>
<status status="PASS" starttime="20200629 16:01:38.133" endtime="20200629 16:01:38.134"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['name']}</arg>
</arguments>
<assign>
<var>${testCaseNAME}</var>
</assign>
<msg timestamp="20200629 16:01:38.136" level="INFO">${testCaseNAME} = Modify the text color of the text annotation</msg>
<status status="PASS" starttime="20200629 16:01:38.135" endtime="20200629 16:01:38.137"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['id']}</arg>
</arguments>
<assign>
<var>${testCaseID}</var>
</assign>
<msg timestamp="20200629 16:01:38.139" level="INFO">${testCaseID} = 8694</msg>
<status status="PASS" starttime="20200629 16:01:38.137" endtime="20200629 16:01:38.139"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${testCase['tc_external_id']}</arg>
</arguments>
<assign>
<var>${testCaseExternalID}</var>
</assign>
<msg timestamp="20200629 16:01:38.140" level="INFO">${testCaseExternalID} = 974</msg>
<status status="PASS" starttime="20200629 16:01:38.139" endtime="20200629 16:01:38.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>=================================================================================</arg>
</arguments>
<msg timestamp="20200629 16:01:38.141" level="INFO">=================================================================================</msg>
<status status="PASS" starttime="20200629 16:01:38.141" endtime="20200629 16:01:38.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${latestBuildNAME[-3:]}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:38.144" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200629 16:01:38.142" endtime="20200629 16:01:38.144"></status>
</kw>
<kw name="Fetch From Left" library="String">
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<arguments>
<arg>${latestBuildNAME}</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${splitedBuild}</var>
</assign>
<msg timestamp="20200629 16:01:38.144" level="INFO">${splitedBuild} = JMap 7.0 Istanbul build </msg>
<status status="PASS" starttime="20200629 16:01:38.144" endtime="20200629 16:01:38.144"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | 22 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.145" endtime="20200629 16:01:38.464"></status>
</kw>
<msg timestamp="20200629 16:01:38.465" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200629 16:01:38.144" endtime="20200629 16:01:38.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.467" level="INFO">---- &gt; ['PASS', [{'id': -1}]]</msg>
<status status="PASS" starttime="20200629 16:01:38.466" endtime="20200629 16:01:38.468"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:38.471" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200629 16:01:38.469" endtime="20200629 16:01:38.471"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:38.473" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200629 16:01:38.472" endtime="20200629 16:01:38.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.476" endtime="20200629 16:01:38.478"></status>
</kw>
<msg timestamp="20200629 16:01:38.478" level="INFO">@{getExecution} = [ PASS | [{'id': -1}] ]</msg>
<status status="PASS" starttime="20200629 16:01:38.474" endtime="20200629 16:01:38.479"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 16:01:38.481" level="INFO">Length is 2</msg>
<msg timestamp="20200629 16:01:38.481" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200629 16:01:38.480" endtime="20200629 16:01:38.482"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 16:01:38.484" level="INFO">${lastExecution} = [{'id': -1}]</msg>
<status status="PASS" starttime="20200629 16:01:38.483" endtime="20200629 16:01:38.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.487" endtime="20200629 16:01:38.489"></status>
</kw>
<msg timestamp="20200629 16:01:38.489" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200629 16:01:38.485" endtime="20200629 16:01:38.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.492" level="INFO">----- &gt; ID of Build(159) : -1</msg>
<status status="PASS" starttime="20200629 16:01:38.491" endtime="20200629 16:01:38.493"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.490" endtime="20200629 16:01:38.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200629 16:01:38.495" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200629 16:01:38.494" endtime="20200629 16:01:38.495"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:38.496" level="INFO">${numVersion} = 159</msg>
<status status="PASS" starttime="20200629 16:01:38.495" endtime="20200629 16:01:38.496"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:38.498" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200629 16:01:38.497" endtime="20200629 16:01:38.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.501" endtime="20200629 16:01:38.502"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.500" endtime="20200629 16:01:38.502"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.499" endtime="20200629 16:01:38.503"></status>
</kw>
<msg timestamp="20200629 16:01:38.503" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200629 16:01:38.498" endtime="20200629 16:01:38.503"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.504" endtime="20200629 16:01:38.505"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.144" endtime="20200629 16:01:38.505"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.829" level="FAIL">TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 158) provided does not exist!
getLastExecutionResult({'testplanid': '6381', 'testcaseid': '8694', 'testCaseexternaid': '974', 'buildname': 'JMap 7.0 Istanbul build 158', 'devKey': '1d540de5247e1354aceccb25b4eac749'})</msg>
<status status="FAIL" starttime="20200629 16:01:38.507" endtime="20200629 16:01:38.829"></status>
</kw>
<msg timestamp="20200629 16:01:38.830" level="INFO">@{getExecution} = [ FAIL | TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 158) provided does not exist!
getLastExecutionResult({'testplanid': '6381', 'testcaseid': '869...</msg>
<status status="PASS" starttime="20200629 16:01:38.506" endtime="20200629 16:01:38.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.833" level="INFO">---- &gt; ['FAIL', "TLResponseError: 4040: (getLastExecutionResult) - Build Name (buildname: JMap 7.0 Istanbul build 158) provided does not exist!\ngetLastExecutionResult({'testplanid': '6381', 'testcaseid': '8694', 'testCaseexternaid': '974', 'buildname': 'JMap 7.0 Istanbul build 158', 'devKey': '1d540de5247e1354aceccb25b4eac749'})"]</msg>
<status status="PASS" starttime="20200629 16:01:38.831" endtime="20200629 16:01:38.833"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:38.836" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200629 16:01:38.834" endtime="20200629 16:01:38.836"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:38.838" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200629 16:01:38.837" endtime="20200629 16:01:38.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.841" endtime="20200629 16:01:38.842"></status>
</kw>
<msg timestamp="20200629 16:01:38.842" level="INFO">@{getExecution} = [ PASS | [{'id': '-1'}] ]</msg>
<status status="PASS" starttime="20200629 16:01:38.839" endtime="20200629 16:01:38.843"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 16:01:38.845" level="INFO">Length is 2</msg>
<msg timestamp="20200629 16:01:38.845" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200629 16:01:38.844" endtime="20200629 16:01:38.845"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 16:01:38.847" level="INFO">${lastExecution} = [{'id': '-1'}]</msg>
<status status="PASS" starttime="20200629 16:01:38.846" endtime="20200629 16:01:38.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.848" endtime="20200629 16:01:38.849"></status>
</kw>
<msg timestamp="20200629 16:01:38.849" level="INFO">${idBuild} = -1</msg>
<status status="PASS" starttime="20200629 16:01:38.847" endtime="20200629 16:01:38.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200629 16:01:38.852" level="INFO">----- &gt; ID of Build(158) : -1</msg>
<status status="PASS" starttime="20200629 16:01:38.851" endtime="20200629 16:01:38.852"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.850" endtime="20200629 16:01:38.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200629 16:01:38.853" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200629 16:01:38.853" endtime="20200629 16:01:38.854"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:38.856" level="INFO">${numVersion} = 158</msg>
<status status="PASS" starttime="20200629 16:01:38.854" endtime="20200629 16:01:38.856"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:38.856" level="INFO">${numVersion} = 157</msg>
<status status="PASS" starttime="20200629 16:01:38.856" endtime="20200629 16:01:38.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.860" endtime="20200629 16:01:38.861"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.859" endtime="20200629 16:01:38.861"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.858" endtime="20200629 16:01:38.862"></status>
</kw>
<msg timestamp="20200629 16:01:38.862" level="INFO">${numVersion} = 157</msg>
<status status="PASS" starttime="20200629 16:01:38.857" endtime="20200629 16:01:38.863"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.863" endtime="20200629 16:01:38.864"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.506" endtime="20200629 16:01:38.864"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Call Api Method</arg>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>getLastExecutionResult</arg>
<arg>testplanid=${testPlanID}</arg>
<arg>testcaseid=${testCaseID}</arg>
<arg>testCaseexternaid=${testCaseExternalID}</arg>
<arg>buildname=${splitedBuild}${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:38.866" endtime="20200629 16:01:39.296"></status>
</kw>
<msg timestamp="20200629 16:01:39.297" level="INFO">@{getExecution} = [ PASS | [{'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200629 16:01:38.865" endtime="20200629 16:01:39.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>---- &gt; ${getExecution}</arg>
</arguments>
<msg timestamp="20200629 16:01:39.300" level="INFO">---- &gt; ['PASS', [{'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.68', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}]]</msg>
<status status="PASS" starttime="20200629 16:01:39.298" endtime="20200629 16:01:39.300"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>&amp;{dictIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:39.303" level="INFO">&amp;{dictIfFail} = { id=-1 }</msg>
<status status="PASS" starttime="20200629 16:01:39.301" endtime="20200629 16:01:39.303"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${dictIfFail}</arg>
</arguments>
<assign>
<var>@{listIfFail}</var>
</assign>
<msg timestamp="20200629 16:01:39.305" level="INFO">@{listIfFail} = [ {'id': '-1'} ]</msg>
<status status="PASS" starttime="20200629 16:01:39.304" endtime="20200629 16:01:39.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'FAIL'</arg>
<arg>Create List</arg>
<arg>PASS</arg>
<arg>${listIfFail}</arg>
<arg>ELSE</arg>
<arg>Copy List</arg>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>@{getExecution}</var>
</assign>
<kw name="Copy List" library="Collections">
<doc>Returns a copy of the given list.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.309" endtime="20200629 16:01:39.310"></status>
</kw>
<msg timestamp="20200629 16:01:39.311" level="INFO">@{getExecution} = [ PASS | [{'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_...</msg>
<status status="PASS" starttime="20200629 16:01:39.307" endtime="20200629 16:01:39.311"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${getExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 16:01:39.313" level="INFO">Length is 2</msg>
<msg timestamp="20200629 16:01:39.314" level="INFO">${Length1} = 2</msg>
<status status="PASS" starttime="20200629 16:01:39.312" endtime="20200629 16:01:39.314"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${getExecution[1]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 16:01:39.316" level="INFO">${lastExecution} = [{'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0',...</msg>
<status status="PASS" starttime="20200629 16:01:39.315" endtime="20200629 16:01:39.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Set Variable</arg>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<assign>
<var>${idBuild}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]['id']}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.319" endtime="20200629 16:01:39.321"></status>
</kw>
<msg timestamp="20200629 16:01:39.322" level="INFO">${idBuild} = 347276</msg>
<status status="PASS" starttime="20200629 16:01:39.317" endtime="20200629 16:01:39.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS'</arg>
<arg>Log</arg>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>----- &gt; ID of Build(${NumVersion}) : ${idBuild}</arg>
</arguments>
<msg timestamp="20200629 16:01:39.325" level="INFO">----- &gt; ID of Build(157) : 347276</msg>
<status status="PASS" starttime="20200629 16:01:39.324" endtime="20200629 16:01:39.326"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.323" endtime="20200629 16:01:39.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>------------------------------------------------------------------------------------</arg>
</arguments>
<msg timestamp="20200629 16:01:39.327" level="INFO">------------------------------------------------------------------------------------</msg>
<status status="PASS" starttime="20200629 16:01:39.327" endtime="20200629 16:01:39.328"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:39.329" level="INFO">${numVersion} = 157</msg>
<status status="PASS" starttime="20200629 16:01:39.328" endtime="20200629 16:01:39.329"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${numVersion}-1</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<msg timestamp="20200629 16:01:39.331" level="INFO">${numVersion} = 156</msg>
<status status="PASS" starttime="20200629 16:01:39.330" endtime="20200629 16:01:39.331"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} == 0</arg>
<arg>001</arg>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<assign>
<var>${numVersion}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 0 and ${numVersion} &lt; 10</arg>
<arg>00${numVersion}</arg>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 10 and ${numVersion} &lt; 100</arg>
<arg>0${numVersion}</arg>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${numVersion} &gt; 100</arg>
<arg>${numVersion}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.334" endtime="20200629 16:01:39.335"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.333" endtime="20200629 16:01:39.335"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.332" endtime="20200629 16:01:39.336"></status>
</kw>
<msg timestamp="20200629 16:01:39.336" level="INFO">${numVersion} = 156</msg>
<status status="PASS" starttime="20200629 16:01:39.331" endtime="20200629 16:01:39.336"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${getExecution[0]}' == 'PASS' and '${idBuild}' != '-1' or '${numVersion}' == '001'</arg>
</arguments>
<msg timestamp="20200629 16:01:39.338" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200629 16:01:39.337" endtime="20200629 16:01:39.338"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.865" endtime="20200629 16:01:39.339"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:38.144" endtime="20200629 16:01:39.339"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${lastExecution}</arg>
</arguments>
<assign>
<var>${Length1}</var>
</assign>
<msg timestamp="20200629 16:01:39.340" level="INFO">Length is 1</msg>
<msg timestamp="20200629 16:01:39.340" level="INFO">${Length1} = 1</msg>
<status status="PASS" starttime="20200629 16:01:39.339" endtime="20200629 16:01:39.341"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution[0]}</arg>
</arguments>
<assign>
<var>${lastExecution}</var>
</assign>
<msg timestamp="20200629 16:01:39.342" level="INFO">${lastExecution} = {'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', ...</msg>
<status status="PASS" starttime="20200629 16:01:39.341" endtime="20200629 16:01:39.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>-----&gt; Last execution : ${lastExecution}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20200629 16:01:39.344" level="INFO">-----&gt; Last execution : {'id': '347276', 'build_id': '881', 'tester_id': '9', 'execution_ts': '2020-06-23 19:41:33', 'status': 'p', 'testplan_id': '6381', 'tcversion_id': '8695', 'tcversion_number': '1', 'platform_id': '0', 'execution_type': '2', 'execution_duration': '0.68', 'notes': 'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED'}</msg>
<status status="PASS" starttime="20200629 16:01:39.343" endtime="20200629 16:01:39.344"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['id']}</arg>
</arguments>
<assign>
<var>${lastExecutionID}</var>
</assign>
<msg timestamp="20200629 16:01:39.345" level="INFO">${lastExecutionID} = 347276</msg>
<status status="PASS" starttime="20200629 16:01:39.344" endtime="20200629 16:01:39.345"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Passed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Update Test Case In Testlink With Passed" library="CommonKeywords">
<arguments>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'=='-1'</arg>
<arg>The First Execution Passed</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.348" endtime="20200629 16:01:39.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${lastExecutionID}'!='-1'</arg>
<arg>The Next Execution Passed</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="The Next Execution Passed" library="CommonKeywords">
<doc>Get the attributes of the previous execution and update the test case.</doc>
<arguments>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['notes']}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<msg timestamp="20200629 16:01:39.352" level="INFO">${lastExecutionNotes} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 16:01:39.352" endtime="20200629 16:01:39.353"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['status']}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20200629 16:01:39.354" level="INFO">${status} = p</msg>
<status status="PASS" starttime="20200629 16:01:39.353" endtime="20200629 16:01:39.354"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastExecution['tester_id']}</arg>
</arguments>
<assign>
<var>${testerid}</var>
</assign>
<msg timestamp="20200629 16:01:39.355" level="INFO">${testerid} = 9</msg>
<status status="PASS" starttime="20200629 16:01:39.355" endtime="20200629 16:01:39.356"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${issuesPrefix}</arg>
</arguments>
<assign>
<var>${lengthIssuesPrefix}</var>
</assign>
<msg timestamp="20200629 16:01:39.357" level="INFO">Length is 2</msg>
<msg timestamp="20200629 16:01:39.357" level="INFO">${lengthIssuesPrefix} = 2</msg>
<status status="PASS" starttime="20200629 16:01:39.356" endtime="20200629 16:01:39.357"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{isIssuesPrefix}</var>
</assign>
<msg timestamp="20200629 16:01:39.358" level="INFO">@{isIssuesPrefix} = [ ]</msg>
<status status="PASS" starttime="20200629 16:01:39.358" endtime="20200629 16:01:39.359"></status>
</kw>
<kw name="${issue} IN [ @{issuesPrefix} ]" type="for">
<kw name="${issue} = TFIFT" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200629 16:01:39.362" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'TFIFT'</msg>
<status status="FAIL" starttime="20200629 16:01:39.361" endtime="20200629 16:01:39.362"></status>
</kw>
<msg timestamp="20200629 16:01:39.363" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 16:01:39.360" endtime="20200629 16:01:39.363"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200629 16:01:39.364" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 16:01:39.363" endtime="20200629 16:01:39.364"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.365" endtime="20200629 16:01:39.365"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.359" endtime="20200629 16:01:39.366"></status>
</kw>
<kw name="${issue} = JMNG" type="foritem">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${issue}</arg>
</arguments>
<msg timestamp="20200629 16:01:39.368" level="FAIL">'AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED' does not contain 'JMNG'</msg>
<status status="FAIL" starttime="20200629 16:01:39.367" endtime="20200629 16:01:39.368"></status>
</kw>
<msg timestamp="20200629 16:01:39.369" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 16:01:39.367" endtime="20200629 16:01:39.369"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${isIssue}</arg>
</arguments>
<assign>
<var>${isIssue}</var>
</assign>
<msg timestamp="20200629 16:01:39.370" level="INFO">${isIssue} = False</msg>
<status status="PASS" starttime="20200629 16:01:39.370" endtime="20200629 16:01:39.371"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>${isIssue}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.371" endtime="20200629 16:01:39.372"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.366" endtime="20200629 16:01:39.372"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.359" endtime="20200629 16:01:39.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
</arguments>
<msg timestamp="20200629 16:01:39.373" level="INFO">['False', 'False']</msg>
<status status="PASS" starttime="20200629 16:01:39.373" endtime="20200629 16:01:39.374"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>List Should Contain Value</arg>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<assign>
<var>${isIssueInList}</var>
</assign>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${isIssuesPrefix}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20200629 16:01:39.376" level="FAIL">[ False | False ] does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200629 16:01:39.375" endtime="20200629 16:01:39.376"></status>
</kw>
<msg timestamp="20200629 16:01:39.376" level="INFO">${isIssueInList} = False</msg>
<status status="PASS" starttime="20200629 16:01:39.374" endtime="20200629 16:01:39.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${isIssueInList}' == '${True}'</arg>
<arg>Get All Ticket Keys Of The Last Execution Notes</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${issuesPrefix}</arg>
<arg>${JiraUser}</arg>
<arg>${JiraToken}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${lastExecutionNotes}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.378" endtime="20200629 16:01:39.379"></status>
</kw>
<msg timestamp="20200629 16:01:39.379" level="INFO">${lastExecutionNotes} = </msg>
<status status="PASS" starttime="20200629 16:01:39.377" endtime="20200629 16:01:39.380"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${isEmpty}</var>
</assign>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${lastExecutionNotes}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.381" endtime="20200629 16:01:39.382"></status>
</kw>
<msg timestamp="20200629 16:01:39.382" level="INFO">${isEmpty} = True</msg>
<status status="PASS" starttime="20200629 16:01:39.380" endtime="20200629 16:01:39.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AUTOMATED TEST PASSED AND LAST EXECUTION TEST</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200629 16:01:39.384" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST</msg>
<status status="PASS" starttime="20200629 16:01:39.383" endtime="20200629 16:01:39.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p'</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} PASSED</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${notesFinal} FAILED</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${notesFinal} PASSED</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.385" endtime="20200629 16:01:39.386"></status>
</kw>
<msg timestamp="20200629 16:01:39.386" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 16:01:39.384" endtime="20200629 16:01:39.387"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${isIssueInList}'=='${False}' or '${isEmpty}' == '${True}'</arg>
<arg>${notesFinal}</arg>
<arg>'${isIssueInList}'=='${True}' and '${isEmpty}' != '${True}'</arg>
<arg>${notesFinal}\nKnown Associated Issues:\n${lastExecutionNotes}</arg>
</arguments>
<assign>
<var>${notesFinal}</var>
</assign>
<msg timestamp="20200629 16:01:39.388" level="INFO">${notesFinal} = AUTOMATED TEST PASSED AND LAST EXECUTION TEST PASSED</msg>
<status status="PASS" starttime="20200629 16:01:39.387" endtime="20200629 16:01:39.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}'=='p' and '${isEmpty}' == '${True}' or '${status}'=='f' and '${isEmpty}' == '${True}'</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
<arg>ELSE</arg>
<arg>Call Api Method</arg>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>f</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<kw name="Call Api Method" library="TestlinkAPILibrary">
<doc>Calls a TestLink API method and returns TestLinks server response.</doc>
<arguments>
<arg>reportTCResult</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>p</arg>
<arg>${notesFinal}</arg>
<arg>execduration=${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.390" endtime="20200629 16:01:39.667"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.389" endtime="20200629 16:01:39.668"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.350" endtime="20200629 16:01:39.668"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.349" endtime="20200629 16:01:39.669"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.347" endtime="20200629 16:01:39.669"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:39.346" endtime="20200629 16:01:39.670"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Update Test Case In Testlink With Failed</arg>
<arg>${lastExecutionID}</arg>
<arg>${lastExecution}</arg>
<arg>${testCaseID}</arg>
<arg>${testPlanID}</arg>
<arg>${latestBuildNAME}</arg>
<arg>${Elapsed}</arg>
</arguments>
<status status="PASS" starttime="20200629 16:01:39.670" endtime="20200629 16:01:39.671"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:34.552" endtime="20200629 16:01:39.671"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:34.552" endtime="20200629 16:01:39.672"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:27.826" endtime="20200629 16:01:39.672"></status>
</kw>
<status status="PASS" starttime="20200629 16:01:23.247" endtime="20200629 16:01:39.673"></status>
</kw>
<tags>
<tag>Time Out</tag>
</tags>
<status status="PASS" starttime="20200629 16:01:01.368" endtime="20200629 16:01:39.673" critical="yes"></status>
</test>
<doc>Edit Style Annotation Test cases</doc>
<metadata>
<item name="author">Mordjane Boussad</item>
</metadata>
<status status="PASS" starttime="20200629 16:01:00.674" endtime="20200629 16:01:39.675"></status>
</suite>
<status status="PASS" starttime="20200629 16:01:00.673" endtime="20200629 16:01:39.679"></status>
</suite>
<status status="PASS" starttime="20200629 16:01:00.671" endtime="20200629 16:01:39.682"></status>
</suite>
<status status="PASS" starttime="20200629 16:01:00.669" endtime="20200629 16:01:39.685"></status>
</suite>
<status status="PASS" starttime="20200629 16:01:00.668" endtime="20200629 16:01:39.688"></status>
</suite>
<status status="PASS" starttime="20200629 16:01:00.649" endtime="20200629 16:01:39.691"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Time Out</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="JMapJenkinsTests">JMapJenkinsTests</stat>
<stat pass="1" fail="0" id="s1-s1" name="Tests">JMapJenkinsTests.Tests</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Jmap 7.0">JMapJenkinsTests.Tests.Jmap 7.0</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="jmapWeb">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="Manage Annotations">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="EditStyleOfAnnotationTests">JMapJenkinsTests.Tests.Jmap 7.0.jmapWeb.Manage Annotations.EditStyleOfAnnotationTests</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200629 16:01:00.599" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-974:Modify the text color of the text annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 120.</msg>
<msg timestamp="20200629 16:01:00.600" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-975:Modify the font size of the text annotation with valid data' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 136.</msg>
<msg timestamp="20200629 16:01:00.601" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-979:Modify the line color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 215.</msg>
<msg timestamp="20200629 16:01:00.602" level="WARN">Collapsing consecutive whitespace during parsing is deprecated. Fix ' JM70-980:Modify the fill color of the Point annotation' in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\tests\jmap_7.0\jmapWeb\Manage_Annotations\EditStyleOfAnnotationTests.robot' on line 231.</msg>
<msg timestamp="20200629 16:01:00.890" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 16:01:00.890" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 16:01:00.890" level="WARN">Error in file 'C:\Users\mbous\eclipse-workspace\JMapJenkinsTests\common\admin\CommonKeywords.robot': Escaping empty cells with '\' before line continuation marker '...' is deprecated. Remove escaping before Robot Framework 3.2.</msg>
<msg timestamp="20200629 16:01:16.750" level="WARN">Keyword 'SeleniumLibrary.Press Key' is deprecated. use `Press Keys` instead.</msg>
</errors>
</robot>
